// Created by Microsoft (R) C/C++ Compiler Version 14.32.31332.0 (017d025e).
//
// D:\visualstudio\project\TGCAD\TGCAD\x64\Debug\tgassembly.tli
//
// Wrapper implementations for type library tgassembly.tlb
// compiler-generated file - DO NOT EDIT!


//
// dispinterface Parts wrapper method implementations
//

#pragma implementation_key(1)
inline IDispatchPtr TGAssembly::Parts::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2)
inline long TGAssembly::Parts::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3)
inline IDispatchPtr TGAssembly::Parts::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4)
inline TGAssembly::PartPtr TGAssembly::Parts::Item ( const _variant_t & Index ) {
    struct Part * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return PartPtr(_result, false);
}

#pragma implementation_key(5)
inline TGAssembly::PartPtr TGAssembly::Parts::AddByFilename ( _bstr_t PartFileName ) {
    struct Part * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)PartFileName);
    return PartPtr(_result, false);
}

#pragma implementation_key(6)
inline TGAssembly::PartPtr TGAssembly::Parts::AddWithTransform ( _bstr_t PartFileName, double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ ) {
    struct Part * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005\x0005\x0005", (BSTR)PartFileName, OriginX, OriginY, OriginZ, AngleX, AngleY, AngleZ);
    return PartPtr(_result, false);
}

#pragma implementation_key(7)
inline TGAssembly::PartPtr TGAssembly::Parts::AddWithMatrix ( _bstr_t PartFileName, SAFEARRAY * * Matrix ) {
    struct Part * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x6005", (BSTR)PartFileName, Matrix);
    return PartPtr(_result, false);
}

//
// dispinterface Part wrapper method implementations
//

#pragma implementation_key(8)
inline IDispatchPtr TGAssembly::Part::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(9)
inline IDispatchPtr TGAssembly::Part::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(10)
inline HRESULT TGAssembly::Part::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(11)
inline long TGAssembly::Part::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(12)
inline _bstr_t TGAssembly::Part::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(13)
inline void TGAssembly::Part::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(14)
inline _bstr_t TGAssembly::Part::GetPartFileName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(15)
inline IDispatchPtr TGAssembly::Part::GetPartDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(16)
inline VARIANT_BOOL TGAssembly::Part::GetReferenceOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(17)
inline void TGAssembly::Part::PutReferenceOnly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(18)
inline VARIANT_BOOL TGAssembly::Part::GetSubassembly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(19)
inline enum TGFramework::ObjectType TGAssembly::Part::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(20)
inline long TGAssembly::Part::GetQuantity ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(21)
inline void TGAssembly::Part::PutQuantity ( long _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(22)
inline VARIANT_BOOL TGAssembly::Part::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(23)
inline void TGAssembly::Part::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(24)
inline HRESULT TGAssembly::Part::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(25)
inline VARIANT_BOOL TGAssembly::Part::GetLocatable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(26)
inline void TGAssembly::Part::PutLocatable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(27)
inline HRESULT TGAssembly::Part::PutTransform ( double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", OriginX, OriginY, OriginZ, AngleX, AngleY, AngleZ);
}

#pragma implementation_key(28)
inline HRESULT TGAssembly::Part::GetTransform ( double * OriginX, double * OriginY, double * OriginZ, double * AngleX, double * AngleY, double * AngleZ ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", OriginX, OriginY, OriginZ, AngleX, AngleY, AngleZ);
}

#pragma implementation_key(29)
inline enum TGAssembly::PartStatusConstants TGAssembly::Part::GetStatus ( ) {
    enum PartStatusConstants _result;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(30)
inline HRESULT TGAssembly::Part::PutOrigin ( double OriginX, double OriginY, double OriginZ ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", OriginX, OriginY, OriginZ);
}

#pragma implementation_key(31)
inline HRESULT TGAssembly::Part::GetOrigin ( double * OriginX, double * OriginY, double * OriginZ ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", OriginX, OriginY, OriginZ);
}

#pragma implementation_key(32)
inline HRESULT TGAssembly::Part::Move ( double DeltaX, double DeltaY, double DeltaZ ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", DeltaX, DeltaY, DeltaZ);
}

#pragma implementation_key(33)
inline HRESULT TGAssembly::Part::Rotate ( double AxisX1, double AxisY1, double AxisZ1, double AxisX2, double AxisY2, double AxisZ2, double Angle ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005\x0005", AxisX1, AxisY1, AxisZ1, AxisX2, AxisY2, AxisZ2, Angle);
}

#pragma implementation_key(34)
inline IDispatchPtr TGAssembly::Part::GetRelations3d ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(35)
inline HRESULT TGAssembly::Part::PutMatrix ( SAFEARRAY * * Matrix, VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005\x000b", Matrix, Replace);
}

#pragma implementation_key(36)
inline HRESULT TGAssembly::Part::GetMatrix ( SAFEARRAY * * Matrix ) {
    return _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", Matrix);
}

#pragma implementation_key(37)
inline VARIANT_BOOL TGAssembly::Part::GetIncludeInBom ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(38)
inline void TGAssembly::Part::PutIncludeInBom ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(39)
inline VARIANT_BOOL TGAssembly::Part::GetDisplayInDrawings ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(40)
inline void TGAssembly::Part::PutDisplayInDrawings ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(41)
inline VARIANT_BOOL TGAssembly::Part::GetDisplayInSubAssembly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(42)
inline void TGAssembly::Part::PutDisplayInSubAssembly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(43)
inline VARIANT_BOOL TGAssembly::Part::GetIncludeInPhysicalProperties ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(44)
inline void TGAssembly::Part::PutIncludeInPhysicalProperties ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(45)
inline VARIANT_BOOL TGAssembly::Part::GetIsForeign ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(46)
inline HRESULT TGAssembly::Part::Replace ( _bstr_t NewPartFileName, VARIANT_BOOL ReplaceAll ) {
    return _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x000b", (BSTR)NewPartFileName, ReplaceAll);
}

#pragma implementation_key(47)
inline _bstr_t TGAssembly::Part::GetStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(48)
inline void TGAssembly::Part::PutStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(49)
inline IDispatchPtr TGAssembly::Part::GetFaceStyle ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(50)
inline void TGAssembly::Part::PutFaceStyle ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(51)
inline HRESULT TGAssembly::Part::MakeWritable ( ) {
    return _com_dispatch_method(this, 0x25, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(52)
inline IDispatchPtr TGAssembly::Part::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(53)
inline VARIANT_BOOL TGAssembly::Part::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IPartsAuto wrapper method implementations
//

#pragma implementation_key(54)
inline IDispatchPtr TGAssembly::_IPartsAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(55)
inline long TGAssembly::_IPartsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(56)
inline IDispatchPtr TGAssembly::_IPartsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(57)
inline TGAssembly::PartPtr TGAssembly::_IPartsAuto::Item ( const _variant_t & Index ) {
    struct Part * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartPtr(_result, false);
}

#pragma implementation_key(58)
inline IUnknownPtr TGAssembly::_IPartsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(59)
inline TGAssembly::PartPtr TGAssembly::_IPartsAuto::AddByFilename ( _bstr_t PartFileName ) {
    struct Part * _result = 0;
    HRESULT _hr = raw_AddByFilename(PartFileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartPtr(_result, false);
}

#pragma implementation_key(60)
inline TGAssembly::PartPtr TGAssembly::_IPartsAuto::AddWithTransform ( _bstr_t PartFileName, double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ ) {
    struct Part * _result = 0;
    HRESULT _hr = raw_AddWithTransform(PartFileName, OriginX, OriginY, OriginZ, AngleX, AngleY, AngleZ, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartPtr(_result, false);
}

#pragma implementation_key(61)
inline TGAssembly::PartPtr TGAssembly::_IPartsAuto::AddWithMatrix ( _bstr_t PartFileName, SAFEARRAY * * Matrix ) {
    struct Part * _result = 0;
    HRESULT _hr = raw_AddWithMatrix(PartFileName, Matrix, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartPtr(_result, false);
}

//
// interface _IPartAuto wrapper method implementations
//

#pragma implementation_key(62)
inline IDispatchPtr TGAssembly::_IPartAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(63)
inline IDispatchPtr TGAssembly::_IPartAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(64)
inline HRESULT TGAssembly::_IPartAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(65)
inline long TGAssembly::_IPartAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(66)
inline _bstr_t TGAssembly::_IPartAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(67)
inline void TGAssembly::_IPartAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(68)
inline _bstr_t TGAssembly::_IPartAuto::GetPartFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PartFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(69)
inline IDispatchPtr TGAssembly::_IPartAuto::GetPartDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PartDocument(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(70)
inline VARIANT_BOOL TGAssembly::_IPartAuto::GetReferenceOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReferenceOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(71)
inline void TGAssembly::_IPartAuto::PutReferenceOnly ( VARIANT_BOOL RefOnly ) {
    HRESULT _hr = put_ReferenceOnly(RefOnly);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(72)
inline VARIANT_BOOL TGAssembly::_IPartAuto::GetSubassembly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Subassembly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(73)
inline enum TGFramework::ObjectType TGAssembly::_IPartAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(74)
inline long TGAssembly::_IPartAuto::GetQuantity ( ) {
    long _result = 0;
    HRESULT _hr = get_Quantity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(75)
inline void TGAssembly::_IPartAuto::PutQuantity ( long Quantity ) {
    HRESULT _hr = put_Quantity(Quantity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(76)
inline VARIANT_BOOL TGAssembly::_IPartAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(77)
inline void TGAssembly::_IPartAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(78)
inline HRESULT TGAssembly::_IPartAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(79)
inline VARIANT_BOOL TGAssembly::_IPartAuto::GetLocatable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Locatable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(80)
inline void TGAssembly::_IPartAuto::PutLocatable ( VARIANT_BOOL Locatable ) {
    HRESULT _hr = put_Locatable(Locatable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(81)
inline HRESULT TGAssembly::_IPartAuto::PutTransform ( double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ ) {
    HRESULT _hr = raw_PutTransform(OriginX, OriginY, OriginZ, AngleX, AngleY, AngleZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(82)
inline HRESULT TGAssembly::_IPartAuto::GetTransform ( double * OriginX, double * OriginY, double * OriginZ, double * AngleX, double * AngleY, double * AngleZ ) {
    HRESULT _hr = raw_GetTransform(OriginX, OriginY, OriginZ, AngleX, AngleY, AngleZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(83)
inline enum TGAssembly::PartStatusConstants TGAssembly::_IPartAuto::GetStatus ( ) {
    enum PartStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(84)
inline HRESULT TGAssembly::_IPartAuto::PutOrigin ( double OriginX, double OriginY, double OriginZ ) {
    HRESULT _hr = raw_PutOrigin(OriginX, OriginY, OriginZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(85)
inline HRESULT TGAssembly::_IPartAuto::GetOrigin ( double * OriginX, double * OriginY, double * OriginZ ) {
    HRESULT _hr = raw_GetOrigin(OriginX, OriginY, OriginZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(86)
inline HRESULT TGAssembly::_IPartAuto::Move ( double DeltaX, double DeltaY, double DeltaZ ) {
    HRESULT _hr = raw_Move(DeltaX, DeltaY, DeltaZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(87)
inline HRESULT TGAssembly::_IPartAuto::Rotate ( double AxisX1, double AxisY1, double AxisZ1, double AxisX2, double AxisY2, double AxisZ2, double Angle ) {
    HRESULT _hr = raw_Rotate(AxisX1, AxisY1, AxisZ1, AxisX2, AxisY2, AxisZ2, Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(88)
inline IDispatchPtr TGAssembly::_IPartAuto::GetRelations3d ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Relations3d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(89)
inline HRESULT TGAssembly::_IPartAuto::PutMatrix ( SAFEARRAY * * Matrix, VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_PutMatrix(Matrix, Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(90)
inline HRESULT TGAssembly::_IPartAuto::GetMatrix ( SAFEARRAY * * Matrix ) {
    HRESULT _hr = raw_GetMatrix(Matrix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(91)
inline VARIANT_BOOL TGAssembly::_IPartAuto::GetIncludeInBom ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeInBom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(92)
inline void TGAssembly::_IPartAuto::PutIncludeInBom ( VARIANT_BOOL IncludeInBom ) {
    HRESULT _hr = put_IncludeInBom(IncludeInBom);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(93)
inline VARIANT_BOOL TGAssembly::_IPartAuto::GetDisplayInDrawings ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayInDrawings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(94)
inline void TGAssembly::_IPartAuto::PutDisplayInDrawings ( VARIANT_BOOL DisplayInDrawings ) {
    HRESULT _hr = put_DisplayInDrawings(DisplayInDrawings);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(95)
inline VARIANT_BOOL TGAssembly::_IPartAuto::GetDisplayInSubAssembly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayInSubAssembly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(96)
inline void TGAssembly::_IPartAuto::PutDisplayInSubAssembly ( VARIANT_BOOL DisplayInSubAssembly ) {
    HRESULT _hr = put_DisplayInSubAssembly(DisplayInSubAssembly);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(97)
inline VARIANT_BOOL TGAssembly::_IPartAuto::GetIncludeInPhysicalProperties ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeInPhysicalProperties(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(98)
inline void TGAssembly::_IPartAuto::PutIncludeInPhysicalProperties ( VARIANT_BOOL IncludeInPhysicalProperties ) {
    HRESULT _hr = put_IncludeInPhysicalProperties(IncludeInPhysicalProperties);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(99)
inline VARIANT_BOOL TGAssembly::_IPartAuto::GetIsForeign ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsForeign(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(100)
inline HRESULT TGAssembly::_IPartAuto::Replace ( _bstr_t NewPartFileName, VARIANT_BOOL ReplaceAll ) {
    HRESULT _hr = raw_Replace(NewPartFileName, ReplaceAll);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(101)
inline _bstr_t TGAssembly::_IPartAuto::GetStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(102)
inline void TGAssembly::_IPartAuto::PutStyle ( _bstr_t Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(103)
inline IDispatchPtr TGAssembly::_IPartAuto::GetFaceStyle ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FaceStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(104)
inline void TGAssembly::_IPartAuto::PutFaceStyle ( IDispatch * FaceStyle ) {
    HRESULT _hr = put_FaceStyle(FaceStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(105)
inline HRESULT TGAssembly::_IPartAuto::MakeWritable ( ) {
    HRESULT _hr = raw_MakeWritable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(106)
inline IDispatchPtr TGAssembly::_IPartAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(107)
inline VARIANT_BOOL TGAssembly::_IPartAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface Relations3d wrapper method implementations
//

#pragma implementation_key(108)
inline IDispatchPtr TGAssembly::Relations3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(109)
inline long TGAssembly::Relations3d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(110)
inline IDispatchPtr TGAssembly::Relations3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(111)
inline IDispatchPtr TGAssembly::Relations3d::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(112)
inline IDispatchPtr TGAssembly::Relations3d::AddGround ( struct Occurrence * Occurrence ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", Occurrence);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(113)
inline TGAssembly::PlanarRelation3dPtr TGAssembly::Relations3d::AddPlanar ( IDispatch * Plane1, IDispatch * Plane2, VARIANT_BOOL NormalsAligned, SAFEARRAY * * ConstrainingPoint1, SAFEARRAY * * ConstrainingPoint2 ) {
    struct PlanarRelation3d * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x000b\x6005\x6005", Plane1, Plane2, NormalsAligned, ConstrainingPoint1, ConstrainingPoint2);
    return PlanarRelation3dPtr(_result, false);
}

#pragma implementation_key(114)
inline TGAssembly::AxialRelation3dPtr TGAssembly::Relations3d::AddAxial ( IDispatch * Axis1, IDispatch * Axis2, VARIANT_BOOL NormalsAligned ) {
    struct AxialRelation3d * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x000b", Axis1, Axis2, NormalsAligned);
    return AxialRelation3dPtr(_result, false);
}

#pragma implementation_key(115)
inline TGAssembly::PointRelation3dPtr TGAssembly::Relations3d::AddPoint ( IDispatch * PointGeometry, enum Relation3dGeometryConstants PointKeyPoint, IDispatch * ConnectGeometry, const _variant_t & ConnectKeyPoint ) {
    struct PointRelation3d * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x080c", PointGeometry, PointKeyPoint, ConnectGeometry, &ConnectKeyPoint);
    return PointRelation3dPtr(_result, false);
}

#pragma implementation_key(116)
inline TGAssembly::AngularRelation3dPtr TGAssembly::Relations3d::AddAngular ( IDispatch * Element1, IDispatch * Element2, VARIANT_BOOL ReverseElement1Direction, VARIANT_BOOL ReverseElement2Direction, IDispatch * MeasureElement1, IDispatch * MeasureElement2, double Angle, VARIANT_BOOL MeasureToPositiveSide, VARIANT_BOOL MeasureFromPositiveSide, VARIANT_BOOL MeasureCCW ) {
    struct AngularRelation3d * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x000b\x000b\x0009\x0009\x0005\x000b\x000b\x000b", Element1, Element2, ReverseElement1Direction, ReverseElement2Direction, MeasureElement1, MeasureElement2, Angle, MeasureToPositiveSide, MeasureFromPositiveSide, MeasureCCW);
    return AngularRelation3dPtr(_result, false);
}

#pragma implementation_key(117)
inline TGAssembly::PointRelation3dPtr TGAssembly::Relations3d::AddPointWithInferredGeometry ( IDispatch * PointGeometry, IDispatch * SketchPoint ) {
    struct PointRelation3d * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009", PointGeometry, SketchPoint);
    return PointRelation3dPtr(_result, false);
}

#pragma implementation_key(118)
inline TGAssembly::AxialRelation3dPtr TGAssembly::Relations3d::AddAxialWithParallelOffset ( IDispatch * Axis1, IDispatch * Axis2, VARIANT_BOOL FixedOffset, double Offset ) {
    struct AxialRelation3d * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x000b\x0005", Axis1, Axis2, FixedOffset, Offset);
    return AxialRelation3dPtr(_result, false);
}

#pragma implementation_key(119)
inline TGAssembly::TangentRelation3dPtr TGAssembly::Relations3d::AddTangent ( IDispatch * Element1, IDispatch * Element2, SAFEARRAY * * ConstrainingPoint1, SAFEARRAY * * ConstrainingPoint2, double Offset, VARIANT_BOOL IsHalfSpacePositive ) {
    struct TangentRelation3d * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x6005\x6005\x0005\x000b", Element1, Element2, ConstrainingPoint1, ConstrainingPoint2, Offset, IsHalfSpacePositive);
    return TangentRelation3dPtr(_result, false);
}

#pragma implementation_key(120)
inline TGAssembly::GearRelation3dPtr TGAssembly::Relations3d::AddGear ( IDispatch * Element1, IDispatch * Element2, enum Relation3dGearTypeConstants GearType, enum Relation3dGearRatioTypeConstants RatioType, double GearRatio1, double GearRatio2, VARIANT_BOOL Flip ) {
    struct GearRelation3d * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0003\x0003\x0005\x0005\x000b", Element1, Element2, GearType, RatioType, GearRatio1, GearRatio2, Flip);
    return GearRelation3dPtr(_result, false);
}

#pragma implementation_key(121)
inline TGAssembly::CenterPlaneRelation3dPtr TGAssembly::Relations3d::AddCenterPlane ( IDispatch * PlacementElement1, IDispatch * PlacementElement2, IDispatch * TargetElement1, IDispatch * TargetElement2, SAFEARRAY * * PlacementConstrainingPoint1, SAFEARRAY * * PlacementConstrainingPoint2, SAFEARRAY * * TargetConstrainingPoint1, SAFEARRAY * * TargetConstrainingPoint2 ) {
    struct CenterPlaneRelation3d * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0009\x0009\x6005\x6005\x6005\x6005", PlacementElement1, PlacementElement2, TargetElement1, TargetElement2, PlacementConstrainingPoint1, PlacementConstrainingPoint2, TargetConstrainingPoint1, TargetConstrainingPoint2);
    return CenterPlaneRelation3dPtr(_result, false);
}

#pragma implementation_key(122)
inline TGAssembly::RigidSetRelation3dPtr TGAssembly::Relations3d::AddRigidSet ( long OccurrenceCount, SAFEARRAY * * Occurrences ) {
    struct RigidSetRelation3d * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x600d", OccurrenceCount, Occurrences);
    return RigidSetRelation3dPtr(_result, false);
}

#pragma implementation_key(123)
inline TGAssembly::CamFollowerRelation3dPtr TGAssembly::Relations3d::AddPlanarCam ( IDispatch * ConstrainingFollowerElement, SAFEARRAY * * ConstrainingCamFaces ) {
    struct CamFollowerRelation3d * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x600d", ConstrainingFollowerElement, ConstrainingCamFaces);
    return CamFollowerRelation3dPtr(_result, false);
}

#pragma implementation_key(124)
inline TGAssembly::CamFollowerRelation3dPtr TGAssembly::Relations3d::AddBarrelCam ( IDispatch * ConstrainingFollowerElement, SAFEARRAY * * ConstrainingCamEdges ) {
    struct CamFollowerRelation3d * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x600d", ConstrainingFollowerElement, ConstrainingCamEdges);
    return CamFollowerRelation3dPtr(_result, false);
}

#pragma implementation_key(125)
inline TGAssembly::PathRelation3dPtr TGAssembly::Relations3d::AddPath ( IDispatch * ConstrainingFollowerElement, SAFEARRAY * * ConstrainingCamEdges ) {
    struct PathRelation3d * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x600d", ConstrainingFollowerElement, ConstrainingCamEdges);
    return PathRelation3dPtr(_result, false);
}

#pragma implementation_key(126)
inline TGAssembly::CoordinateSystemRelation3dPtr TGAssembly::Relations3d::AddCoordinateSystem ( IDispatch * pCoordSystem1, IDispatch * pCoordSystem2 ) {
    struct CoordinateSystemRelation3d * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009", pCoordSystem1, pCoordSystem2);
    return CoordinateSystemRelation3dPtr(_result, false);
}

#pragma implementation_key(127)
inline TGAssembly::SlotRelation3dPtr TGAssembly::Relations3d::AddSlot ( IDispatch * pSlotElement, IDispatch * pPinElement, enum Relation3dSlotOffsetTypeConstants eSlotOffsetType, double dOffset ) {
    struct SlotRelation3d * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0003\x0005", pSlotElement, pPinElement, eSlotOffsetType, dOffset);
    return SlotRelation3dPtr(_result, false);
}

//
// dispinterface Occurrence wrapper method implementations
//

#pragma implementation_key(128)
inline IDispatchPtr TGAssembly::Occurrence::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(129)
inline IDispatchPtr TGAssembly::Occurrence::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(130)
inline HRESULT TGAssembly::Occurrence::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(131)
inline long TGAssembly::Occurrence::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(132)
inline _bstr_t TGAssembly::Occurrence::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(133)
inline void TGAssembly::Occurrence::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(134)
inline _bstr_t TGAssembly::Occurrence::GetPartFileName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(135)
inline IDispatchPtr TGAssembly::Occurrence::GetPartDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(136)
inline VARIANT_BOOL TGAssembly::Occurrence::GetReferenceOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(137)
inline void TGAssembly::Occurrence::PutReferenceOnly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(138)
inline VARIANT_BOOL TGAssembly::Occurrence::GetSubassembly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(139)
inline enum TGFramework::ObjectType TGAssembly::Occurrence::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(140)
inline long TGAssembly::Occurrence::GetQuantity ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(141)
inline void TGAssembly::Occurrence::PutQuantity ( long _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(142)
inline VARIANT_BOOL TGAssembly::Occurrence::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(143)
inline void TGAssembly::Occurrence::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(144)
inline HRESULT TGAssembly::Occurrence::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(145)
inline VARIANT_BOOL TGAssembly::Occurrence::GetLocatable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(146)
inline void TGAssembly::Occurrence::PutLocatable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(147)
inline HRESULT TGAssembly::Occurrence::PutTransform ( double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", OriginX, OriginY, OriginZ, AngleX, AngleY, AngleZ);
}

#pragma implementation_key(148)
inline HRESULT TGAssembly::Occurrence::GetTransform ( double * OriginX, double * OriginY, double * OriginZ, double * AngleX, double * AngleY, double * AngleZ ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", OriginX, OriginY, OriginZ, AngleX, AngleY, AngleZ);
}

#pragma implementation_key(149)
inline enum TGAssembly::OccurrenceStatusConstants TGAssembly::Occurrence::GetStatus ( ) {
    enum OccurrenceStatusConstants _result;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(150)
inline HRESULT TGAssembly::Occurrence::PutOrigin ( double OriginX, double OriginY, double OriginZ ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", OriginX, OriginY, OriginZ);
}

#pragma implementation_key(151)
inline HRESULT TGAssembly::Occurrence::GetOrigin ( double * OriginX, double * OriginY, double * OriginZ ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", OriginX, OriginY, OriginZ);
}

#pragma implementation_key(152)
inline HRESULT TGAssembly::Occurrence::Move ( double DeltaX, double DeltaY, double DeltaZ ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", DeltaX, DeltaY, DeltaZ);
}

#pragma implementation_key(153)
inline HRESULT TGAssembly::Occurrence::Rotate ( double AxisX1, double AxisY1, double AxisZ1, double AxisX2, double AxisY2, double AxisZ2, double Angle ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005\x0005", AxisX1, AxisY1, AxisZ1, AxisX2, AxisY2, AxisZ2, Angle);
}

#pragma implementation_key(154)
inline IDispatchPtr TGAssembly::Occurrence::GetRelations3d ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(155)
inline HRESULT TGAssembly::Occurrence::PutMatrix ( SAFEARRAY * * Matrix, VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005\x000b", Matrix, Replace);
}

#pragma implementation_key(156)
inline HRESULT TGAssembly::Occurrence::GetMatrix ( SAFEARRAY * * Matrix ) {
    return _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", Matrix);
}

#pragma implementation_key(157)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIncludeInBom ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(158)
inline void TGAssembly::Occurrence::PutIncludeInBom ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(159)
inline VARIANT_BOOL TGAssembly::Occurrence::GetDisplayInDrawings ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(160)
inline void TGAssembly::Occurrence::PutDisplayInDrawings ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(161)
inline VARIANT_BOOL TGAssembly::Occurrence::GetDisplayInSubAssembly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(162)
inline void TGAssembly::Occurrence::PutDisplayInSubAssembly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(163)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIncludeInPhysicalProperties ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(164)
inline void TGAssembly::Occurrence::PutIncludeInPhysicalProperties ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(165)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIsForeign ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(166)
inline HRESULT TGAssembly::Occurrence::Replace ( _bstr_t NewOccurrenceFileName, VARIANT_BOOL ReplaceAll, const _variant_t & NewFamilyMemberName ) {
    return _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x000b\x080c", (BSTR)NewOccurrenceFileName, ReplaceAll, &NewFamilyMemberName);
}

#pragma implementation_key(167)
inline VARIANT_BOOL TGAssembly::Occurrence::RenameFileName ( _bstr_t NewOccurrenceFileName ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)NewOccurrenceFileName);
    return _result;
}

#pragma implementation_key(168)
inline HRESULT TGAssembly::Occurrence::Mirror ( IDispatch * pPlane ) {
    return _com_dispatch_method(this, 0x43, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", pPlane);
}

#pragma implementation_key(169)
inline _bstr_t TGAssembly::Occurrence::GetStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(170)
inline void TGAssembly::Occurrence::PutStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(171)
inline IDispatchPtr TGAssembly::Occurrence::GetFaceStyle ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(172)
inline void TGAssembly::Occurrence::PutFaceStyle ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(173)
inline HRESULT TGAssembly::Occurrence::MakeWritable ( ) {
    return _com_dispatch_method(this, 0x25, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(174)
inline IDispatchPtr TGAssembly::Occurrence::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(175)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(176)
inline _bstr_t TGAssembly::Occurrence::GetOccurrenceFileName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(177)
inline IDispatchPtr TGAssembly::Occurrence::GetOccurrenceDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(178)
inline void TGAssembly::Occurrence::PutActivate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(179)
inline VARIANT_BOOL TGAssembly::Occurrence::GetActivate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(180)
inline TGAssembly::AssemblyDocumentPtr TGAssembly::Occurrence::GetTopLevelDocument ( ) {
    struct AssemblyDocument * _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyDocumentPtr(_result, false);
}

#pragma implementation_key(181)
inline HRESULT TGAssembly::Occurrence::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize ) {
    return _com_dispatch_method(this, 0x2a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6011\x480c", ReferenceKey, KeySize);
}

#pragma implementation_key(182)
inline TGAssembly::SubOccurrencesPtr TGAssembly::Occurrence::GetSubOccurrences ( ) {
    struct SubOccurrences * _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SubOccurrencesPtr(_result, false);
}

#pragma implementation_key(183)
inline HRESULT TGAssembly::Occurrence::CreateTopologyReference ( SAFEARRAY * * ReferenceKey, struct TopologyReference * * TopologyReference ) {
    return _com_dispatch_method(this, 0x2c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6011\x4009", ReferenceKey, TopologyReference);
}

#pragma implementation_key(184)
inline VARIANT_BOOL TGAssembly::Occurrence::IsTube ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(185)
inline TGAssembly::TubePtr TGAssembly::Occurrence::GetTube ( ) {
    struct Tube * _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TubePtr(_result, false);
}

#pragma implementation_key(186)
inline double TGAssembly::Occurrence::GetNongraphicQuantity ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(187)
inline void TGAssembly::Occurrence::PutNongraphicQuantity ( double _arg1 ) {
    _com_dispatch_method(this, 0x2f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(188)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIsNongraphic ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(189)
inline VARIANT_BOOL TGAssembly::Occurrence::GetHasNongraphicQuantity ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(190)
inline long TGAssembly::Occurrence::GetNongraphicPrecision ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(191)
inline _bstr_t TGAssembly::Occurrence::GetNongraphicDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(192)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIsFamilyOfAssembly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(193)
inline HRESULT TGAssembly::Occurrence::SwapFamilyMember ( _bstr_t MemberName, VARIANT_BOOL SwapAllOccurrences ) {
    return _com_dispatch_method(this, 0x35, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x000b", (BSTR)MemberName, SwapAllOccurrences);
}

#pragma implementation_key(194)
inline void TGAssembly::Occurrence::PutUseSimplified ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(195)
inline VARIANT_BOOL TGAssembly::Occurrence::GetUseSimplified ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(196)
inline VARIANT_BOOL TGAssembly::Occurrence::GetDisplayReferencePlanes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(197)
inline void TGAssembly::Occurrence::PutDisplayReferencePlanes ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(198)
inline VARIANT_BOOL TGAssembly::Occurrence::GetDisplayCoordinateSystems ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x38, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(199)
inline void TGAssembly::Occurrence::PutDisplayCoordinateSystems ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x38, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(200)
inline VARIANT_BOOL TGAssembly::Occurrence::GetDisplayConstructions ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(201)
inline void TGAssembly::Occurrence::PutDisplayConstructions ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(202)
inline VARIANT_BOOL TGAssembly::Occurrence::GetDisplayConstrCurves ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(203)
inline void TGAssembly::Occurrence::PutDisplayConstrCurves ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(204)
inline VARIANT_BOOL TGAssembly::Occurrence::GetDisplayReferenceAxes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(205)
inline void TGAssembly::Occurrence::PutDisplayReferenceAxes ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(206)
inline VARIANT_BOOL TGAssembly::Occurrence::GetDisplaySketches ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(207)
inline void TGAssembly::Occurrence::PutDisplaySketches ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(208)
inline VARIANT_BOOL TGAssembly::Occurrence::GetDisplayAsLastSaved ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(209)
inline void TGAssembly::Occurrence::PutDisplayAsLastSaved ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(210)
inline void TGAssembly::Occurrence::PutAdjustable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(211)
inline VARIANT_BOOL TGAssembly::Occurrence::GetAdjustable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(212)
inline IDispatchPtr TGAssembly::Occurrence::GetFaceStyle2 ( VARIANT_BOOL vbHonourPrefs ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000b", vbHonourPrefs);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(213)
inline TGAssembly::AdjustablePartPtr TGAssembly::Occurrence::MakeAdjustablePart ( ) {
    struct AdjustablePart * _result = 0;
    _com_dispatch_method(this, 0x40, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return AdjustablePartPtr(_result, false);
}

#pragma implementation_key(214)
inline TGAssembly::AdjustablePartPtr TGAssembly::Occurrence::GetAdjustablePart ( ) {
    struct AdjustablePart * _result = 0;
    _com_dispatch_method(this, 0x41, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return AdjustablePartPtr(_result, false);
}

#pragma implementation_key(215)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIsAdjustablePart ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x42, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(216)
inline VARIANT_BOOL TGAssembly::Occurrence::IsAlternateComponent ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x44, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(217)
inline HRESULT TGAssembly::Occurrence::AddAlternateComponent ( _bstr_t AlternateComponentFileName ) {
    return _com_dispatch_method(this, 0x45, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)AlternateComponentFileName);
}

#pragma implementation_key(218)
inline HRESULT TGAssembly::Occurrence::RemoveAlternateComponent ( _bstr_t AlternateComponentFileName ) {
    return _com_dispatch_method(this, 0x46, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)AlternateComponentFileName);
}

#pragma implementation_key(219)
inline HRESULT TGAssembly::Occurrence::RemoveAllAlternateComponents ( ) {
    return _com_dispatch_method(this, 0x47, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(220)
inline HRESULT TGAssembly::Occurrence::GetAllAlternateComponents ( long * AlternateComponentCount, SAFEARRAY * * AlternateComponentFileNames ) {
    return _com_dispatch_method(this, 0x48, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6008", AlternateComponentCount, AlternateComponentFileNames);
}

#pragma implementation_key(221)
inline VARIANT_BOOL TGAssembly::Occurrence::GetHasBodyOverride ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x49, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(222)
inline IDispatchPtr TGAssembly::Occurrence::GetBody ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(223)
inline HRESULT TGAssembly::Occurrence::GetSimplifiedBodies ( long * NumBodies, SAFEARRAY * * SimplifiedBodies ) {
    return _com_dispatch_method(this, 0x4b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumBodies, SimplifiedBodies);
}

#pragma implementation_key(224)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIsPatterned ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(225)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIsPatternItem ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(226)
inline HRESULT TGAssembly::Occurrence::CaptureRelationships ( long RelationshipCount, SAFEARRAY * * RelationshipsToCapture ) {
    return _com_dispatch_method(this, 0x4e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009", RelationshipCount, RelationshipsToCapture);
}

#pragma implementation_key(227)
inline HRESULT TGAssembly::Occurrence::ClearCapturedRelationships ( ) {
    return _com_dispatch_method(this, 0x4f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(228)
inline HRESULT TGAssembly::Occurrence::GetBodyInversionMatrix ( SAFEARRAY * * InvMatrix ) {
    return _com_dispatch_method(this, 0x50, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", InvMatrix);
}

#pragma implementation_key(229)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIncludeInInterference ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x51, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(230)
inline void TGAssembly::Occurrence::PutIncludeInInterference ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x51, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(231)
inline VARIANT_BOOL TGAssembly::Occurrence::GetDisplayAsReference ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x52, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(232)
inline void TGAssembly::Occurrence::PutDisplayAsReference ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x52, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(233)
inline TGAssembly::SubassemblyBodiesPtr TGAssembly::Occurrence::GetSubassemblyBodies ( ) {
    struct SubassemblyBodies * _result = 0;
    _com_dispatch_method(this, 0x53, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SubassemblyBodiesPtr(_result, false);
}

#pragma implementation_key(234)
inline HRESULT TGAssembly::Occurrence::GetExplodeMatrix ( SAFEARRAY * * Matrix ) {
    return _com_dispatch_method(this, 0x54, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", Matrix);
}

#pragma implementation_key(235)
inline HRESULT TGAssembly::Occurrence::RemoveOverrideBody ( ) {
    return _com_dispatch_method(this, 0x55, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(236)
inline HRESULT TGAssembly::Occurrence::GetRangeBox ( SAFEARRAY * * MinRangePoint, SAFEARRAY * * MaxRangePoint ) {
    return _com_dispatch_method(this, 0x56, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005\x6005", MinRangePoint, MaxRangePoint);
}

#pragma implementation_key(237)
inline HRESULT TGAssembly::Occurrence::RetrieveHoleLocation ( ) {
    return _com_dispatch_method(this, 0x57, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(238)
inline HRESULT TGAssembly::Occurrence::DeleteHoleLocation ( ) {
    return _com_dispatch_method(this, 0x58, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(239)
inline HRESULT TGAssembly::Occurrence::GetInterpartDrivingOccurrences ( long * NumDrivingOccurrences, SAFEARRAY * * DrivingOccurrences ) {
    return _com_dispatch_method(this, 0x59, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumDrivingOccurrences, DrivingOccurrences);
}

#pragma implementation_key(240)
inline HRESULT TGAssembly::Occurrence::GetInterpartDrivenOccurrences ( long * NumDrivenOccurrences, SAFEARRAY * * DrivenOccurrences ) {
    return _com_dispatch_method(this, 0x5a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumDrivenOccurrences, DrivenOccurrences);
}

#pragma implementation_key(241)
inline int TGAssembly::Occurrence::GetItemNumber ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x5b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(242)
inline void TGAssembly::Occurrence::PutItemNumber ( int _arg1 ) {
    _com_dispatch_method(this, 0x5b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(243)
inline VARIANT_BOOL TGAssembly::Occurrence::GetReferencePlanesVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(244)
inline void TGAssembly::Occurrence::PutReferencePlanesVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(245)
inline VARIANT_BOOL TGAssembly::Occurrence::GetCoordinateSystemsVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(246)
inline void TGAssembly::Occurrence::PutCoordinateSystemsVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(247)
inline VARIANT_BOOL TGAssembly::Occurrence::GetSketchesVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(248)
inline void TGAssembly::Occurrence::PutSketchesVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(249)
inline HRESULT TGAssembly::Occurrence::CreateTopologyReferenceToBodyOverride ( SAFEARRAY * * ReferenceKey, struct TopologyReference * * TopologyReference ) {
    return _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6011\x4009", ReferenceKey, TopologyReference);
}

#pragma implementation_key(250)
inline HRESULT TGAssembly::Occurrence::ResetName ( ) {
    return _com_dispatch_method(this, 0x60, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(251)
inline VARIANT_BOOL TGAssembly::Occurrence::GetHasUserDefinedName ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x61, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(252)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIsStructuralFrameItem ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x62, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(253)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIsWire ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x63, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(254)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIsPipeFitting ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(255)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIsPipeSegment ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(256)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIsFastenerSystemItem ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(257)
inline HRESULT TGAssembly::Occurrence::Range ( double * x_min, double * y_min, double * z_min, double * x_max, double * y_max, double * z_max ) {
    return _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", x_min, y_min, z_min, x_max, y_max, z_max);
}

#pragma implementation_key(258)
inline VARIANT_BOOL TGAssembly::Occurrence::GetDisplayCenterline ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(259)
inline void TGAssembly::Occurrence::PutDisplayCenterline ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(260)
inline enum TGFramework::ObjectType TGAssembly::Occurrence::GetNodeType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(261)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIsCopy ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(262)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIsFamilyOfParts ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(263)
inline HRESULT TGAssembly::Occurrence::GetSimplifiedBodies2 ( long * NumBodies, SAFEARRAY * * SimplifiedBodies, SAFEARRAY * * Transforms ) {
    return _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009\x600c", NumBodies, SimplifiedBodies, Transforms);
}

#pragma implementation_key(264)
inline VARIANT_BOOL TGAssembly::Occurrence::FileMissing ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(265)
inline VARIANT_BOOL TGAssembly::Occurrence::RecheckMissingFile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(266)
inline VARIANT_BOOL TGAssembly::Occurrence::GetDisplayLiveSections ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(267)
inline void TGAssembly::Occurrence::PutDisplayLiveSections ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(268)
inline VARIANT_BOOL TGAssembly::Occurrence::GetDisplayDimensions ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(269)
inline void TGAssembly::Occurrence::PutDisplayDimensions ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(270)
inline VARIANT_BOOL TGAssembly::Occurrence::GetDisplayAnnotations ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(271)
inline void TGAssembly::Occurrence::PutDisplayAnnotations ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(272)
inline VARIANT_BOOL TGAssembly::Occurrence::GetDisplayDesignBody ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(273)
inline void TGAssembly::Occurrence::PutDisplayDesignBody ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(274)
inline _bstr_t TGAssembly::Occurrence::GetCustomPropertyValue ( _bstr_t CustomPropertyName ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x0008", (BSTR)CustomPropertyName);
    return _bstr_t(_result, false);
}

#pragma implementation_key(275)
inline void TGAssembly::Occurrence::PutCustomPropertyValue ( _bstr_t CustomPropertyName, _bstr_t _arg2 ) {
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)CustomPropertyName, (BSTR)_arg2);
}

#pragma implementation_key(276)
inline HRESULT TGAssembly::Occurrence::FrameSaveAs ( _bstr_t FileName ) {
    return _com_dispatch_method(this, 0x74, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)FileName);
}

#pragma implementation_key(277)
inline HRESULT TGAssembly::Occurrence::FrameSaveAsTranslated ( _bstr_t FileName ) {
    return _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)FileName);
}

#pragma implementation_key(278)
inline HRESULT TGAssembly::Occurrence::PutStyleUsePartStyle ( ) {
    return _com_dispatch_method(this, 0x76, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(279)
inline HRESULT TGAssembly::Occurrence::PutStyleNone ( ) {
    return _com_dispatch_method(this, 0x77, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(280)
inline VARIANT_BOOL TGAssembly::Occurrence::GetStyleNone ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(281)
inline VARIANT_BOOL TGAssembly::Occurrence::GetStyleUsePartStyle ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(282)
inline _bstr_t TGAssembly::Occurrence::FrameSaveAsBiDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008\x0008", (BSTR)FilePath, (BSTR)DocumentNumber, (BSTR)Revision, (BSTR)Title);
    return _bstr_t(_result, false);
}

#pragma implementation_key(283)
inline IDispatchPtr TGAssembly::Occurrence::BindKeyToTopology ( VARIANT_BOOL BodyOverride, SAFEARRAY * * ReferenceKey ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000b\x6011", BodyOverride, ReferenceKey);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(284)
inline long TGAssembly::Occurrence::GetOccurrenceID ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(285)
inline HRESULT TGAssembly::Occurrence::GetSectionedFacetData ( long PartID, enum OccurrenceSectionedFacetDataConstants * FacetDataPresence, long * FacetCount, SAFEARRAY * * Points, SAFEARRAY * * Normals, SAFEARRAY * * TextureCoords, SAFEARRAY * * StyleIDs, SAFEARRAY * * FaceIDs ) {
    return _com_dispatch_method(this, 0x7d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003\x4003\x6005\x6005\x6005\x6003\x6003", PartID, FacetDataPresence, FacetCount, Points, Normals, TextureCoords, StyleIDs, FaceIDs);
}

#pragma implementation_key(286)
inline HRESULT TGAssembly::Occurrence::CutLength ( double * dCutLength ) {
    return _com_dispatch_method(this, 0x7e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005", dCutLength);
}

#pragma implementation_key(287)
inline HRESULT TGAssembly::Occurrence::MiterCut ( double * MiterCut1, double * MiterCut2 ) {
    return _com_dispatch_method(this, 0x7f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", MiterCut1, MiterCut2);
}

#pragma implementation_key(288)
inline HRESULT TGAssembly::Occurrence::SideFaceEndAngle ( double * SideFaceEndAngle1, double * SideFaceEndAngle2 ) {
    return _com_dispatch_method(this, 0x80, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", SideFaceEndAngle1, SideFaceEndAngle2);
}

#pragma implementation_key(289)
inline HRESULT TGAssembly::Occurrence::EndFaceEndAngle ( double * EndFaceEndAngle1, double * EndFaceEndAngle2 ) {
    return _com_dispatch_method(this, 0x81, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", EndFaceEndAngle1, EndFaceEndAngle2);
}

#pragma implementation_key(290)
inline VARIANT_BOOL TGAssembly::Occurrence::GetIsInternalComponent ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(291)
inline TGAssembly::InternalComponentPtr TGAssembly::Occurrence::GetInternalComponent ( ) {
    struct InternalComponent * _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return InternalComponentPtr(_result, false);
}

#pragma implementation_key(292)
inline TGPart::SuppressVariablePtr TGAssembly::Occurrence::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(293)
inline TGPart::SuppressVariablePtr TGAssembly::Occurrence::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(294)
inline HRESULT TGAssembly::Occurrence::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(295)
inline VARIANT_BOOL TGAssembly::Occurrence::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface AssemblyDocument wrapper method implementations
//

#pragma implementation_key(296)
inline HRESULT TGAssembly::AssemblyDocument::Activate ( ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(297)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyDocument::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(298)
inline HRESULT TGAssembly::AssemblyDocument::Close ( const _variant_t & SaveChanges, const _variant_t & FileName, const _variant_t & RouteWorkbook ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c", &SaveChanges, &FileName, &RouteWorkbook);
}

#pragma implementation_key(299)
inline _bstr_t TGAssembly::AssemblyDocument::GetFullName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(300)
inline _bstr_t TGAssembly::AssemblyDocument::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(301)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyDocument::GetParent ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(302)
inline _bstr_t TGAssembly::AssemblyDocument::GetPath ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(303)
inline HRESULT TGAssembly::AssemblyDocument::PrintOut ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & PrintRange, const _variant_t & Sheets, const _variant_t & ColorAsBlack, const _variant_t & Collate ) {
    return _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Printer, &NumCopies, &Orientation, &PaperSize, &Scale, &PrintToFile, &OutputFileName, &PrintRange, &Sheets, &ColorAsBlack, &Collate);
}

#pragma implementation_key(304)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(305)
inline IDispatchPtr TGAssembly::AssemblyDocument::GetRoutingSlip ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(306)
inline HRESULT TGAssembly::AssemblyDocument::Save ( ) {
    return _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(307)
inline HRESULT TGAssembly::AssemblyDocument::SaveAs ( _bstr_t NewName, const _variant_t & IsATemplate, const _variant_t & FileFormat, const _variant_t & ReadOnlyEnforced, const _variant_t & ReadOnlyRecommended, const _variant_t & NewStatus, const _variant_t & CreateBackup, const _variant_t & UpdateLinkInContainer, const _variant_t & UpdateAllLinksInContainer ) {
    return _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", (BSTR)NewName, &IsATemplate, &FileFormat, &ReadOnlyEnforced, &ReadOnlyRecommended, &NewStatus, &CreateBackup, &UpdateLinkInContainer, &UpdateAllLinksInContainer);
}

#pragma implementation_key(308)
inline HRESULT TGAssembly::AssemblyDocument::SaveCopyAs ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x24, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

#pragma implementation_key(309)
inline HRESULT TGAssembly::AssemblyDocument::SaveAsJT ( _bstr_t NewName, const _variant_t & Include_PreciseGeom, const _variant_t & Prod_Structure_Option, const _variant_t & Export_PMI, const _variant_t & Export_CoordinateSystem, const _variant_t & Export_3DBodies, const _variant_t & NumberofLODs, const _variant_t & JTFileUnit, const _variant_t & Write_Which_Files, const _variant_t & Use_Simplified_TopAsm, const _variant_t & Use_Simplified_SubAsm, const _variant_t & Use_Simplified_Part, const _variant_t & EnableDefaultOutputPath, const _variant_t & IncludeSEProperties, const _variant_t & Export_VisiblePartsOnly, const _variant_t & Export_VisibleConstructionsOnly, const _variant_t & RemoveUnsafeCharacters, const _variant_t & ExportSEPartFileAsSingleJTFile ) {
    return _com_dispatch_method(this, 0x5b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", (BSTR)NewName, &Include_PreciseGeom, &Prod_Structure_Option, &Export_PMI, &Export_CoordinateSystem, &Export_3DBodies, &NumberofLODs, &JTFileUnit, &Write_Which_Files, &Use_Simplified_TopAsm, &Use_Simplified_SubAsm, &Use_Simplified_Part, &EnableDefaultOutputPath, &IncludeSEProperties, &Export_VisiblePartsOnly, &Export_VisibleConstructionsOnly, &RemoveUnsafeCharacters, &ExportSEPartFileAsSingleJTFile);
}

#pragma implementation_key(310)
inline _bstr_t TGAssembly::AssemblyDocument::SaveAsBIDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5e, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008\x0008", (BSTR)FilePath, (BSTR)DocumentNumber, (BSTR)Revision, (BSTR)Title);
    return _bstr_t(_result, false);
}

#pragma implementation_key(311)
inline _bstr_t TGAssembly::AssemblyDocument::ReviseBIDM ( _bstr_t FilePath, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008", (BSTR)FilePath, (BSTR)Revision, (BSTR)Title);
    return _bstr_t(_result, false);
}

#pragma implementation_key(312)
inline TGFramework::SelectSetPtr TGAssembly::AssemblyDocument::GetSelectSet ( ) {
    struct TGFramework::SelectSet * _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::SelectSetPtr(_result, false);
}

#pragma implementation_key(313)
inline HRESULT TGAssembly::AssemblyDocument::SendMail ( const _variant_t & Recipients, const _variant_t & Subject, const _variant_t & ReturnReceipt ) {
    return _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c", &Recipients, &Subject, &ReturnReceipt);
}

#pragma implementation_key(314)
inline IDispatchPtr TGAssembly::AssemblyDocument::GetSummaryInfo ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(315)
inline TGFramework::WindowsPtr TGAssembly::AssemblyDocument::GetWindows ( ) {
    struct TGFramework::Windows * _result = 0;
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::WindowsPtr(_result, false);
}

#pragma implementation_key(316)
inline IDispatchPtr TGAssembly::AssemblyDocument::GetProperties ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(317)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetIsTemplate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(318)
inline void TGAssembly::AssemblyDocument::PutIsTemplate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(319)
inline enum TGFramework::DocumentStatus TGAssembly::AssemblyDocument::GetStatus ( ) {
    enum TGFramework::DocumentStatus _result;
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(320)
inline void TGAssembly::AssemblyDocument::PutStatus ( enum TGFramework::DocumentStatus _arg1 ) {
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(321)
inline HRESULT TGAssembly::AssemblyDocument::EditProperties ( ) {
    return _com_dispatch_method(this, 0x3e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(322)
inline TGFramework::UnitsOfMeasurePtr TGAssembly::AssemblyDocument::GetUnitsOfMeasure ( ) {
    struct TGFramework::UnitsOfMeasure * _result = 0;
    _com_dispatch_method(this, 0x44, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::UnitsOfMeasurePtr(_result, false);
}

#pragma implementation_key(323)
inline IDispatchPtr TGAssembly::AssemblyDocument::GetActiveSketch ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x45, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(324)
inline enum TGFramework::DocumentTypeConstants TGAssembly::AssemblyDocument::GetType ( ) {
    enum TGFramework::DocumentTypeConstants _result;
    _com_dispatch_method(this, 0x46, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(325)
inline IUnknownPtr TGAssembly::AssemblyDocument::GetDocumentEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x47, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(326)
inline IUnknownPtr TGAssembly::AssemblyDocument::GetRootStorage ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0x48, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(327)
inline IUnknownPtr TGAssembly::AssemblyDocument::GetAddInsStorage ( _bstr_t Name, long grfMode ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0x49, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, grfMode);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(328)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetDirty ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(329)
inline void TGAssembly::AssemblyDocument::PutDirty ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(330)
inline TGFramework::AttributeQueryPtr TGAssembly::AssemblyDocument::GetAttributeQuery ( ) {
    struct TGFramework::AttributeQuery * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::AttributeQueryPtr(_result, false);
}

#pragma implementation_key(331)
inline _bstr_t TGAssembly::AssemblyDocument::GetCreatedVersion ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(332)
inline _bstr_t TGAssembly::AssemblyDocument::GetLastSavedVersion ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(333)
inline TGFramework::HighlightSetsPtr TGAssembly::AssemblyDocument::GetHighlightSets ( ) {
    struct TGFramework::HighlightSets * _result = 0;
    _com_dispatch_method(this, 0x4d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::HighlightSetsPtr(_result, false);
}

#pragma implementation_key(334)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetInPlaceActivated ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(335)
inline HRESULT TGAssembly::AssemblyDocument::SeekWriteAccess ( VARIANT_BOOL * WriteAccess ) {
    return _com_dispatch_method(this, 0x4f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", WriteAccess);
}

#pragma implementation_key(336)
inline long TGAssembly::AssemblyDocument::GetUndoSteps ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x54, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(337)
inline void TGAssembly::AssemblyDocument::PutUndoSteps ( long _arg1 ) {
    _com_dispatch_method(this, 0x54, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(338)
inline HRESULT TGAssembly::AssemblyDocument::CreatePreview ( ) {
    return _com_dispatch_method(this, 0x59, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(339)
inline void TGAssembly::AssemblyDocument::PutReadOnly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(340)
inline HRESULT TGAssembly::AssemblyDocument::SeekReadOnlyAccess ( VARIANT_BOOL * ReadOnlyAccess ) {
    return _com_dispatch_method(this, 0x5a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", ReadOnlyAccess);
}

#pragma implementation_key(341)
inline HRESULT TGAssembly::AssemblyDocument::ImportStyles2 ( enum TGFramework::seStyleTypeConstants StyleType, VARIANT_BOOL bReplace, IDispatch * pSrcDocument ) {
    return _com_dispatch_method(this, 0x5c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000b\x0009", StyleType, bReplace, pSrcDocument);
}

#pragma implementation_key(342)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetIsInsightFile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(343)
inline TGFramework::NamedViewsPtr TGAssembly::AssemblyDocument::GetNamedViews ( ) {
    struct TGFramework::NamedViews * _result = 0;
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::NamedViewsPtr(_result, false);
}

#pragma implementation_key(344)
inline HRESULT TGAssembly::AssemblyDocument::GetRegisteredCustomPropertiesBiDM ( VARIANT * varPropInfo ) {
    return _com_dispatch_method(this, 0x60, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", varPropInfo);
}

#pragma implementation_key(345)
inline _bstr_t TGAssembly::AssemblyDocument::SaveAsWithCustomPropertiesBIDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x61, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008\x0008\x000c", (BSTR)FilePath, (BSTR)DocumentNumber, (BSTR)Revision, (BSTR)Title, &varPropInfo);
    return _bstr_t(_result, false);
}

#pragma implementation_key(346)
inline _bstr_t TGAssembly::AssemblyDocument::ReviseWithCustomPropertiesBIDM ( _bstr_t FilePath, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x62, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008\x000c", (BSTR)FilePath, (BSTR)Revision, (BSTR)Title, &varPropInfo);
    return _bstr_t(_result, false);
}

#pragma implementation_key(347)
inline HRESULT TGAssembly::AssemblyDocument::SaveAsPRC ( _bstr_t FileName ) {
    return _com_dispatch_method(this, 0x63, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)FileName);
}

#pragma implementation_key(348)
inline IDispatchPtr TGAssembly::AssemblyDocument::GetVariables ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(349)
inline IDispatchPtr TGAssembly::AssemblyDocument::GetInterpartLinks ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6061, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(350)
inline HRESULT TGAssembly::AssemblyDocument::FreezeAllInterpartLinks ( ) {
    return _com_dispatch_method(this, 0x6062, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(351)
inline HRESULT TGAssembly::AssemblyDocument::BreakAllInterpartLinks ( ) {
    return _com_dispatch_method(this, 0x606d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(352)
inline HRESULT TGAssembly::AssemblyDocument::ThawAllInterpartLinks ( ) {
    return _com_dispatch_method(this, 0x6063, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(353)
inline HRESULT TGAssembly::AssemblyDocument::HasInterpartLinks ( VARIANT_BOOL * pbHasInterpartLinks ) {
    return _com_dispatch_method(this, 0x6064, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", pbHasInterpartLinks);
}

#pragma implementation_key(354)
inline HRESULT TGAssembly::AssemblyDocument::GetInContextAssemblyNameForInterpartLinks ( BSTR * pbstrAssemblyName ) {
    return _com_dispatch_method(this, 0x6065, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", pbstrAssemblyName);
}

#pragma implementation_key(355)
inline _variant_t TGAssembly::AssemblyDocument::NewWindow ( const _variant_t & NewWindowOptions, const _variant_t & Environment ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x2014, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &NewWindowOptions, &Environment);
    return _variant_t(_result, false);
}

#pragma implementation_key(356)
inline HRESULT TGAssembly::AssemblyDocument::NewNavigatorWindow ( ) {
    return _com_dispatch_method(this, 0x2001, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(357)
inline TGAssembly::PartsPtr TGAssembly::AssemblyDocument::GetParts ( ) {
    struct Parts * _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PartsPtr(_result, false);
}

#pragma implementation_key(358)
inline TGAssembly::Relations3dPtr TGAssembly::AssemblyDocument::GetRelations3d ( ) {
    struct Relations3d * _result = 0;
    _com_dispatch_method(this, 0x4002, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Relations3dPtr(_result, false);
}

#pragma implementation_key(359)
inline TGAssembly::PhysicalPropertiesPtr TGAssembly::AssemblyDocument::GetPhysicalProperties ( ) {
    struct PhysicalProperties * _result = 0;
    _com_dispatch_method(this, 0x4004, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PhysicalPropertiesPtr(_result, false);
}

#pragma implementation_key(360)
inline IDispatchPtr TGAssembly::AssemblyDocument::GetFaceStyles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4005, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(361)
inline IDispatchPtr TGAssembly::AssemblyDocument::CreateReference ( struct Occurrence * Occurrence, const _variant_t & Entity ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x000c", Occurrence, &Entity);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(362)
inline TGAssembly::OccurrencesPtr TGAssembly::AssemblyDocument::GetOccurrences ( ) {
    struct Occurrences * _result = 0;
    _com_dispatch_method(this, 0x4006, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencesPtr(_result, false);
}

#pragma implementation_key(363)
inline TGAssembly::AsmRefPlanesPtr TGAssembly::AssemblyDocument::GetAsmRefPlanes ( ) {
    struct AsmRefPlanes * _result = 0;
    _com_dispatch_method(this, 0x6002, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AsmRefPlanesPtr(_result, false);
}

#pragma implementation_key(364)
inline HRESULT TGAssembly::AssemblyDocument::CheckInterference ( long NumElementsSet1, SAFEARRAY * * Set1, enum InterferenceStatusConstants * Status, const _variant_t & ComparisonMethod, const _variant_t & NumElementsSet2, const _variant_t & Set2, const _variant_t & AddInterferenceAsOccurrence, const _variant_t & ReportFilename, const _variant_t & ReportType, VARIANT * NumInterferences, VARIANT * InterferingPartsSet1, VARIANT * InterferingPartsOtherSet, VARIANT * ConfirmedInterference, VARIANT * InterferenceOccurrence, const _variant_t & IgnoreThreadInterferences ) {
    return _com_dispatch_method(this, 0x6003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x4003\x080c\x080c\x080c\x080c\x080c\x080c\x480c\x480c\x480c\x480c\x480c\x080c", NumElementsSet1, Set1, Status, &ComparisonMethod, &NumElementsSet2, &Set2, &AddInterferenceAsOccurrence, &ReportFilename, &ReportType, NumInterferences, InterferingPartsSet1, InterferingPartsOtherSet, ConfirmedInterference, InterferenceOccurrence, &IgnoreThreadInterferences);
}

#pragma implementation_key(365)
inline HRESULT TGAssembly::AssemblyDocument::BindKeyToObject ( SAFEARRAY * * ReferenceKey, IDispatch * * Object ) {
    return _com_dispatch_method(this, 0x6006, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6011\x4009", ReferenceKey, Object);
}

#pragma implementation_key(366)
inline TGPart::CoordinateSystemsPtr TGAssembly::AssemblyDocument::GetCoordinateSystems ( ) {
    struct TGPart::CoordinateSystems * _result = 0;
    _com_dispatch_method(this, 0x6005, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::CoordinateSystemsPtr(_result, false);
}

#pragma implementation_key(367)
inline TGPart::StudyOwnerPtr TGAssembly::AssemblyDocument::GetStudyOwner ( ) {
    struct TGPart::StudyOwner * _result = 0;
    _com_dispatch_method(this, 0x605f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::StudyOwnerPtr(_result, false);
}

#pragma implementation_key(368)
inline HRESULT TGAssembly::AssemblyDocument::MinimumDistance ( IDispatch * Element1, IDispatch * Element2, double * Distance, SAFEARRAY * * Point1, SAFEARRAY * * Point2 ) {
    return _com_dispatch_method(this, 0x6007, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x4005\x6005\x6005", Element1, Element2, Distance, Point1, Point2);
}

#pragma implementation_key(369)
inline IUnknownPtr TGAssembly::AssemblyDocument::GetAssemblyRecomputeEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x6004, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(370)
inline TGAssembly::LayoutsPtr TGAssembly::AssemblyDocument::GetLayouts ( ) {
    struct Layouts * _result = 0;
    _com_dispatch_method(this, 0x6008, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LayoutsPtr(_result, false);
}

#pragma implementation_key(371)
inline TGAssembly::LineSegmentsPtr TGAssembly::AssemblyDocument::GetLineSegments ( ) {
    struct LineSegments * _result = 0;
    _com_dispatch_method(this, 0x6009, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LineSegmentsPtr(_result, false);
}

#pragma implementation_key(372)
inline TGAssembly::SegmentsPtr TGAssembly::AssemblyDocument::GetSegments ( ) {
    struct Segments * _result = 0;
    _com_dispatch_method(this, 0x600a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SegmentsPtr(_result, false);
}

#pragma implementation_key(373)
inline HRESULT TGAssembly::AssemblyDocument::GetGlobalParameter ( enum AssemblyGlobalConstants Parameter, VARIANT * Value ) {
    return _com_dispatch_method(this, 0x600c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x400c", Parameter, Value);
}

#pragma implementation_key(374)
inline HRESULT TGAssembly::AssemblyDocument::SetGlobalParameter ( enum AssemblyGlobalConstants Parameter, const _variant_t & Value ) {
    return _com_dispatch_method(this, 0x600d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c", Parameter, &Value);
}

#pragma implementation_key(375)
inline TGFramework::SensorsPtr TGAssembly::AssemblyDocument::GetSensors ( ) {
    struct TGFramework::Sensors * _result = 0;
    _com_dispatch_method(this, 0x600b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::SensorsPtr(_result, false);
}

#pragma implementation_key(376)
inline long TGAssembly::AssemblyDocument::GetCutawaysCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x600e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(377)
inline long TGAssembly::AssemblyDocument::GetExplosionsCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x600f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(378)
inline TGAssembly::ArcSegmentsPtr TGAssembly::AssemblyDocument::GetArcSegments ( ) {
    struct ArcSegments * _result = 0;
    _com_dispatch_method(this, 0x6010, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ArcSegmentsPtr(_result, false);
}

#pragma implementation_key(379)
inline TGAssembly::SegmentRelations3dPtr TGAssembly::AssemblyDocument::GetSegmentRelations3d ( ) {
    struct SegmentRelations3d * _result = 0;
    _com_dispatch_method(this, 0x6011, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SegmentRelations3dPtr(_result, false);
}

#pragma implementation_key(380)
inline TGAssembly::QueriesPtr TGAssembly::AssemblyDocument::GetQueries ( ) {
    struct Queries * _result = 0;
    _com_dispatch_method(this, 0x6012, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return QueriesPtr(_result, false);
}

#pragma implementation_key(381)
inline TGFramework::SelectSetPtr TGAssembly::AssemblyDocument::GetRelationshipsSelectSet ( ) {
    struct TGFramework::SelectSet * _result = 0;
    _com_dispatch_method(this, 0x6013, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::SelectSetPtr(_result, false);
}

#pragma implementation_key(382)
inline TGAssembly::AssemblyFamilyMembersPtr TGAssembly::AssemblyDocument::GetAssemblyFamilyMembers ( ) {
    struct AssemblyFamilyMembers * _result = 0;
    _com_dispatch_method(this, 0x6014, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyFamilyMembersPtr(_result, false);
}

#pragma implementation_key(383)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetIsFileFamilyByDocument ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6015, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(384)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetIsFileAlternatePositionByDocument ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x603e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(385)
inline HRESULT TGAssembly::AssemblyDocument::CreateFamilyFile ( _bstr_t FirstMemberName, _bstr_t SecondMemberName, VARIANT_BOOL bCreateAlternatePosition ) {
    return _com_dispatch_method(this, 0x6016, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x000b", (BSTR)FirstMemberName, (BSTR)SecondMemberName, bCreateAlternatePosition);
}

#pragma implementation_key(386)
inline HRESULT TGAssembly::AssemblyDocument::DisperseSubassembly ( IDispatch * Subassembly, VARIANT_BOOL bAllOccurrences ) {
    return _com_dispatch_method(this, 0x6017, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x000b", Subassembly, bAllOccurrences);
}

#pragma implementation_key(387)
inline HRESULT TGAssembly::AssemblyDocument::TransferOccurrences ( SAFEARRAY * * OccurrencesToTransfer, const _variant_t & Subassembly ) {
    return _com_dispatch_method(this, 0x6018, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009\x080c", OccurrencesToTransfer, &Subassembly);
}

#pragma implementation_key(388)
inline TGAssembly::OccurrencePtr TGAssembly::AssemblyDocument::BundleOccurrences ( SAFEARRAY * * OccurrencesToTransfer, _bstr_t OccurrenceFileName, const _variant_t & TemplateFileName, const _variant_t & Subassembly ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x6019, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x6009\x0008\x080c\x080c", OccurrencesToTransfer, (BSTR)OccurrenceFileName, &TemplateFileName, &Subassembly);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(389)
inline TGAssembly::AssemblyPatternsPtr TGAssembly::AssemblyDocument::GetAssemblyPatterns ( ) {
    struct AssemblyPatterns * _result = 0;
    _com_dispatch_method(this, 0x601a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyPatternsPtr(_result, false);
}

#pragma implementation_key(390)
inline HRESULT TGAssembly::AssemblyDocument::MeasureAngle ( IDispatch * Element1, IDispatch * Element2, double * TrueAngle, double * ApparentAngle, const _variant_t & Element3 ) {
    return _com_dispatch_method(this, 0x601b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x4005\x4005\x080c", Element1, Element2, TrueAngle, ApparentAngle, &Element3);
}

#pragma implementation_key(391)
inline HRESULT TGAssembly::AssemblyDocument::NormalDistance ( IDispatch * Element1, IDispatch * Element2, double * TrueDistance, double * ApparentDistance, double * DeltaX, double * DeltaY, double * DeltaZ, const _variant_t & CoordinateSystem ) {
    return _com_dispatch_method(this, 0x601c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x4005\x4005\x4005\x4005\x4005\x080c", Element1, Element2, TrueDistance, ApparentDistance, DeltaX, DeltaY, DeltaZ, &CoordinateSystem);
}

#pragma implementation_key(392)
inline TGAssembly::ConfigurationsPtr TGAssembly::AssemblyDocument::GetConfigurations ( ) {
    struct Configurations * _result = 0;
    _com_dispatch_method(this, 0x601d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ConfigurationsPtr(_result, false);
}

#pragma implementation_key(393)
inline HRESULT TGAssembly::AssemblyDocument::RenameFile ( _bstr_t OldPath, _bstr_t NewPath ) {
    return _com_dispatch_method(this, 0x60a6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)OldPath, (BSTR)NewPath);
}

#pragma implementation_key(394)
inline HRESULT TGAssembly::AssemblyDocument::SetExternalPaths ( SAFEARRAY * * VecUnopenedPath ) {
    return _com_dispatch_method(this, 0x60a7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6008", VecUnopenedPath);
}

#pragma implementation_key(395)
inline HRESULT TGAssembly::AssemblyDocument::UpdateExternalPaths ( ) {
    return _com_dispatch_method(this, 0x60a8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(396)
inline IDispatchPtr TGAssembly::AssemblyDocument::GetViewStyles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x601e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(397)
inline HRESULT TGAssembly::AssemblyDocument::ImportStyles ( _bstr_t FileName, const _variant_t & Overwrite ) {
    return _com_dispatch_method(this, 0x601f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)FileName, &Overwrite);
}

#pragma implementation_key(398)
inline TGAssembly::WireRunsPtr TGAssembly::AssemblyDocument::GetWireRuns ( ) {
    struct WireRuns * _result = 0;
    _com_dispatch_method(this, 0x6020, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return WireRunsPtr(_result, false);
}

#pragma implementation_key(399)
inline TGAssembly::WirePathsPtr TGAssembly::AssemblyDocument::GetWirePaths ( ) {
    struct WirePaths * _result = 0;
    _com_dispatch_method(this, 0x6021, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return WirePathsPtr(_result, false);
}

#pragma implementation_key(400)
inline TGAssembly::AssemblyPropertiesPtr TGAssembly::AssemblyDocument::GetAssemblyProperties ( ) {
    struct AssemblyProperties * _result = 0;
    _com_dispatch_method(this, 0x6022, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyPropertiesPtr(_result, false);
}

#pragma implementation_key(401)
inline TGAssembly::CurveSegmentsPtr TGAssembly::AssemblyDocument::GetCurveSegments ( ) {
    struct CurveSegments * _result = 0;
    _com_dispatch_method(this, 0x6023, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CurveSegmentsPtr(_result, false);
}

#pragma implementation_key(402)
inline HRESULT TGAssembly::AssemblyDocument::GenerateWireReport ( enum AssemblyReportTypeConstants ReportType, const _variant_t & FileNameToSaveReport, int FieldsToGenerate ) {
    return _com_dispatch_method(this, 0x6024, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c\x0003", ReportType, &FileNameToSaveReport, FieldsToGenerate);
}

#pragma implementation_key(403)
inline HRESULT TGAssembly::AssemblyDocument::ActivateAll ( ) {
    return _com_dispatch_method(this, 0x6025, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(404)
inline HRESULT TGAssembly::AssemblyDocument::UpdateAll ( ) {
    return _com_dispatch_method(this, 0x6026, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(405)
inline HRESULT TGAssembly::AssemblyDocument::GetContainerDocumentAndMatrixOfIPADoc ( IDispatch * * ContainerDocument, SAFEARRAY * * Matrix ) {
    return _com_dispatch_method(this, 0x6027, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x6005", ContainerDocument, Matrix);
}

#pragma implementation_key(406)
inline HRESULT TGAssembly::AssemblyDocument::CopySketch ( IDispatch * SourceLayoutOrSketch, IDispatch * TargetPartOrAssembly, VARIANT_BOOL bAssociativeCopy, VARIANT * pvCopySketchErrorStatus ) {
    return _com_dispatch_method(this, 0x6028, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x000b\x480c", SourceLayoutOrSketch, TargetPartOrAssembly, bAssociativeCopy, pvCopySketchErrorStatus);
}

#pragma implementation_key(407)
inline long TGAssembly::AssemblyDocument::GetGeometricVersion ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6029, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(408)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetIsGeometricVersionDirty ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x602a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(409)
inline IDispatchPtr TGAssembly::AssemblyDocument::GetDimensionStyles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x602b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(410)
inline TGFramework::LayersPtr TGAssembly::AssemblyDocument::GetLayers ( ) {
    struct TGFramework::Layers * _result = 0;
    _com_dispatch_method(this, 0x53, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::LayersPtr(_result, false);
}

#pragma implementation_key(411)
inline TGPart::MeasureVariablePtr TGAssembly::AssemblyDocument::AddMeasureVariable ( enum TGPart::MeasureVariableTypeConstants Type, enum TGPart::MeasureVariableValueConstants ValueType, IDispatch * Geom1, IDispatch * Geom2, const _variant_t & Geom3 ) {
    struct TGPart::MeasureVariable * _result = 0;
    _com_dispatch_method(this, 0x6093, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0003\x0009\x0009\x080c", Type, ValueType, Geom1, Geom2, &Geom3);
    return TGPart::MeasureVariablePtr(_result, false);
}

#pragma implementation_key(412)
inline TGAssembly::VirtualComponentOccurrencesPtr TGAssembly::AssemblyDocument::GetVirtualComponentOccurrences ( ) {
    struct VirtualComponentOccurrences * _result = 0;
    _com_dispatch_method(this, 0x602c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return VirtualComponentOccurrencesPtr(_result, false);
}

#pragma implementation_key(413)
inline HRESULT TGAssembly::AssemblyDocument::PublishVirtualComponents ( ) {
    return _com_dispatch_method(this, 0x602d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(414)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetHidePreviousLevel ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x602e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(415)
inline void TGAssembly::AssemblyDocument::PutHidePreviousLevel ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x602e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(416)
inline long TGAssembly::AssemblyDocument::GetProfileUndoSteps ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x55, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(417)
inline void TGAssembly::AssemblyDocument::PutProfileUndoSteps ( long _arg1 ) {
    _com_dispatch_method(this, 0x55, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(418)
inline HRESULT TGAssembly::AssemblyDocument::CreateOrEditSimplifiedAssembly ( long NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double dExcludeRangeRatio, long NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude ) {
    return _com_dispatch_method(this, 0x602f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x0005\x0003\x6009", NumOccurrenceExclude, OccurrenceExclude, dExcludeRangeRatio, NumOccurrenceInclude, OccurrenceInclude);
}

#pragma implementation_key(419)
inline HRESULT TGAssembly::AssemblyDocument::GetSimplifiedAssemblyInputs ( long * NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double * dExcludeRangeRatio, long * NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude ) {
    return _com_dispatch_method(this, 0x6035, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009\x4005\x4003\x6009", NumOccurrenceExclude, OccurrenceExclude, dExcludeRangeRatio, NumOccurrenceInclude, OccurrenceInclude);
}

#pragma implementation_key(420)
inline HRESULT TGAssembly::AssemblyDocument::UpdateSimplifiedAssembly ( ) {
    return _com_dispatch_method(this, 0x6030, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(421)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetIsAssemblySimplified ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6031, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(422)
inline HRESULT TGAssembly::AssemblyDocument::DeleteSimplifiedAssembly ( ) {
    return _com_dispatch_method(this, 0x6032, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(423)
inline HRESULT TGAssembly::AssemblyDocument::SaveSimplifiedAssemblyAs ( _bstr_t SaveFileName ) {
    return _com_dispatch_method(this, 0x6033, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)SaveFileName);
}

#pragma implementation_key(424)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetIsSimplifyStateActive ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x604d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(425)
inline TGAssembly::StructuralFramesPtr TGAssembly::AssemblyDocument::GetStructuralFrames ( ) {
    struct StructuralFrames * _result = 0;
    _com_dispatch_method(this, 0x6034, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return StructuralFramesPtr(_result, false);
}

#pragma implementation_key(426)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetHasCapturedRelationships ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6036, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(427)
inline TGAssembly::AssemblyFeaturesPtr TGAssembly::AssemblyDocument::GetAssemblyFeatures ( ) {
    struct AssemblyFeatures * _result = 0;
    _com_dispatch_method(this, 0x6037, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyFeaturesPtr(_result, false);
}

#pragma implementation_key(428)
inline TGAssembly::AssemblyDrivenPartFeaturesPtr TGAssembly::AssemblyDocument::GetAssemblyDrivenPartFeatures ( ) {
    struct AssemblyDrivenPartFeatures * _result = 0;
    _com_dispatch_method(this, 0x6038, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyDrivenPartFeaturesPtr(_result, false);
}

#pragma implementation_key(429)
inline long TGAssembly::AssemblyDocument::GetCapturedRelationshipCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6039, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(430)
inline HRESULT TGAssembly::AssemblyDocument::GetCapturedRelationshipInformation ( SAFEARRAY * * RelationshipTypes, SAFEARRAY * * OffsetTypes, SAFEARRAY * * Offsets, VARIANT * Faces ) {
    return _com_dispatch_method(this, 0x603a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6003\x6003\x6005\x400c", RelationshipTypes, OffsetTypes, Offsets, Faces);
}

#pragma implementation_key(431)
inline TGAssembly::PipesPtr TGAssembly::AssemblyDocument::GetPipes ( ) {
    struct Pipes * _result = 0;
    _com_dispatch_method(this, 0x603b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PipesPtr(_result, false);
}

#pragma implementation_key(432)
inline TGAssembly::ComponentLayoutsPtr TGAssembly::AssemblyDocument::GetComponentLayouts ( ) {
    struct ComponentLayouts * _result = 0;
    _com_dispatch_method(this, 0x603c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ComponentLayoutsPtr(_result, false);
}

#pragma implementation_key(433)
inline TGAssembly::PathsPtr TGAssembly::AssemblyDocument::GetPaths ( ) {
    struct Paths * _result = 0;
    _com_dispatch_method(this, 0x603d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PathsPtr(_result, false);
}

#pragma implementation_key(434)
inline HRESULT TGAssembly::AssemblyDocument::UpdateDocument ( const _variant_t & FutureUse1, const _variant_t & FutureUse2 ) {
    return _com_dispatch_method(this, 0x603f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &FutureUse1, &FutureUse2);
}

#pragma implementation_key(435)
inline TGAssembly::HarnessesPtr TGAssembly::AssemblyDocument::GetHarnesses ( ) {
    struct Harnesses * _result = 0;
    _com_dispatch_method(this, 0x6040, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return HarnessesPtr(_result, false);
}

#pragma implementation_key(436)
inline TGPart::LabelWeldDataCollectionPtr TGAssembly::AssemblyDocument::GetLabelWeldDataCollection ( ) {
    struct TGPart::LabelWeldDataCollection * _result = 0;
    _com_dispatch_method(this, 0x6041, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::LabelWeldDataCollectionPtr(_result, false);
}

#pragma implementation_key(437)
inline void TGAssembly::AssemblyDocument::PutWeldmentAssembly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6042, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(438)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetWeldmentAssembly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6042, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(439)
inline void TGAssembly::AssemblyDocument::PutWeldmentAssemblyBeadMaterial ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6043, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(440)
inline _bstr_t TGAssembly::AssemblyDocument::GetWeldmentAssemblyBeadMaterial ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6043, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(441)
inline void TGAssembly::AssemblyDocument::PutWeldmentAssemblyBeadDensity ( double _arg1 ) {
    _com_dispatch_method(this, 0x6044, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(442)
inline double TGAssembly::AssemblyDocument::GetWeldmentAssemblyBeadDensity ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6044, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(443)
inline HRESULT TGAssembly::AssemblyDocument::GetBaseStyle ( enum AssemblyBaseStylesConstants BaseStyleType, struct TGFramework::FaceStyle * * BaseStyle ) {
    return _com_dispatch_method(this, 0x6045, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4009", BaseStyleType, BaseStyle);
}

#pragma implementation_key(444)
inline HRESULT TGAssembly::AssemblyDocument::SetBaseStyle ( enum AssemblyBaseStylesConstants BaseStyleType, struct TGFramework::FaceStyle * BaseStyle ) {
    return _com_dispatch_method(this, 0x6046, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", BaseStyleType, BaseStyle);
}

#pragma implementation_key(445)
inline HRESULT TGAssembly::AssemblyDocument::SaveModelAs ( IDispatch * Occurrence, _bstr_t SaveFileName ) {
    return _com_dispatch_method(this, 0x6047, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", Occurrence, (BSTR)SaveFileName);
}

#pragma implementation_key(446)
inline void TGAssembly::AssemblyDocument::PutActivateSimplifiedAssembly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6048, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(447)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetActivateSimplifiedAssembly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6048, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(448)
inline TGPart::HoleDataCollectionPtr TGAssembly::AssemblyDocument::GetHoleDataCollection ( ) {
    struct TGPart::HoleDataCollection * _result = 0;
    _com_dispatch_method(this, 0x6049, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::HoleDataCollectionPtr(_result, false);
}

#pragma implementation_key(449)
inline HRESULT TGAssembly::AssemblyDocument::GenerateWireHarnessReport ( enum AssemblyWireHarnessReportTypeConstants ReportType, const _variant_t & FileNameToSaveReport, const _variant_t & Selection, const _variant_t & Window, const _variant_t & NumberOfReportProperties, const _variant_t & AssemblyReportProperties, const _variant_t & NumberOfSortItems, const _variant_t & SortProperties, const _variant_t & SortOrder, const _variant_t & Justification, const _variant_t & UpdateTemplate ) {
    return _com_dispatch_method(this, 0x604a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", ReportType, &FileNameToSaveReport, &Selection, &Window, &NumberOfReportProperties, &AssemblyReportProperties, &NumberOfSortItems, &SortProperties, &SortOrder, &Justification, &UpdateTemplate);
}

#pragma implementation_key(450)
inline TGAssembly::AssemblyBodiesPtr TGAssembly::AssemblyDocument::GetAssemblyBodies ( ) {
    struct AssemblyBodies * _result = 0;
    _com_dispatch_method(this, 0x604b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyBodiesPtr(_result, false);
}

#pragma implementation_key(451)
inline IDispatchPtr TGAssembly::AssemblyDocument::CreateReference2 ( IDispatch * Object, const _variant_t & Entity ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x604c, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x000c", Object, &Entity);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(452)
inline HRESULT TGAssembly::AssemblyDocument::UpdatePathfinder ( enum AssemblyPathfinderUpdateConstants UpdateType ) {
    return _com_dispatch_method(this, 0x604e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", UpdateType);
}

#pragma implementation_key(453)
inline TGAssembly::ZonesPtr TGAssembly::AssemblyDocument::GetZones ( ) {
    struct Zones * _result = 0;
    _com_dispatch_method(this, 0x604f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ZonesPtr(_result, false);
}

#pragma implementation_key(454)
inline HRESULT TGAssembly::AssemblyDocument::UpdateStructureCache ( enum UpdateStructureCacheConstants UpdateType ) {
    return _com_dispatch_method(this, 0x6050, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", UpdateType);
}

#pragma implementation_key(455)
inline HRESULT TGAssembly::AssemblyDocument::DeleteStructureCache ( ) {
    return _com_dispatch_method(this, 0x6052, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(456)
inline TGAssembly::FastenerSystemsPtr TGAssembly::AssemblyDocument::GetFastenerSystems ( ) {
    struct FastenerSystems * _result = 0;
    _com_dispatch_method(this, 0x6051, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FastenerSystemsPtr(_result, false);
}

#pragma implementation_key(457)
inline TGAssembly::AssemblyGroupsPtr TGAssembly::AssemblyDocument::GetAssemblyGroups ( ) {
    struct AssemblyGroups * _result = 0;
    _com_dispatch_method(this, 0x6053, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyGroupsPtr(_result, false);
}

#pragma implementation_key(458)
inline HRESULT TGAssembly::AssemblyDocument::CheckInterference2 ( long NumElementsSet1, SAFEARRAY * * Set1, enum InterferenceStatusConstants * Status, const _variant_t & ComparisonMethod, const _variant_t & NumElementsSet2, const _variant_t & Set2, const _variant_t & AddInterferenceAsOccurrence, const _variant_t & ReportFilename, const _variant_t & ReportType, VARIANT * NumInterferences, VARIANT * InterferingPartsSet1, VARIANT * InterferingPartsOtherSet, VARIANT * ConfirmedInterference, VARIANT * InterferenceOccurrence, const _variant_t & IgnoreSameNominalDiaConstant, const _variant_t & IgnoreNonThreadVsThreadConstant ) {
    return _com_dispatch_method(this, 0x6054, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x4003\x080c\x080c\x080c\x080c\x080c\x080c\x480c\x480c\x480c\x480c\x480c\x080c\x080c", NumElementsSet1, Set1, Status, &ComparisonMethod, &NumElementsSet2, &Set2, &AddInterferenceAsOccurrence, &ReportFilename, &ReportType, NumInterferences, InterferingPartsSet1, InterferingPartsOtherSet, ConfirmedInterference, InterferenceOccurrence, &IgnoreSameNominalDiaConstant, &IgnoreNonThreadVsThreadConstant);
}

#pragma implementation_key(459)
inline HRESULT TGAssembly::AssemblyDocument::CheckInterference3 ( long NumElementsSet1, SAFEARRAY * * Set1, enum InterferenceStatusConstants * Status, const _variant_t & ComparisonMethod, const _variant_t & NumElementsSet2, const _variant_t & Set2, const _variant_t & AddInterferenceAsOccurrence, const _variant_t & ReportFilename, const _variant_t & ReportType, VARIANT * NumInterferences, VARIANT * InterferingPartsSet1, VARIANT * InterferingPartsOtherSet, VARIANT * ConfirmedInterference, VARIANT * InterferenceOccurrence, const _variant_t & IgnoreSameNominalDiaConstant, const _variant_t & IgnoreNonThreadVsThreadConstant, VARIANT_BOOL bAllowConstructions, VARIANT_BOOL bShowInterferenceVolume ) {
    return _com_dispatch_method(this, 0x6082, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x4003\x000c\x000c\x000c\x000c\x000c\x000c\x400c\x400c\x400c\x400c\x400c\x000c\x000c\x000b\x000b", NumElementsSet1, Set1, Status, &ComparisonMethod, &NumElementsSet2, &Set2, &AddInterferenceAsOccurrence, &ReportFilename, &ReportType, NumInterferences, InterferingPartsSet1, InterferingPartsOtherSet, ConfirmedInterference, InterferenceOccurrence, &IgnoreSameNominalDiaConstant, &IgnoreNonThreadVsThreadConstant, bAllowConstructions, bShowInterferenceVolume);
}

#pragma implementation_key(460)
inline HRESULT TGAssembly::AssemblyDocument::TranslateMultipleOccurrences ( long lNumberOfOccurrences, SAFEARRAY * * Occurrences, enum MoveMultipleMoveTypeConstants MoveType, enum MoveMultipleRelationshipConstants RelationshipMaintenance, double FromX, double FromY, double FromZ, double ToX, double ToY, double ToZ, VARIANT * MovedOrCopiedOccurrences ) {
    return _com_dispatch_method(this, 0x6055, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x600d\x0003\x0003\x0005\x0005\x0005\x0005\x0005\x0005\x400c", lNumberOfOccurrences, Occurrences, MoveType, RelationshipMaintenance, FromX, FromY, FromZ, ToX, ToY, ToZ, MovedOrCopiedOccurrences);
}

#pragma implementation_key(461)
inline HRESULT TGAssembly::AssemblyDocument::RotateMultipleOccurrences ( long lNumberOfOccurrences, SAFEARRAY * * Occurrences, enum MoveMultipleMoveTypeConstants MoveType, enum MoveMultipleRelationshipConstants RelationshipMaintenance, double AxisX, double AxisY, double AxisZ, double Angle, VARIANT * MovedOrCopiedOccurrences ) {
    return _com_dispatch_method(this, 0x6056, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x600d\x0003\x0003\x0005\x0005\x0005\x0005\x400c", lNumberOfOccurrences, Occurrences, MoveType, RelationshipMaintenance, AxisX, AxisY, AxisZ, Angle, MovedOrCopiedOccurrences);
}

#pragma implementation_key(462)
inline HRESULT TGAssembly::AssemblyDocument::GoalSeek ( _bstr_t NameTargetVariable, _bstr_t NameVariableToChange, double dTargetValue, double dTimeLimitInSecs, long NumIterationsLimit, double * dTimeElapsed, long * NumIterations, VARIANT_BOOL * TimeLimitExceeded, VARIANT_BOOL * IterationsLimitExceeded ) {
    return _com_dispatch_method(this, 0x58, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0005\x0005\x0003\x4005\x4003\x400b\x400b", (BSTR)NameTargetVariable, (BSTR)NameVariableToChange, dTargetValue, dTimeLimitInSecs, NumIterationsLimit, dTimeElapsed, NumIterations, TimeLimitExceeded, IterationsLimitExceeded);
}

#pragma implementation_key(463)
inline IDispatchPtr TGAssembly::AssemblyDocument::GetPMI ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x605d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(464)
inline HRESULT TGAssembly::AssemblyDocument::PMI_ByModelState ( IDispatch * * PMIObj, enum TGPart::PMIModelStateConstants PMIModelState ) {
    return _com_dispatch_method(this, 0x605e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x0003", PMIObj, PMIModelState);
}

#pragma implementation_key(465)
inline _bstr_t TGAssembly::AssemblyDocument::GetDisplayName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6060, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(466)
inline TGAssembly::ItemNumbersPtr TGAssembly::AssemblyDocument::GetItemNumbers ( ) {
    struct ItemNumbers * _result = 0;
    _com_dispatch_method(this, 0x6066, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ItemNumbersPtr(_result, false);
}

#pragma implementation_key(467)
inline TGPart::ConstructionsPtr TGAssembly::AssemblyDocument::GetConstructions ( ) {
    struct TGPart::Constructions * _result = 0;
    _com_dispatch_method(this, 0x6067, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::ConstructionsPtr(_result, false);
}

#pragma implementation_key(468)
inline HRESULT TGAssembly::AssemblyDocument::GetContainerDocumentAndOccurrenceOfIPADoc ( IDispatch * * ContainerDocument, IDispatch * * IPAOccurrence ) {
    return _com_dispatch_method(this, 0x6068, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4009", ContainerDocument, IPAOccurrence);
}

#pragma implementation_key(469)
inline HRESULT TGAssembly::AssemblyDocument::GetTopDocumentAndSubOccurrenceOfIPADoc ( IDispatch * * TopDocument, IDispatch * * IPASubOccurrence ) {
    return _com_dispatch_method(this, 0x6069, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4009", TopDocument, IPASubOccurrence);
}

#pragma implementation_key(470)
inline IDispatchPtr TGAssembly::AssemblyDocument::GetLinearStyles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x606a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(471)
inline IDispatchPtr TGAssembly::AssemblyDocument::GetFillStyles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x606b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(472)
inline IDispatchPtr TGAssembly::AssemblyDocument::GetHatchPatternStyles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x606c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(473)
inline IUnknownPtr TGAssembly::AssemblyDocument::GetAssemblyFamilyEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x606e, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(474)
inline IUnknownPtr TGAssembly::AssemblyDocument::GetAssemblyFamilyEvents2 ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x6084, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(475)
inline TGFramework::SectionViewsPtr TGAssembly::AssemblyDocument::GetSectionViews ( ) {
    struct TGFramework::SectionViews * _result = 0;
    _com_dispatch_method(this, 0x606f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::SectionViewsPtr(_result, false);
}

#pragma implementation_key(476)
inline HRESULT TGAssembly::AssemblyDocument::Range ( double * x_min, double * y_min, double * z_min, double * x_max, double * y_max, double * z_max ) {
    return _com_dispatch_method(this, 0x6070, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", x_min, y_min, z_min, x_max, y_max, z_max);
}

#pragma implementation_key(477)
inline HRESULT TGAssembly::AssemblyDocument::ReplaceComponents ( SAFEARRAY * * TargetComponents, _bstr_t ReplacementFilePath, enum ConstraintReplacementConstants ConstraintReplacementOption ) {
    return _com_dispatch_method(this, 0x6072, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009\x0008\x0003", TargetComponents, (BSTR)ReplacementFilePath, ConstraintReplacementOption);
}

#pragma implementation_key(478)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetIsMultiCADDriven ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6073, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(479)
inline TGAssembly::AssemblyCopiesPtr TGAssembly::AssemblyDocument::GetAssemblyCopies ( ) {
    struct AssemblyCopies * _result = 0;
    _com_dispatch_method(this, 0x6074, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyCopiesPtr(_result, false);
}

#pragma implementation_key(480)
inline TGAssembly::AssemblyMirrorsPtr TGAssembly::AssemblyDocument::GetAssemblyMirrors ( ) {
    struct AssemblyMirrors * _result = 0;
    _com_dispatch_method(this, 0x6075, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyMirrorsPtr(_result, false);
}

#pragma implementation_key(481)
inline TGAssembly::SimplifiedAssembliesPtr TGAssembly::AssemblyDocument::GetSimplifiedAssemblies ( ) {
    struct SimplifiedAssemblies * _result = 0;
    _com_dispatch_method(this, 0x6076, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SimplifiedAssembliesPtr(_result, false);
}

#pragma implementation_key(482)
inline IUnknownPtr TGAssembly::AssemblyDocument::GetAssemblyChangeEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x6077, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(483)
inline IUnknownPtr TGAssembly::AssemblyDocument::GetAssemblyConfigurationChangeEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x6080, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(484)
inline HRESULT TGAssembly::AssemblyDocument::PathfinderScrollToSelection ( ) {
    return _com_dispatch_method(this, 0x6078, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(485)
inline TGFramework::InterDocumentUpdatePtr TGAssembly::AssemblyDocument::GetInterDocumentUpdate ( ) {
    struct TGFramework::InterDocumentUpdate * _result = 0;
    _com_dispatch_method(this, 0x6079, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::InterDocumentUpdatePtr(_result, false);
}

#pragma implementation_key(486)
inline TGPart::Sketches3DPtr TGAssembly::AssemblyDocument::GetSketches3D ( ) {
    struct TGPart::Sketches3D * _result = 0;
    _com_dispatch_method(this, 0x607a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::Sketches3DPtr(_result, false);
}

#pragma implementation_key(487)
inline HRESULT TGAssembly::AssemblyDocument::MeasureDistance ( IDispatch * Element1, IDispatch * Element2, enum TGPart::MeasureDistanceTypeConstants DistanceType, double * Distance, double * DX, double * DY, double * DZ, SAFEARRAY * * Point1, SAFEARRAY * * Point2 ) {
    return _com_dispatch_method(this, 0x607c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x0003\x4005\x4005\x4005\x4005\x6005\x6005", Element1, Element2, DistanceType, Distance, DX, DY, DZ, Point1, Point2);
}

#pragma implementation_key(488)
inline HRESULT TGAssembly::AssemblyDocument::MeasureAngleEx ( IDispatch * Element1, IDispatch * Element2, IDispatch * Element3, double * Angle1, double * Angle2, double * Angle3, double * Angle4 ) {
    return _com_dispatch_method(this, 0x607d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x0009\x4005\x4005\x4005\x4005", Element1, Element2, Element3, Angle1, Angle2, Angle3, Angle4);
}

#pragma implementation_key(489)
inline HRESULT TGAssembly::AssemblyDocument::InquireElement ( IDispatch * Element, SAFEARRAY * * InPoint, const _variant_t & CoordinateSystem, SAFEARRAY * * Point, double * SurfaceArea, double * Volume, double * Length ) {
    return _com_dispatch_method(this, 0x607e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x6005\x000c\x6005\x4005\x4005\x4005", Element, InPoint, &CoordinateSystem, Point, SurfaceArea, Volume, Length);
}

#pragma implementation_key(490)
inline HRESULT TGAssembly::AssemblyDocument::GetDrivenDrivingInfo ( IDispatch * Element, VARIANT * DrivenOccurrencesArray, VARIANT * DrivingOccurrencesArray ) {
    return _com_dispatch_method(this, 0x607f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x400c\x400c", Element, DrivenOccurrencesArray, DrivingOccurrencesArray);
}

#pragma implementation_key(491)
inline _bstr_t TGAssembly::AssemblyDocument::GetActiveConfiguration ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6081, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(492)
inline TGPart::SketchBlocksPtr TGAssembly::AssemblyDocument::GetBlocks ( ) {
    struct TGPart::SketchBlocks * _result = 0;
    _com_dispatch_method(this, 0x1079, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SketchBlocksPtr(_result, false);
}

#pragma implementation_key(493)
inline IUnknownPtr TGAssembly::AssemblyDocument::GetAssemblyPhysicalPropertiesChangeEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x6083, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(494)
inline IDispatchPtr TGAssembly::AssemblyDocument::GetTextStyles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2007, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(495)
inline IDispatchPtr TGAssembly::AssemblyDocument::GetTextCharStyles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2008, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(496)
inline HRESULT TGAssembly::AssemblyDocument::CreateCloneComponents ( SAFEARRAY * * ComponentsToClone, SAFEARRAY * * ReferenceGeometryFaces, SAFEARRAY * * CloneEnviornment, enum CloneComponentOptions CloneOptions, VARIANT_BOOL bCreateGroup, enum CloneMatchTypeOptions CloneMatchType, long * ErrorStatus ) {
    return _com_dispatch_method(this, 0x6085, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009\x6009\x6009\x0003\x000b\x0003\x4003", ComponentsToClone, ReferenceGeometryFaces, CloneEnviornment, CloneOptions, bCreateGroup, CloneMatchType, ErrorStatus);
}

#pragma implementation_key(497)
inline HRESULT TGAssembly::AssemblyDocument::Get3dPrintInfo ( int * iNumberOfTriangles, int * iNumberOfPoints, int * iNumberOfEdges, double * dMeshSurfaceArea, double * dMeshVolume, double * dFileSize, double * dExportToleranceValue, double * dSurfacePlaneAngTol, enum TGPart::Print3DFileType Type ) {
    return _com_dispatch_method(this, 0x6086, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4003\x4003\x4005\x4005\x4005\x4005\x4005\x0003", iNumberOfTriangles, iNumberOfPoints, iNumberOfEdges, dMeshSurfaceArea, dMeshVolume, dFileSize, dExportToleranceValue, dSurfacePlaneAngTol, Type);
}

#pragma implementation_key(498)
inline HRESULT TGAssembly::AssemblyDocument::PublishVirtualComponentsBIDM ( const _variant_t & ListOfDocumentNumbers, const _variant_t & ListOfRevisionIDs, const _variant_t & ListOfTitles ) {
    return _com_dispatch_method(this, 0x6087, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c\x000c\x080c", &ListOfDocumentNumbers, &ListOfRevisionIDs, &ListOfTitles);
}

#pragma implementation_key(499)
inline HRESULT TGAssembly::AssemblyDocument::LoadUOMPreferences ( VARIANT_BOOL UpdateUomGlobals ) {
    return _com_dispatch_method(this, 0x608a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", UpdateUomGlobals);
}

#pragma implementation_key(500)
inline void TGAssembly::AssemblyDocument::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(501)
inline TGFramework::SteeringWheelPtr TGAssembly::AssemblyDocument::GetSteeringWheel ( ) {
    struct TGFramework::SteeringWheel * _result = 0;
    _com_dispatch_method(this, 0x6088, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::SteeringWheelPtr(_result, false);
}

#pragma implementation_key(502)
inline _bstr_t TGAssembly::AssemblyDocument::SaveModelAsBiDM ( IDispatch * Occurrence, _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6089, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0009\x0008\x0008\x0008\x0008", Occurrence, (BSTR)FilePath, (BSTR)DocumentNumber, (BSTR)Revision, (BSTR)Title);
    return _bstr_t(_result, false);
}

#pragma implementation_key(503)
inline void TGAssembly::AssemblyDocument::PutPerformanceMode ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x608b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(504)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetPerformanceMode ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x608b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(505)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetHasMissingFiles ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x608c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(506)
inline HRESULT TGAssembly::AssemblyDocument::GetMissingFilesInfo ( VARIANT * missingFilesAndObjects ) {
    return _com_dispatch_method(this, 0x608d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", missingFilesAndObjects);
}

#pragma implementation_key(507)
inline HRESULT TGAssembly::AssemblyDocument::CopytoPMI ( IDispatch * featureObj, enum TGPart::seCopytoPMIConstants Type ) {
    return _com_dispatch_method(this, 0x608e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003", featureObj, Type);
}

#pragma implementation_key(508)
inline TGAssembly::InternalComponentsPtr TGAssembly::AssemblyDocument::GetInternalComponents ( ) {
    struct InternalComponents * _result = 0;
    _com_dispatch_method(this, 0x608f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return InternalComponentsPtr(_result, false);
}

#pragma implementation_key(509)
inline TGAssembly::EndCapsPtr TGAssembly::AssemblyDocument::GetEndCaps ( ) {
    struct EndCaps * _result = 0;
    _com_dispatch_method(this, 0x6090, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return EndCapsPtr(_result, false);
}

#pragma implementation_key(510)
inline HRESULT TGAssembly::AssemblyDocument::DragComponentTranslation ( IDispatch * OccurrenceToDrag, enum DragComponentAnalysisOptionConstants AnalysisOption, enum DragComponentCollisionOptionConstants CollisionOption, double Distance, VARIANT_BOOL ConsiderMovingParts, VARIANT_BOOL ConsiderInactiveParts, VARIANT_BOOL MoveGroundedParts, double DirectionX, double DirectionY, double DirectionZ, double Sensitivity, IDispatch * EdgeOrAxis, VARIANT_BOOL * CollisionFound, SAFEARRAY * * CollidingPart ) {
    return _com_dispatch_method(this, 0x6091, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003\x0003\x0005\x000b\x000b\x000b\x0005\x0005\x0005\x0005\x0009\x400b\x6009", OccurrenceToDrag, AnalysisOption, CollisionOption, Distance, ConsiderMovingParts, ConsiderInactiveParts, MoveGroundedParts, DirectionX, DirectionY, DirectionZ, Sensitivity, EdgeOrAxis, CollisionFound, CollidingPart);
}

#pragma implementation_key(511)
inline HRESULT TGAssembly::AssemblyDocument::DragComponentRotation ( IDispatch * OccurrenceToDrag, enum DragComponentAnalysisOptionConstants AnalysisOption, enum DragComponentCollisionOptionConstants CollisionOption, double Angle, VARIANT_BOOL ConsiderMovingParts, VARIANT_BOOL ConsiderInactiveParts, VARIANT_BOOL MoveGroundedParts, double DirectionX, double DirectionY, double DirectionZ, double Sensitivity, IDispatch * EdgeOrAxis, VARIANT_BOOL * CollisionFound, SAFEARRAY * * CollidingPart ) {
    return _com_dispatch_method(this, 0x6092, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003\x0003\x0005\x000b\x000b\x000b\x0005\x0005\x0005\x0005\x0009\x400b\x6009", OccurrenceToDrag, AnalysisOption, CollisionOption, Angle, ConsiderMovingParts, ConsiderInactiveParts, MoveGroundedParts, DirectionX, DirectionY, DirectionZ, Sensitivity, EdgeOrAxis, CollisionFound, CollidingPart);
}

#pragma implementation_key(512)
inline HRESULT TGAssembly::AssemblyDocument::BeginCachedSolve ( ) {
    return _com_dispatch_method(this, 0x6095, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(513)
inline HRESULT TGAssembly::AssemblyDocument::EndCachedSolve ( ) {
    return _com_dispatch_method(this, 0x6096, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(514)
inline HRESULT TGAssembly::AssemblyDocument::SetSuppressComponent ( IDispatch * OccurrenceToSuppress, struct SuppressComponent * * SuppressComponent ) {
    return _com_dispatch_method(this, 0x6098, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4009", OccurrenceToSuppress, SuppressComponent);
}

#pragma implementation_key(515)
inline HRESULT TGAssembly::AssemblyDocument::GetSuppressedComponents ( enum AssemblyComponentTypeConstants ComponentType, long * SuppressedComponentCount, SAFEARRAY * * SuppressedComponents ) {
    return _com_dispatch_method(this, 0x6097, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003\x6009", ComponentType, SuppressedComponentCount, SuppressedComponents);
}

#pragma implementation_key(516)
inline HRESULT TGAssembly::AssemblyDocument::CheckInterference4 ( long NumElementsSet1, SAFEARRAY * * Set1, enum InterferenceStatusConstants * Status, const _variant_t & ComparisonMethod, const _variant_t & NumElementsSet2, const _variant_t & Set2, const _variant_t & AddInterferenceAsOccurrence, const _variant_t & ReportFilename, const _variant_t & ReportType, VARIANT * NumInterferences, VARIANT * InterferingPartsSet1, VARIANT * InterferingPartsOtherSet, VARIANT * ConfirmedInterference, VARIANT * InterferenceOccurrence, const _variant_t & IgnoreSameNominalDiaConstant, const _variant_t & IgnoreNonThreadVsThreadConstant, VARIANT_BOOL ShowIntersectionVolume ) {
    return _com_dispatch_method(this, 0x6099, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x4003\x000c\x000c\x000c\x000c\x000c\x000c\x400c\x400c\x400c\x400c\x400c\x000c\x000c\x000b", NumElementsSet1, Set1, Status, &ComparisonMethod, &NumElementsSet2, &Set2, &AddInterferenceAsOccurrence, &ReportFilename, &ReportType, NumInterferences, InterferingPartsSet1, InterferingPartsOtherSet, ConfirmedInterference, InterferenceOccurrence, &IgnoreSameNominalDiaConstant, &IgnoreNonThreadVsThreadConstant, ShowIntersectionVolume);
}

#pragma implementation_key(517)
inline TGPart::DecalsPtr TGAssembly::AssemblyDocument::GetDecals ( ) {
    struct TGPart::Decals * _result = 0;
    _com_dispatch_method(this, 0x609a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::DecalsPtr(_result, false);
}

#pragma implementation_key(518)
inline HRESULT TGAssembly::AssemblyDocument::AutoExplode ( enum AutoExplodeSelectionTypeConstants AutoExplodeSelectionType, VARIANT_BOOL BindAllSubassemblies, enum AutoExplodeTechniqueConstants ExplodeTechnique, BSTR * ErrorCode, double SpreadDistance, IDispatch * Subassembly ) {
    return _com_dispatch_method(this, 0x609b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000b\x0003\x4008\x0005\x0009", AutoExplodeSelectionType, BindAllSubassemblies, ExplodeTechnique, ErrorCode, SpreadDistance, Subassembly);
}

#pragma implementation_key(519)
inline TGAssembly::AsmCADDirectsPtr TGAssembly::AssemblyDocument::GetAsmCADDirects ( ) {
    struct AsmCADDirects * _result = 0;
    _com_dispatch_method(this, 0x609c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AsmCADDirectsPtr(_result, false);
}

#pragma implementation_key(520)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetModelingInAssembly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x609d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(521)
inline VARIANT_BOOL TGAssembly::AssemblyDocument::GetAssemblyPreview ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x609e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(522)
inline HRESULT TGAssembly::AssemblyDocument::EditAssembly ( ) {
    return _com_dispatch_method(this, 0x609f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(523)
inline HRESULT TGAssembly::AssemblyDocument::EditAssemblyWithOptions ( enum AssemblyFileOpenPartActivationOptions ePartActivation, enum AssemblyFileOpenSimplificationOptions ePartSimplification, enum AssemblyFileOpenSimplificationOptions eSubassemblySimplification, enum AssemblyFileOpenActivateChangedPartOptions eActivateChangedParts ) {
    return _com_dispatch_method(this, 0x60a0, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x0003", ePartActivation, ePartSimplification, eSubassemblySimplification, eActivateChangedParts);
}

#pragma implementation_key(524)
inline TGPart::ReferencePointCloudsPtr TGAssembly::AssemblyDocument::GetReferencePointClouds ( ) {
    struct TGPart::ReferencePointClouds * _result = 0;
    _com_dispatch_method(this, 0x60a1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::ReferencePointCloudsPtr(_result, false);
}

#pragma implementation_key(525)
inline TGPart::ProfileSetsPtr TGAssembly::AssemblyDocument::GetProfileSets ( ) {
    struct TGPart::ProfileSets * _result = 0;
    _com_dispatch_method(this, 0x60a2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::ProfileSetsPtr(_result, false);
}

#pragma implementation_key(526)
inline TGPart::ModelPtr TGAssembly::AssemblyDocument::GetAssemblyModel ( ) {
    struct TGPart::Model * _result = 0;
    _com_dispatch_method(this, 0x60a3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::ModelPtr(_result, false);
}

#pragma implementation_key(527)
inline HRESULT TGAssembly::AssemblyDocument::PublishInternalComponents ( _bstr_t bstrFileLocation, _bstr_t bstrPartTemplatePath, _bstr_t bstrSheetmetalTemplatePath, _bstr_t bstrAsmTemplatePath, _bstr_t bstrMaterial ) {
    return _com_dispatch_method(this, 0x60a4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008\x0008", (BSTR)bstrFileLocation, (BSTR)bstrPartTemplatePath, (BSTR)bstrSheetmetalTemplatePath, (BSTR)bstrAsmTemplatePath, (BSTR)bstrMaterial);
}

#pragma implementation_key(528)
inline HRESULT TGAssembly::AssemblyDocument::ArrangeDimensionsInSelectSet ( double dStackPitchMultiplier, VARIANT_BOOL bAssociative ) {
    return _com_dispatch_method(this, 0x60a5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x000b", dStackPitchMultiplier, bAssociative);
}

//
// dispinterface SubOccurrences wrapper method implementations
//

#pragma implementation_key(529)
inline TGAssembly::SubOccurrencePtr TGAssembly::SubOccurrences::Item ( const _variant_t & Index ) {
    struct SubOccurrence * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return SubOccurrencePtr(_result, false);
}

#pragma implementation_key(530)
inline TGFramework::ApplicationPtr TGAssembly::SubOccurrences::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(531)
inline long TGAssembly::SubOccurrences::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(532)
inline IDispatchPtr TGAssembly::SubOccurrences::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface SubOccurrence wrapper method implementations
//

#pragma implementation_key(533)
inline TGFramework::ApplicationPtr TGAssembly::SubOccurrence::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(534)
inline IDispatchPtr TGAssembly::SubOccurrence::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(535)
inline TGAssembly::AssemblyDocumentPtr TGAssembly::SubOccurrence::GetTopLevelDocument ( ) {
    struct AssemblyDocument * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyDocumentPtr(_result, false);
}

#pragma implementation_key(536)
inline IDispatchPtr TGAssembly::SubOccurrence::GetSubOccurrenceDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(537)
inline _bstr_t TGAssembly::SubOccurrence::GetSubOccurrenceFileName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(538)
inline HRESULT TGAssembly::SubOccurrence::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6011\x480c", ReferenceKey, KeySize);
}

#pragma implementation_key(539)
inline TGAssembly::SubOccurrencesPtr TGAssembly::SubOccurrence::GetSubOccurrences ( ) {
    struct SubOccurrences * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SubOccurrencesPtr(_result, false);
}

#pragma implementation_key(540)
inline HRESULT TGAssembly::SubOccurrence::GetMatrix ( SAFEARRAY * * Matrix ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", Matrix);
}

#pragma implementation_key(541)
inline HRESULT TGAssembly::SubOccurrence::CreateTopologyReference ( SAFEARRAY * * ReferenceKey, struct TopologyReference * * TopologyReference ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6011\x4009", ReferenceKey, TopologyReference);
}

#pragma implementation_key(542)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetSubassembly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(543)
inline enum TGFramework::ObjectType TGAssembly::SubOccurrence::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(544)
inline _bstr_t TGAssembly::SubOccurrence::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(545)
inline HRESULT TGAssembly::SubOccurrence::GetMaterial ( SAFEARRAY * * DiffuseColor, SAFEARRAY * * AmbientColor, SAFEARRAY * * SpecularColor, SAFEARRAY * * EmissionColor, double * Shininess, double * Opacity ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005\x6005\x6005\x6005\x4005\x4005", DiffuseColor, AmbientColor, SpecularColor, EmissionColor, Shininess, Opacity);
}

#pragma implementation_key(546)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(547)
inline void TGAssembly::SubOccurrence::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(548)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetUseSimplified ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(549)
inline void TGAssembly::SubOccurrence::PutUseSimplified ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(550)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetDisplayReferencePlanes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(551)
inline void TGAssembly::SubOccurrence::PutDisplayReferencePlanes ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(552)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetDisplayCoordinateSystems ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(553)
inline void TGAssembly::SubOccurrence::PutDisplayCoordinateSystems ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(554)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetDisplayConstructions ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(555)
inline void TGAssembly::SubOccurrence::PutDisplayConstructions ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(556)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetDisplayConstrCurves ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(557)
inline void TGAssembly::SubOccurrence::PutDisplayConstrCurves ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(558)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetDisplayReferenceAxes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(559)
inline void TGAssembly::SubOccurrence::PutDisplayReferenceAxes ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(560)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetDisplaySketches ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(561)
inline void TGAssembly::SubOccurrence::PutDisplaySketches ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(562)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetDisplayAsLastSaved ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(563)
inline void TGAssembly::SubOccurrence::PutDisplayAsLastSaved ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(564)
inline void TGAssembly::SubOccurrence::PutAdjustable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(565)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetAdjustable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(566)
inline HRESULT TGAssembly::SubOccurrence::PutMatrix ( SAFEARRAY * * Matrix, VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005\x000b", Matrix, Replace);
}

#pragma implementation_key(567)
inline TGAssembly::OccurrencePtr TGAssembly::SubOccurrence::GetThisAsOccurrence ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(568)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetHasBodyOverride ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(569)
inline IDispatchPtr TGAssembly::SubOccurrence::GetBody ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(570)
inline HRESULT TGAssembly::SubOccurrence::GetSimplifiedBodies ( long * NumBodies, SAFEARRAY * * SimplifiedBodies ) {
    return _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumBodies, SimplifiedBodies);
}

#pragma implementation_key(571)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetIsPatterned ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(572)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetIsPatternItem ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(573)
inline HRESULT TGAssembly::SubOccurrence::GetBodyInversionMatrix ( SAFEARRAY * * InvMatrix ) {
    return _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", InvMatrix);
}

#pragma implementation_key(574)
inline TGAssembly::AdjustablePartPtr TGAssembly::SubOccurrence::MakeAdjustablePart ( ) {
    struct AdjustablePart * _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return AdjustablePartPtr(_result, false);
}

#pragma implementation_key(575)
inline TGAssembly::AdjustablePartPtr TGAssembly::SubOccurrence::GetAdjustablePart ( ) {
    struct AdjustablePart * _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return AdjustablePartPtr(_result, false);
}

#pragma implementation_key(576)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetIsAdjustablePart ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(577)
inline TGAssembly::SubassemblyBodiesPtr TGAssembly::SubOccurrence::GetSubassemblyBodies ( ) {
    struct SubassemblyBodies * _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SubassemblyBodiesPtr(_result, false);
}

#pragma implementation_key(578)
inline HRESULT TGAssembly::SubOccurrence::GetExplodeMatrix ( SAFEARRAY * * Matrix ) {
    return _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", Matrix);
}

#pragma implementation_key(579)
inline HRESULT TGAssembly::SubOccurrence::RemoveOverrideBody ( ) {
    return _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(580)
inline HRESULT TGAssembly::SubOccurrence::GetRangeBox ( SAFEARRAY * * MinRangePoint, SAFEARRAY * * MaxRangePoint ) {
    return _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005\x6005", MinRangePoint, MaxRangePoint);
}

#pragma implementation_key(581)
inline HRESULT TGAssembly::SubOccurrence::GetInterpartDrivingOccurrences ( long * NumDrivingOccurrences, SAFEARRAY * * DrivingOccurrences ) {
    return _com_dispatch_method(this, 0x29, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumDrivingOccurrences, DrivingOccurrences);
}

#pragma implementation_key(582)
inline HRESULT TGAssembly::SubOccurrence::GetInterpartDrivenOccurrences ( long * NumDrivenOccurrences, SAFEARRAY * * DrivenOccurrences ) {
    return _com_dispatch_method(this, 0x2a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumDrivenOccurrences, DrivenOccurrences);
}

#pragma implementation_key(583)
inline int TGAssembly::SubOccurrence::GetItemNumber ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(584)
inline void TGAssembly::SubOccurrence::PutItemNumber ( int _arg1 ) {
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(585)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetReferencePlanesVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(586)
inline void TGAssembly::SubOccurrence::PutReferencePlanesVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(587)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetCoordinateSystemsVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(588)
inline void TGAssembly::SubOccurrence::PutCoordinateSystemsVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(589)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetSketchesVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(590)
inline void TGAssembly::SubOccurrence::PutSketchesVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(591)
inline HRESULT TGAssembly::SubOccurrence::CreateTopologyReferenceToBodyOverride ( SAFEARRAY * * ReferenceKey, struct TopologyReference * * TopologyReference ) {
    return _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6011\x4009", ReferenceKey, TopologyReference);
}

#pragma implementation_key(592)
inline HRESULT TGAssembly::SubOccurrence::Range ( double * x_min, double * y_min, double * z_min, double * x_max, double * y_max, double * z_max ) {
    return _com_dispatch_method(this, 0x30, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", x_min, y_min, z_min, x_max, y_max, z_max);
}

#pragma implementation_key(593)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetDisplayCenterline ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(594)
inline void TGAssembly::SubOccurrence::PutDisplayCenterline ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(595)
inline TGFramework::ReferencePtr TGAssembly::SubOccurrence::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(596)
inline enum TGFramework::ObjectType TGAssembly::SubOccurrence::GetNodeType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(597)
inline VARIANT_BOOL TGAssembly::SubOccurrence::FileMissing ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x34, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(598)
inline VARIANT_BOOL TGAssembly::SubOccurrence::RecheckMissingFile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(599)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetDisplayLiveSections ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(600)
inline void TGAssembly::SubOccurrence::PutDisplayLiveSections ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(601)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetDisplayDimensions ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(602)
inline void TGAssembly::SubOccurrence::PutDisplayDimensions ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(603)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetDisplayAnnotations ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x38, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(604)
inline void TGAssembly::SubOccurrence::PutDisplayAnnotations ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x38, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(605)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetDisplayDesignBody ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(606)
inline void TGAssembly::SubOccurrence::PutDisplayDesignBody ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(607)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetHideInDrawing ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(608)
inline void TGAssembly::SubOccurrence::PutHideInDrawing ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(609)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetHideInSubassembly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(610)
inline void TGAssembly::SubOccurrence::PutHideInSubassembly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(611)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetLocatable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(612)
inline void TGAssembly::SubOccurrence::PutLocatable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(613)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetDisplayAsDraftReference ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(614)
inline void TGAssembly::SubOccurrence::PutDisplayAsDraftReference ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(615)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetExcludeFromPhysicalProperties ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(616)
inline void TGAssembly::SubOccurrence::PutExcludeFromPhysicalProperties ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(617)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetExcludeFromReports ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(618)
inline void TGAssembly::SubOccurrence::PutExcludeFromReports ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(619)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetExcludeFromInterference ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x40, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(620)
inline void TGAssembly::SubOccurrence::PutExcludeFromInterference ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x40, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(621)
inline _bstr_t TGAssembly::SubOccurrence::GetCustomPropertyValue ( _bstr_t CustomPropertyName ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x41, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x0008", (BSTR)CustomPropertyName);
    return _bstr_t(_result, false);
}

#pragma implementation_key(622)
inline void TGAssembly::SubOccurrence::PutCustomPropertyValue ( _bstr_t CustomPropertyName, _bstr_t _arg2 ) {
    _com_dispatch_method(this, 0x41, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)CustomPropertyName, (BSTR)_arg2);
}

#pragma implementation_key(623)
inline IDispatchPtr TGAssembly::SubOccurrence::GetFaceStyle ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x42, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(624)
inline void TGAssembly::SubOccurrence::PutFaceStyle ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x42, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(625)
inline IDispatchPtr TGAssembly::SubOccurrence::GetFaceStyle2 ( VARIANT_BOOL vbHonourPrefs ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x43, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000b", vbHonourPrefs);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(626)
inline HRESULT TGAssembly::SubOccurrence::PutStyleUsePartStyle ( ) {
    return _com_dispatch_method(this, 0x44, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(627)
inline HRESULT TGAssembly::SubOccurrence::PutStyleNone ( ) {
    return _com_dispatch_method(this, 0x45, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(628)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetStyleNone ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x46, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(629)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetStyleUsePartStyle ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x47, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(630)
inline _bstr_t TGAssembly::SubOccurrence::GetStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x48, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(631)
inline void TGAssembly::SubOccurrence::PutStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x48, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(632)
inline IDispatchPtr TGAssembly::SubOccurrence::BindKeyToTopology ( VARIANT_BOOL BodyOverride, SAFEARRAY * * ReferenceKey ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x49, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000b\x6011", BodyOverride, ReferenceKey);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(633)
inline HRESULT TGAssembly::SubOccurrence::GetSectionedFacetData ( long PartID, enum OccurrenceSectionedFacetDataConstants * FacetDataPresence, long * FacetCount, SAFEARRAY * * Points, SAFEARRAY * * Normals, SAFEARRAY * * TextureCoords, SAFEARRAY * * StyleIDs, SAFEARRAY * * FaceIDs ) {
    return _com_dispatch_method(this, 0x4a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003\x4003\x6005\x6005\x6005\x6003\x6003", PartID, FacetDataPresence, FacetCount, Points, Normals, TextureCoords, StyleIDs, FaceIDs);
}

#pragma implementation_key(634)
inline VARIANT_BOOL TGAssembly::SubOccurrence::GetIsInternalComponent ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(635)
inline TGAssembly::InternalComponentPtr TGAssembly::SubOccurrence::GetInternalComponent ( ) {
    struct InternalComponent * _result = 0;
    _com_dispatch_method(this, 0x4c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return InternalComponentPtr(_result, false);
}

//
// interface _ISubOccurrencesAuto wrapper method implementations
//

#pragma implementation_key(636)
inline TGAssembly::SubOccurrencePtr TGAssembly::_ISubOccurrencesAuto::Item ( const _variant_t & Index ) {
    struct SubOccurrence * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SubOccurrencePtr(_result, false);
}

#pragma implementation_key(637)
inline IUnknownPtr TGAssembly::_ISubOccurrencesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(638)
inline TGFramework::ApplicationPtr TGAssembly::_ISubOccurrencesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(639)
inline long TGAssembly::_ISubOccurrencesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(640)
inline IDispatchPtr TGAssembly::_ISubOccurrencesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// dispinterface TopologyReference wrapper method implementations
//

#pragma implementation_key(641)
inline TGFramework::ApplicationPtr TGAssembly::TopologyReference::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(642)
inline IDispatchPtr TGAssembly::TopologyReference::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(643)
inline IDispatchPtr TGAssembly::TopologyReference::GetObject ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(644)
inline HRESULT TGAssembly::TopologyReference::GetMatrix ( SAFEARRAY * * Matrix ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", Matrix);
}

#pragma implementation_key(645)
inline HRESULT TGAssembly::TopologyReference::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6011\x480c", ReferenceKey, KeySize);
}

#pragma implementation_key(646)
inline enum TGFramework::ObjectType TGAssembly::TopologyReference::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(647)
inline HRESULT TGAssembly::TopologyReference::GetOccurrencesInPath ( IDispatch * * TopOccurrence, long * NumSubOccurrencesInPath, long * NumBoundSubOccurrencesInPath, SAFEARRAY * * BoundSubOccurrencesInPath ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4003\x6009", TopOccurrence, NumSubOccurrencesInPath, NumBoundSubOccurrencesInPath, BoundSubOccurrencesInPath);
}

//
// interface _ITopologyReferenceAuto wrapper method implementations
//

#pragma implementation_key(648)
inline TGFramework::ApplicationPtr TGAssembly::_ITopologyReferenceAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(649)
inline IDispatchPtr TGAssembly::_ITopologyReferenceAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(650)
inline IDispatchPtr TGAssembly::_ITopologyReferenceAuto::GetObject ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Object(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(651)
inline HRESULT TGAssembly::_ITopologyReferenceAuto::GetMatrix ( SAFEARRAY * * Matrix ) {
    HRESULT _hr = raw_GetMatrix(Matrix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(652)
inline HRESULT TGAssembly::_ITopologyReferenceAuto::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize ) {
    HRESULT _hr = raw_GetReferenceKey(ReferenceKey, KeySize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(653)
inline enum TGFramework::ObjectType TGAssembly::_ITopologyReferenceAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(654)
inline HRESULT TGAssembly::_ITopologyReferenceAuto::GetOccurrencesInPath ( IDispatch * * TopOccurrence, long * NumSubOccurrencesInPath, long * NumBoundSubOccurrencesInPath, SAFEARRAY * * BoundSubOccurrencesInPath ) {
    HRESULT _hr = raw_GetOccurrencesInPath(TopOccurrence, NumSubOccurrencesInPath, NumBoundSubOccurrencesInPath, BoundSubOccurrencesInPath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface AdjustablePart wrapper method implementations
//

#pragma implementation_key(655)
inline TGFramework::ApplicationPtr TGAssembly::AdjustablePart::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(656)
inline IDispatchPtr TGAssembly::AdjustablePart::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(657)
inline TGAssembly::OccurrencePtr TGAssembly::AdjustablePart::GetOccurrence ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(658)
inline HRESULT TGAssembly::AdjustablePart::GetAdjustables ( long NumberOfEntries, SAFEARRAY * * PartVariables, SAFEARRAY * * AsmVariables ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x600c", NumberOfEntries, PartVariables, AsmVariables);
}

#pragma implementation_key(659)
inline HRESULT TGAssembly::AdjustablePart::SetAdjustables ( long NumberOfEntries, SAFEARRAY * * PartVariables, SAFEARRAY * * AsmVariables ) {
    return _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x600c", NumberOfEntries, PartVariables, AsmVariables);
}

#pragma implementation_key(660)
inline HRESULT TGAssembly::AdjustablePart::Delete ( ) {
    return _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(661)
inline VARIANT_BOOL TGAssembly::AdjustablePart::GetAdjustToFit ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(662)
inline void TGAssembly::AdjustablePart::PutAdjustToFit ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(663)
inline TGAssembly::TubePtr TGAssembly::AdjustablePart::GetTube ( ) {
    struct Tube * _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TubePtr(_result, false);
}

#pragma implementation_key(664)
inline IDispatchPtr TGAssembly::AdjustablePart::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(665)
inline VARIANT_BOOL TGAssembly::AdjustablePart::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// dispinterface Tube wrapper method implementations
//

#pragma implementation_key(666)
inline TGFramework::ApplicationPtr TGAssembly::Tube::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(667)
inline IDispatchPtr TGAssembly::Tube::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(668)
inline HRESULT TGAssembly::Tube::Path ( long * NumElementsInPath, VARIANT * Path, VARIANT * Reversed ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x480c\x480c", NumElementsInPath, Path, Reversed);
}

#pragma implementation_key(669)
inline _bstr_t TGAssembly::Tube::GetPartFileName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(670)
inline HRESULT TGAssembly::Tube::AddSegment ( IDispatch * TubeSegment, enum TubeSegmentAdditionStatusConstants * Status ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4003", TubeSegment, Status);
}

#pragma implementation_key(671)
inline HRESULT TGAssembly::Tube::RemoveSegment ( IDispatch * TubeSegment, enum TubeSegmentRemovalStatusConstants * Status ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4003", TubeSegment, Status);
}

#pragma implementation_key(672)
inline double TGAssembly::Tube::GetInsideArea ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(673)
inline double TGAssembly::Tube::GetInsideVolume ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(674)
inline VARIANT_BOOL TGAssembly::Tube::GetIsSolid ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(675)
inline void TGAssembly::Tube::PutIsSolid ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(676)
inline double TGAssembly::Tube::GetDefaultBendRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(677)
inline void TGAssembly::Tube::PutDefaultBendRadius ( double _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(678)
inline VARIANT_BOOL TGAssembly::Tube::GetUsesGlobalBendRadius ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(679)
inline void TGAssembly::Tube::PutUsesGlobalBendRadius ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(680)
inline HRESULT TGAssembly::Tube::IsBendRadiusOverridden ( IDispatch * Segment1, IDispatch * Segment2, VARIANT_BOOL * IsOverridden ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x400b", Segment1, Segment2, IsOverridden);
}

#pragma implementation_key(681)
inline HRESULT TGAssembly::Tube::GetBendRadius ( IDispatch * Segment1, IDispatch * Segment2, double * BendRadius ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x4005", Segment1, Segment2, BendRadius);
}

#pragma implementation_key(682)
inline HRESULT TGAssembly::Tube::SetBendRadius ( IDispatch * Segment1, IDispatch * Segment2, double BendRadius ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x0005", Segment1, Segment2, BendRadius);
}

#pragma implementation_key(683)
inline VARIANT_BOOL TGAssembly::Tube::GetUsesGlobalOuterDiameter ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(684)
inline void TGAssembly::Tube::PutUsesGlobalOuterDiameter ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(685)
inline VARIANT_BOOL TGAssembly::Tube::GetUsesGlobalMinimumFlatLength ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(686)
inline void TGAssembly::Tube::PutUsesGlobalMinimumFlatLength ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(687)
inline VARIANT_BOOL TGAssembly::Tube::GetUsesGlobalWallThickness ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(688)
inline void TGAssembly::Tube::PutUsesGlobalWallThickness ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(689)
inline double TGAssembly::Tube::GetMinimumFlatLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(690)
inline void TGAssembly::Tube::PutMinimumFlatLength ( double _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(691)
inline double TGAssembly::Tube::GetWallThickness ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(692)
inline void TGAssembly::Tube::PutWallThickness ( double _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(693)
inline HRESULT TGAssembly::Tube::BendTable ( VARIANT * CutLength, VARIANT * NumOfBends, VARIANT * FeedLength, VARIANT * RotationAngle, VARIANT * BendRadius, VARIANT * ReverseBendOrder, const _variant_t & SaveToFileName, VARIANT * BendAngle ) {
    return _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x480c\x480c\x480c\x480c\x480c\x480c\x080c\x480c", CutLength, NumOfBends, FeedLength, RotationAngle, BendRadius, ReverseBendOrder, &SaveToFileName, BendAngle);
}

#pragma implementation_key(694)
inline HRESULT TGAssembly::Tube::GetEndTreatment ( VARIANT_BOOL StartOrEnd, VARIANT * EndTreatmentType, VARIANT * InsideDiameter, VARIANT * OutsideDiameter, VARIANT * Depth, VARIANT * Radius, VARIANT * Angle ) {
    return _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x480c\x480c\x480c\x480c\x480c\x480c", StartOrEnd, EndTreatmentType, InsideDiameter, OutsideDiameter, Depth, Radius, Angle);
}

#pragma implementation_key(695)
inline HRESULT TGAssembly::Tube::SetEndTreatment ( VARIANT_BOOL StartOrEnd, const _variant_t & EndTreatmentType, const _variant_t & InsideDiameter, const _variant_t & OutsideDiameter, const _variant_t & Depth, const _variant_t & Radius, const _variant_t & Angle ) {
    return _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x080c\x080c\x080c\x080c\x080c\x080c", StartOrEnd, &EndTreatmentType, &InsideDiameter, &OutsideDiameter, &Depth, &Radius, &Angle);
}

#pragma implementation_key(696)
inline void TGAssembly::Tube::PutOuterDiameter ( double _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(697)
inline double TGAssembly::Tube::GetOuterDiameter ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(698)
inline void TGAssembly::Tube::PutMaterial ( struct TGFramework::FaceStyle * _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(699)
inline TGFramework::FaceStylePtr TGAssembly::Tube::GetMaterial ( ) {
    struct TGFramework::FaceStyle * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::FaceStylePtr(_result, false);
}

#pragma implementation_key(700)
inline IDispatchPtr TGAssembly::Tube::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(701)
inline VARIANT_BOOL TGAssembly::Tube::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(702)
inline HRESULT TGAssembly::Tube::GetTubePropertyNameAndValueByPid ( enum TubePropertyPidConstants TubePropertyPid, BSTR * TubePropertyName, BSTR * TubePropertyValue ) {
    return _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4008\x4008", TubePropertyPid, TubePropertyName, TubePropertyValue);
}

#pragma implementation_key(703)
inline HRESULT TGAssembly::Tube::UpdateTubeFileProperties ( ) {
    return _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(704)
inline double TGAssembly::Tube::GetExtentStart ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(705)
inline void TGAssembly::Tube::PutExtentStart ( double _arg1 ) {
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(706)
inline double TGAssembly::Tube::GetExtentEnd ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(707)
inline void TGAssembly::Tube::PutExtentEnd ( double _arg1 ) {
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(708)
inline HRESULT TGAssembly::Tube::GetPathSegmentsRelations ( long * NumSegmentRelations, VARIANT * SegmentRelations ) {
    return _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x480c", NumSegmentRelations, SegmentRelations);
}

#pragma implementation_key(709)
inline HRESULT TGAssembly::Tube::IsFrozen ( VARIANT_BOOL * bFrozen ) {
    return _com_dispatch_method(this, 0x24, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", bFrozen);
}

#pragma implementation_key(710)
inline HRESULT TGAssembly::Tube::IsLinked ( VARIANT_BOOL * bLinked ) {
    return _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", bLinked);
}

#pragma implementation_key(711)
inline HRESULT TGAssembly::Tube::Freeze ( ) {
    return _com_dispatch_method(this, 0x25, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(712)
inline HRESULT TGAssembly::Tube::Thaw ( ) {
    return _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(713)
inline HRESULT TGAssembly::Tube::BreakLink ( ) {
    return _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(714)
inline void TGAssembly::Tube::PutTubeMaterial ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(715)
inline _bstr_t TGAssembly::Tube::GetTubeMaterial ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _IAdjustablePartAuto wrapper method implementations
//

#pragma implementation_key(716)
inline TGFramework::ApplicationPtr TGAssembly::_IAdjustablePartAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(717)
inline IDispatchPtr TGAssembly::_IAdjustablePartAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(718)
inline TGAssembly::OccurrencePtr TGAssembly::_IAdjustablePartAuto::GetOccurrence ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(719)
inline HRESULT TGAssembly::_IAdjustablePartAuto::GetAdjustables ( long NumberOfEntries, SAFEARRAY * * PartVariables, SAFEARRAY * * AsmVariables ) {
    HRESULT _hr = raw_GetAdjustables(NumberOfEntries, PartVariables, AsmVariables);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(720)
inline HRESULT TGAssembly::_IAdjustablePartAuto::SetAdjustables ( long NumberOfEntries, SAFEARRAY * * PartVariables, SAFEARRAY * * AsmVariables ) {
    HRESULT _hr = raw_SetAdjustables(NumberOfEntries, PartVariables, AsmVariables);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(721)
inline HRESULT TGAssembly::_IAdjustablePartAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(722)
inline VARIANT_BOOL TGAssembly::_IAdjustablePartAuto::GetAdjustToFit ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AdjustToFit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(723)
inline void TGAssembly::_IAdjustablePartAuto::PutAdjustToFit ( VARIANT_BOOL AdjustToFit ) {
    HRESULT _hr = put_AdjustToFit(AdjustToFit);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(724)
inline TGAssembly::TubePtr TGAssembly::_IAdjustablePartAuto::GetTube ( ) {
    struct Tube * _result = 0;
    HRESULT _hr = raw_GetTube(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TubePtr(_result, false);
}

#pragma implementation_key(725)
inline IDispatchPtr TGAssembly::_IAdjustablePartAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(726)
inline VARIANT_BOOL TGAssembly::_IAdjustablePartAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _ITubeAuto wrapper method implementations
//

#pragma implementation_key(727)
inline TGFramework::ApplicationPtr TGAssembly::_ITubeAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(728)
inline IDispatchPtr TGAssembly::_ITubeAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(729)
inline HRESULT TGAssembly::_ITubeAuto::Path ( long * NumElementsInPath, VARIANT * Path, VARIANT * Reversed ) {
    HRESULT _hr = raw_Path(NumElementsInPath, Path, Reversed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(730)
inline _bstr_t TGAssembly::_ITubeAuto::GetPartFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PartFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(731)
inline HRESULT TGAssembly::_ITubeAuto::AddSegment ( IDispatch * TubeSegment, enum TubeSegmentAdditionStatusConstants * Status ) {
    HRESULT _hr = raw_AddSegment(TubeSegment, Status);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(732)
inline HRESULT TGAssembly::_ITubeAuto::RemoveSegment ( IDispatch * TubeSegment, enum TubeSegmentRemovalStatusConstants * Status ) {
    HRESULT _hr = raw_RemoveSegment(TubeSegment, Status);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(733)
inline double TGAssembly::_ITubeAuto::GetInsideArea ( ) {
    double _result = 0;
    HRESULT _hr = get_InsideArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(734)
inline double TGAssembly::_ITubeAuto::GetInsideVolume ( ) {
    double _result = 0;
    HRESULT _hr = get_InsideVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(735)
inline VARIANT_BOOL TGAssembly::_ITubeAuto::GetIsSolid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSolid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(736)
inline void TGAssembly::_ITubeAuto::PutIsSolid ( VARIANT_BOOL IsSolid ) {
    HRESULT _hr = put_IsSolid(IsSolid);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(737)
inline double TGAssembly::_ITubeAuto::GetDefaultBendRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_DefaultBendRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(738)
inline void TGAssembly::_ITubeAuto::PutDefaultBendRadius ( double DefaultBendRadius ) {
    HRESULT _hr = put_DefaultBendRadius(DefaultBendRadius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(739)
inline VARIANT_BOOL TGAssembly::_ITubeAuto::GetUsesGlobalBendRadius ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsesGlobalBendRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(740)
inline void TGAssembly::_ITubeAuto::PutUsesGlobalBendRadius ( VARIANT_BOOL UsesDefaultBendRadius ) {
    HRESULT _hr = put_UsesGlobalBendRadius(UsesDefaultBendRadius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(741)
inline HRESULT TGAssembly::_ITubeAuto::IsBendRadiusOverridden ( IDispatch * Segment1, IDispatch * Segment2, VARIANT_BOOL * IsOverridden ) {
    HRESULT _hr = raw_IsBendRadiusOverridden(Segment1, Segment2, IsOverridden);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(742)
inline HRESULT TGAssembly::_ITubeAuto::GetBendRadius ( IDispatch * Segment1, IDispatch * Segment2, double * BendRadius ) {
    HRESULT _hr = raw_GetBendRadius(Segment1, Segment2, BendRadius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(743)
inline HRESULT TGAssembly::_ITubeAuto::SetBendRadius ( IDispatch * Segment1, IDispatch * Segment2, double BendRadius ) {
    HRESULT _hr = raw_SetBendRadius(Segment1, Segment2, BendRadius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(744)
inline VARIANT_BOOL TGAssembly::_ITubeAuto::GetUsesGlobalOuterDiameter ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsesGlobalOuterDiameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(745)
inline void TGAssembly::_ITubeAuto::PutUsesGlobalOuterDiameter ( VARIANT_BOOL UsesOuterDiameter ) {
    HRESULT _hr = put_UsesGlobalOuterDiameter(UsesOuterDiameter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(746)
inline VARIANT_BOOL TGAssembly::_ITubeAuto::GetUsesGlobalMinimumFlatLength ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsesGlobalMinimumFlatLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(747)
inline void TGAssembly::_ITubeAuto::PutUsesGlobalMinimumFlatLength ( VARIANT_BOOL UsesGlobalMinimumFlatLength ) {
    HRESULT _hr = put_UsesGlobalMinimumFlatLength(UsesGlobalMinimumFlatLength);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(748)
inline VARIANT_BOOL TGAssembly::_ITubeAuto::GetUsesGlobalWallThickness ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsesGlobalWallThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(749)
inline void TGAssembly::_ITubeAuto::PutUsesGlobalWallThickness ( VARIANT_BOOL UsesGlobalWallThickness ) {
    HRESULT _hr = put_UsesGlobalWallThickness(UsesGlobalWallThickness);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(750)
inline double TGAssembly::_ITubeAuto::GetMinimumFlatLength ( ) {
    double _result = 0;
    HRESULT _hr = get_MinimumFlatLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(751)
inline void TGAssembly::_ITubeAuto::PutMinimumFlatLength ( double MinimumFlatLength ) {
    HRESULT _hr = put_MinimumFlatLength(MinimumFlatLength);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(752)
inline double TGAssembly::_ITubeAuto::GetWallThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_WallThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(753)
inline void TGAssembly::_ITubeAuto::PutWallThickness ( double WallThickness ) {
    HRESULT _hr = put_WallThickness(WallThickness);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(754)
inline HRESULT TGAssembly::_ITubeAuto::BendTable ( VARIANT * CutLength, VARIANT * NumOfBends, VARIANT * FeedLength, VARIANT * RotationAngle, VARIANT * BendRadius, VARIANT * ReverseBendOrder, const _variant_t & SaveToFileName, VARIANT * BendAngle ) {
    HRESULT _hr = raw_BendTable(CutLength, NumOfBends, FeedLength, RotationAngle, BendRadius, ReverseBendOrder, SaveToFileName, BendAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(755)
inline HRESULT TGAssembly::_ITubeAuto::GetEndTreatment ( VARIANT_BOOL StartOrEnd, VARIANT * EndTreatmentType, VARIANT * InsideDiameter, VARIANT * OutsideDiameter, VARIANT * Depth, VARIANT * Radius, VARIANT * Angle ) {
    HRESULT _hr = raw_GetEndTreatment(StartOrEnd, EndTreatmentType, InsideDiameter, OutsideDiameter, Depth, Radius, Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(756)
inline HRESULT TGAssembly::_ITubeAuto::SetEndTreatment ( VARIANT_BOOL StartOrEnd, const _variant_t & EndTreatmentType, const _variant_t & InsideDiameter, const _variant_t & OutsideDiameter, const _variant_t & Depth, const _variant_t & Radius, const _variant_t & Angle ) {
    HRESULT _hr = raw_SetEndTreatment(StartOrEnd, EndTreatmentType, InsideDiameter, OutsideDiameter, Depth, Radius, Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(757)
inline void TGAssembly::_ITubeAuto::PutOuterDiameter ( double OuterDiameter ) {
    HRESULT _hr = put_OuterDiameter(OuterDiameter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(758)
inline double TGAssembly::_ITubeAuto::GetOuterDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_OuterDiameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(759)
inline void TGAssembly::_ITubeAuto::PutMaterial ( struct TGFramework::FaceStyle * Material ) {
    HRESULT _hr = put_Material(Material);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(760)
inline TGFramework::FaceStylePtr TGAssembly::_ITubeAuto::GetMaterial ( ) {
    struct TGFramework::FaceStyle * _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::FaceStylePtr(_result, false);
}

#pragma implementation_key(761)
inline IDispatchPtr TGAssembly::_ITubeAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(762)
inline VARIANT_BOOL TGAssembly::_ITubeAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(763)
inline HRESULT TGAssembly::_ITubeAuto::GetTubePropertyNameAndValueByPid ( enum TubePropertyPidConstants TubePropertyPid, BSTR * TubePropertyName, BSTR * TubePropertyValue ) {
    HRESULT _hr = raw_GetTubePropertyNameAndValueByPid(TubePropertyPid, TubePropertyName, TubePropertyValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(764)
inline HRESULT TGAssembly::_ITubeAuto::UpdateTubeFileProperties ( ) {
    HRESULT _hr = raw_UpdateTubeFileProperties();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(765)
inline double TGAssembly::_ITubeAuto::GetExtentStart ( ) {
    double _result = 0;
    HRESULT _hr = get_ExtentStart(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(766)
inline void TGAssembly::_ITubeAuto::PutExtentStart ( double ExtentStart ) {
    HRESULT _hr = put_ExtentStart(ExtentStart);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(767)
inline double TGAssembly::_ITubeAuto::GetExtentEnd ( ) {
    double _result = 0;
    HRESULT _hr = get_ExtentEnd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(768)
inline void TGAssembly::_ITubeAuto::PutExtentEnd ( double ExtentEnd ) {
    HRESULT _hr = put_ExtentEnd(ExtentEnd);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(769)
inline HRESULT TGAssembly::_ITubeAuto::GetPathSegmentsRelations ( long * NumSegmentRelations, VARIANT * SegmentRelations ) {
    HRESULT _hr = raw_GetPathSegmentsRelations(NumSegmentRelations, SegmentRelations);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(770)
inline HRESULT TGAssembly::_ITubeAuto::IsFrozen ( VARIANT_BOOL * bFrozen ) {
    HRESULT _hr = raw_IsFrozen(bFrozen);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(771)
inline HRESULT TGAssembly::_ITubeAuto::IsLinked ( VARIANT_BOOL * bLinked ) {
    HRESULT _hr = raw_IsLinked(bLinked);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(772)
inline HRESULT TGAssembly::_ITubeAuto::Freeze ( ) {
    HRESULT _hr = raw_Freeze();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(773)
inline HRESULT TGAssembly::_ITubeAuto::Thaw ( ) {
    HRESULT _hr = raw_Thaw();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(774)
inline HRESULT TGAssembly::_ITubeAuto::BreakLink ( ) {
    HRESULT _hr = raw_BreakLink();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(775)
inline void TGAssembly::_ITubeAuto::PutTubeMaterial ( _bstr_t pbstrMaterialName ) {
    HRESULT _hr = put_TubeMaterial(pbstrMaterialName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(776)
inline _bstr_t TGAssembly::_ITubeAuto::GetTubeMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TubeMaterial(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// dispinterface SubassemblyBodies wrapper method implementations
//

#pragma implementation_key(777)
inline TGAssembly::SubassemblyBodyPtr TGAssembly::SubassemblyBodies::Item ( const _variant_t & Index ) {
    struct SubassemblyBody * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return SubassemblyBodyPtr(_result, false);
}

#pragma implementation_key(778)
inline TGFramework::ApplicationPtr TGAssembly::SubassemblyBodies::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(779)
inline long TGAssembly::SubassemblyBodies::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(780)
inline IDispatchPtr TGAssembly::SubassemblyBodies::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(781)
inline IDispatchPtr TGAssembly::SubassemblyBodies::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(782)
inline VARIANT_BOOL TGAssembly::SubassemblyBodies::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// dispinterface SubassemblyBody wrapper method implementations
//

#pragma implementation_key(783)
inline TGFramework::ApplicationPtr TGAssembly::SubassemblyBody::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(784)
inline IDispatchPtr TGAssembly::SubassemblyBody::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(785)
inline _bstr_t TGAssembly::SubassemblyBody::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(786)
inline enum TGFramework::ObjectType TGAssembly::SubassemblyBody::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(787)
inline IDispatchPtr TGAssembly::SubassemblyBody::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(788)
inline VARIANT_BOOL TGAssembly::SubassemblyBody::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(789)
inline TGAssembly::AssemblyDocumentPtr TGAssembly::SubassemblyBody::GetTopLevelDocument ( ) {
    struct AssemblyDocument * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyDocumentPtr(_result, false);
}

#pragma implementation_key(790)
inline HRESULT TGAssembly::SubassemblyBody::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6011\x480c", ReferenceKey, KeySize);
}

#pragma implementation_key(791)
inline IDispatchPtr TGAssembly::SubassemblyBody::GetBody ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(792)
inline HRESULT TGAssembly::SubassemblyBody::GetMaterial ( SAFEARRAY * * DiffuseColor, SAFEARRAY * * AmbientColor, SAFEARRAY * * SpecularColor, SAFEARRAY * * EmissionColor, double * Shininess, double * Opacity ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005\x6005\x6005\x6005\x4005\x4005", DiffuseColor, AmbientColor, SpecularColor, EmissionColor, Shininess, Opacity);
}

#pragma implementation_key(793)
inline VARIANT_BOOL TGAssembly::SubassemblyBody::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(794)
inline void TGAssembly::SubassemblyBody::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(795)
inline enum TGAssembly::seAssemblyBodyTypeConstants TGAssembly::SubassemblyBody::GetAssemblyBodyType ( ) {
    enum seAssemblyBodyTypeConstants _result;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(796)
inline TGAssembly::AssemblyBodyPtr TGAssembly::SubassemblyBody::GetThisAsAssemblyBody ( ) {
    struct AssemblyBody * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyBodyPtr(_result, false);
}

#pragma implementation_key(797)
inline TGFramework::ReferencePtr TGAssembly::SubassemblyBody::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(798)
inline HRESULT TGAssembly::SubassemblyBody::GetSectionedFacetData ( enum OccurrenceSectionedFacetDataConstants * FacetDataPresence, long * FacetCount, SAFEARRAY * * Points, SAFEARRAY * * Normals, SAFEARRAY * * TextureCoords, SAFEARRAY * * StyleIDs, SAFEARRAY * * FaceIDs ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4003\x6005\x6005\x6005\x6003\x6003", FacetDataPresence, FacetCount, Points, Normals, TextureCoords, StyleIDs, FaceIDs);
}

//
// interface _ISubassemblyBodiesAuto wrapper method implementations
//

#pragma implementation_key(799)
inline TGAssembly::SubassemblyBodyPtr TGAssembly::_ISubassemblyBodiesAuto::Item ( const _variant_t & Index ) {
    struct SubassemblyBody * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SubassemblyBodyPtr(_result, false);
}

#pragma implementation_key(800)
inline IUnknownPtr TGAssembly::_ISubassemblyBodiesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(801)
inline TGFramework::ApplicationPtr TGAssembly::_ISubassemblyBodiesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(802)
inline long TGAssembly::_ISubassemblyBodiesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(803)
inline IDispatchPtr TGAssembly::_ISubassemblyBodiesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(804)
inline IDispatchPtr TGAssembly::_ISubassemblyBodiesAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(805)
inline VARIANT_BOOL TGAssembly::_ISubassemblyBodiesAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AssemblyBody wrapper method implementations
//

#pragma implementation_key(806)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyBody::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(807)
inline IDispatchPtr TGAssembly::AssemblyBody::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(808)
inline _bstr_t TGAssembly::AssemblyBody::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(809)
inline enum TGFramework::ObjectType TGAssembly::AssemblyBody::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(810)
inline VARIANT_BOOL TGAssembly::AssemblyBody::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(811)
inline void TGAssembly::AssemblyBody::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(812)
inline _bstr_t TGAssembly::AssemblyBody::GetStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(813)
inline void TGAssembly::AssemblyBody::PutStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(814)
inline IDispatchPtr TGAssembly::AssemblyBody::GetFaceStyle ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(815)
inline void TGAssembly::AssemblyBody::PutFaceStyle ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(816)
inline IDispatchPtr TGAssembly::AssemblyBody::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(817)
inline VARIANT_BOOL TGAssembly::AssemblyBody::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(818)
inline TGAssembly::AssemblyDocumentPtr TGAssembly::AssemblyBody::GetTopLevelDocument ( ) {
    struct AssemblyDocument * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyDocumentPtr(_result, false);
}

#pragma implementation_key(819)
inline HRESULT TGAssembly::AssemblyBody::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6011\x480c", ReferenceKey, KeySize);
}

#pragma implementation_key(820)
inline IDispatchPtr TGAssembly::AssemblyBody::GetFaceStyle2 ( VARIANT_BOOL vbHonourPrefs ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000b", vbHonourPrefs);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(821)
inline IDispatchPtr TGAssembly::AssemblyBody::GetBody ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(822)
inline enum TGAssembly::seAssemblyBodyTypeConstants TGAssembly::AssemblyBody::GetAssemblyBodyType ( ) {
    enum seAssemblyBodyTypeConstants _result;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(823)
inline HRESULT TGAssembly::AssemblyBody::Mirror ( IDispatch * pPlane ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", pPlane);
}

#pragma implementation_key(824)
inline HRESULT TGAssembly::AssemblyBody::GetSectionedFacetData ( enum OccurrenceSectionedFacetDataConstants * FacetDataPresence, long * FacetCount, SAFEARRAY * * Points, SAFEARRAY * * Normals, SAFEARRAY * * TextureCoords, SAFEARRAY * * StyleIDs, SAFEARRAY * * FaceIDs ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4003\x6005\x6005\x6005\x6003\x6003", FacetDataPresence, FacetCount, Points, Normals, TextureCoords, StyleIDs, FaceIDs);
}

//
// interface _ISubassemblyBodyAuto wrapper method implementations
//

#pragma implementation_key(825)
inline TGFramework::ApplicationPtr TGAssembly::_ISubassemblyBodyAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(826)
inline IDispatchPtr TGAssembly::_ISubassemblyBodyAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(827)
inline _bstr_t TGAssembly::_ISubassemblyBodyAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(828)
inline enum TGFramework::ObjectType TGAssembly::_ISubassemblyBodyAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(829)
inline IDispatchPtr TGAssembly::_ISubassemblyBodyAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(830)
inline VARIANT_BOOL TGAssembly::_ISubassemblyBodyAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(831)
inline TGAssembly::AssemblyDocumentPtr TGAssembly::_ISubassemblyBodyAuto::GetTopLevelDocument ( ) {
    struct AssemblyDocument * _result = 0;
    HRESULT _hr = get_TopLevelDocument(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDocumentPtr(_result, false);
}

#pragma implementation_key(832)
inline HRESULT TGAssembly::_ISubassemblyBodyAuto::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize ) {
    HRESULT _hr = raw_GetReferenceKey(ReferenceKey, KeySize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(833)
inline IDispatchPtr TGAssembly::_ISubassemblyBodyAuto::GetBody ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Body(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(834)
inline HRESULT TGAssembly::_ISubassemblyBodyAuto::GetMaterial ( SAFEARRAY * * DiffuseColor, SAFEARRAY * * AmbientColor, SAFEARRAY * * SpecularColor, SAFEARRAY * * EmissionColor, double * Shininess, double * Opacity ) {
    HRESULT _hr = raw_GetMaterial(DiffuseColor, AmbientColor, SpecularColor, EmissionColor, Shininess, Opacity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(835)
inline VARIANT_BOOL TGAssembly::_ISubassemblyBodyAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(836)
inline void TGAssembly::_ISubassemblyBodyAuto::PutVisible ( VARIANT_BOOL pbVisible ) {
    HRESULT _hr = put_Visible(pbVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(837)
inline enum TGAssembly::seAssemblyBodyTypeConstants TGAssembly::_ISubassemblyBodyAuto::GetAssemblyBodyType ( ) {
    enum seAssemblyBodyTypeConstants _result;
    HRESULT _hr = get_AssemblyBodyType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(838)
inline TGAssembly::AssemblyBodyPtr TGAssembly::_ISubassemblyBodyAuto::GetThisAsAssemblyBody ( ) {
    struct AssemblyBody * _result = 0;
    HRESULT _hr = get_ThisAsAssemblyBody(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyBodyPtr(_result, false);
}

#pragma implementation_key(839)
inline TGFramework::ReferencePtr TGAssembly::_ISubassemblyBodyAuto::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    HRESULT _hr = get_Reference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(840)
inline HRESULT TGAssembly::_ISubassemblyBodyAuto::GetSectionedFacetData ( enum OccurrenceSectionedFacetDataConstants * FacetDataPresence, long * FacetCount, SAFEARRAY * * Points, SAFEARRAY * * Normals, SAFEARRAY * * TextureCoords, SAFEARRAY * * StyleIDs, SAFEARRAY * * FaceIDs ) {
    HRESULT _hr = raw_GetSectionedFacetData(FacetDataPresence, FacetCount, Points, Normals, TextureCoords, StyleIDs, FaceIDs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IAssemblyBodyAuto wrapper method implementations
//

#pragma implementation_key(841)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyBodyAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(842)
inline IDispatchPtr TGAssembly::_IAssemblyBodyAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(843)
inline _bstr_t TGAssembly::_IAssemblyBodyAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(844)
inline enum TGFramework::ObjectType TGAssembly::_IAssemblyBodyAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(845)
inline VARIANT_BOOL TGAssembly::_IAssemblyBodyAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(846)
inline void TGAssembly::_IAssemblyBodyAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(847)
inline _bstr_t TGAssembly::_IAssemblyBodyAuto::GetStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(848)
inline void TGAssembly::_IAssemblyBodyAuto::PutStyle ( _bstr_t Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(849)
inline IDispatchPtr TGAssembly::_IAssemblyBodyAuto::GetFaceStyle ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FaceStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(850)
inline void TGAssembly::_IAssemblyBodyAuto::PutFaceStyle ( IDispatch * FaceStyle ) {
    HRESULT _hr = put_FaceStyle(FaceStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(851)
inline IDispatchPtr TGAssembly::_IAssemblyBodyAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(852)
inline VARIANT_BOOL TGAssembly::_IAssemblyBodyAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(853)
inline TGAssembly::AssemblyDocumentPtr TGAssembly::_IAssemblyBodyAuto::GetTopLevelDocument ( ) {
    struct AssemblyDocument * _result = 0;
    HRESULT _hr = get_TopLevelDocument(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDocumentPtr(_result, false);
}

#pragma implementation_key(854)
inline HRESULT TGAssembly::_IAssemblyBodyAuto::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize ) {
    HRESULT _hr = raw_GetReferenceKey(ReferenceKey, KeySize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(855)
inline IDispatchPtr TGAssembly::_IAssemblyBodyAuto::GetFaceStyle2 ( VARIANT_BOOL vbHonourPrefs ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetFaceStyle2(vbHonourPrefs, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(856)
inline IDispatchPtr TGAssembly::_IAssemblyBodyAuto::GetBody ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Body(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(857)
inline enum TGAssembly::seAssemblyBodyTypeConstants TGAssembly::_IAssemblyBodyAuto::GetAssemblyBodyType ( ) {
    enum seAssemblyBodyTypeConstants _result;
    HRESULT _hr = get_AssemblyBodyType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(858)
inline HRESULT TGAssembly::_IAssemblyBodyAuto::Mirror ( IDispatch * pPlane ) {
    HRESULT _hr = raw_Mirror(pPlane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(859)
inline HRESULT TGAssembly::_IAssemblyBodyAuto::GetSectionedFacetData ( enum OccurrenceSectionedFacetDataConstants * FacetDataPresence, long * FacetCount, SAFEARRAY * * Points, SAFEARRAY * * Normals, SAFEARRAY * * TextureCoords, SAFEARRAY * * StyleIDs, SAFEARRAY * * FaceIDs ) {
    HRESULT _hr = raw_GetSectionedFacetData(FacetDataPresence, FacetCount, Points, Normals, TextureCoords, StyleIDs, FaceIDs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface InternalComponent wrapper method implementations
//

#pragma implementation_key(860)
inline TGFramework::ApplicationPtr TGAssembly::InternalComponent::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(861)
inline IDispatchPtr TGAssembly::InternalComponent::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(862)
inline _bstr_t TGAssembly::InternalComponent::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(863)
inline void TGAssembly::InternalComponent::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(864)
inline enum TGAssembly::InternalComponentTypeConstant TGAssembly::InternalComponent::GetType ( ) {
    enum InternalComponentTypeConstant _result;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(865)
inline HRESULT TGAssembly::InternalComponent::Optimize ( ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(866)
inline HRESULT TGAssembly::InternalComponent::DeleteBodies ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(867)
inline long TGAssembly::InternalComponent::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(868)
inline HRESULT TGAssembly::InternalComponent::GetBodies ( long * NumberOfBodies, SAFEARRAY * * Bodies ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumberOfBodies, Bodies);
}

#pragma implementation_key(869)
inline TGPart::ModelsPtr TGAssembly::InternalComponent::GetModels ( ) {
    struct TGPart::Models * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::ModelsPtr(_result, false);
}

#pragma implementation_key(870)
inline TGPart::ConstructionsPtr TGAssembly::InternalComponent::GetConstructions ( ) {
    struct TGPart::Constructions * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::ConstructionsPtr(_result, false);
}

#pragma implementation_key(871)
inline HRESULT TGAssembly::InternalComponent::EditStart ( ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(872)
inline HRESULT TGAssembly::InternalComponent::EditEnd ( ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(873)
inline HRESULT TGAssembly::InternalComponent::MoveBody ( IDispatch * BodyProxy ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", BodyProxy);
}

#pragma implementation_key(874)
inline HRESULT TGAssembly::InternalComponent::MakeActive ( ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(875)
inline VARIANT_BOOL TGAssembly::InternalComponent::IsActive ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(876)
inline HRESULT TGAssembly::InternalComponent::GetSheetMetalParameter ( enum TGPart::SheetMetalGlobalConstants Parameter, VARIANT * Value ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x400c", Parameter, Value);
}

#pragma implementation_key(877)
inline HRESULT TGAssembly::InternalComponent::SetSheetMetalParameter ( enum TGPart::SheetMetalGlobalConstants Parameter, const _variant_t & Value ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c", Parameter, &Value);
}

#pragma implementation_key(878)
inline enum TGPart::ModelingModeConstants TGAssembly::InternalComponent::GetModelingMode ( ) {
    enum TGPart::ModelingModeConstants _result;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(879)
inline void TGAssembly::InternalComponent::PutModelingMode ( enum TGPart::ModelingModeConstants _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(880)
inline TGPart::SketchsPtr TGAssembly::InternalComponent::GetSketches ( ) {
    struct TGPart::Sketchs * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SketchsPtr(_result, false);
}

#pragma implementation_key(881)
inline TGPart::ProfileSetsPtr TGAssembly::InternalComponent::GetProfileSets ( ) {
    struct TGPart::ProfileSets * _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::ProfileSetsPtr(_result, false);
}

#pragma implementation_key(882)
inline TGPart::RefPlanesPtr TGAssembly::InternalComponent::GetPartRefPlanes ( ) {
    struct TGPart::RefPlanes * _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::RefPlanesPtr(_result, false);
}

#pragma implementation_key(883)
inline TGPart::RefAxesPtr TGAssembly::InternalComponent::GetRefAxes ( ) {
    struct TGPart::RefAxes * _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::RefAxesPtr(_result, false);
}

#pragma implementation_key(884)
inline TGPart::BendTablePtr TGAssembly::InternalComponent::GetBendTable ( ) {
    struct TGPart::BendTable * _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::BendTablePtr(_result, false);
}

#pragma implementation_key(885)
inline TGPart::UsedSketchesPtr TGAssembly::InternalComponent::GetUsedSketches ( ) {
    struct TGPart::UsedSketches * _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::UsedSketchesPtr(_result, false);
}

#pragma implementation_key(886)
inline TGPart::UserDefinedSetsPtr TGAssembly::InternalComponent::GetUserDefinedSets ( ) {
    struct TGPart::UserDefinedSets * _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::UserDefinedSetsPtr(_result, false);
}

#pragma implementation_key(887)
inline TGPart::ConstraintsPtr TGAssembly::InternalComponent::GetConstraints ( ) {
    struct TGPart::Constraints * _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::ConstraintsPtr(_result, false);
}

#pragma implementation_key(888)
inline VARIANT_BOOL TGAssembly::InternalComponent::GetDisableMoveToSynchronous ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(889)
inline void TGAssembly::InternalComponent::PutDisableMoveToSynchronous ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(890)
inline HRESULT TGAssembly::InternalComponent::Separate ( long NumberOfFeatures, SAFEARRAY * * Features ) {
    return _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009", NumberOfFeatures, Features);
}

#pragma implementation_key(891)
inline HRESULT TGAssembly::InternalComponent::Break ( long NumberOfFeatures, SAFEARRAY * * Features ) {
    return _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009", NumberOfFeatures, Features);
}

#pragma implementation_key(892)
inline HRESULT TGAssembly::InternalComponent::MoveToSynchronous ( IDispatch * pFeatureUnk, VARIANT_BOOL bIgnoreWarnings, VARIANT_BOOL bExtendSelection, long * NumberOfFeaturesCausingError, SAFEARRAY * * ErrorMessageArray, long * NumberOfFeaturesCausingWarning, SAFEARRAY * * WarningMessageArray, double * VolumeDifference ) {
    return _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x000b\x000b\x4003\x6008\x4003\x6008\x4005", pFeatureUnk, bIgnoreWarnings, bExtendSelection, NumberOfFeaturesCausingError, ErrorMessageArray, NumberOfFeaturesCausingWarning, WarningMessageArray, VolumeDifference);
}

#pragma implementation_key(893)
inline HRESULT TGAssembly::InternalComponent::TransformToSynchronousSheetmetal ( IDispatch * pRefFace, long nEdgeNum, SAFEARRAY * * EdgesArray, const _variant_t & BRType, double dBRWidth, double dBRLength, double dBendRadius, double dNeutralFactor ) {
    return _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003\x6009\x000c\x0005\x0005\x0005\x0005", pRefFace, nEdgeNum, EdgesArray, &BRType, dBRWidth, dBRLength, dBendRadius, dNeutralFactor);
}

#pragma implementation_key(894)
inline HRESULT TGAssembly::InternalComponent::GetCurrentMaterialName ( BSTR * bstrMaterialName ) {
    return _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", bstrMaterialName);
}

#pragma implementation_key(895)
inline HRESULT TGAssembly::InternalComponent::GetCurrentGageName ( BSTR * bstrGageName ) {
    return _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", bstrGageName);
}

#pragma implementation_key(896)
inline HRESULT TGAssembly::InternalComponent::GetOODStatusofMaterialAndGage ( VARIANT_BOOL * vbMaterialPropOOD, VARIANT_BOOL * vbGagePropOOD ) {
    return _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b\x400b", vbMaterialPropOOD, vbGagePropOOD);
}

#pragma implementation_key(897)
inline HRESULT TGAssembly::InternalComponent::GetPhysicalProperties ( int * Status, double * Density, double * Accuracy, double * Volume, double * Area, double * Mass, SAFEARRAY * * CenterOfGravity, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMomentsOfInteria, SAFEARRAY * * PrincipalMomentsOfInteria, SAFEARRAY * * PrincipalAxes, SAFEARRAY * * RadiiOfGyration, double * RelativeAccuracyAchieved ) {
    return _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x6005\x6005\x6005\x6005\x6005\x6005\x4005", Status, Density, Accuracy, Volume, Area, Mass, CenterOfGravity, CenterOfVolume, GlobalMomentsOfInteria, PrincipalMomentsOfInteria, PrincipalAxes, RadiiOfGyration, RelativeAccuracyAchieved);
}

//
// interface _IOccurrenceAuto wrapper method implementations
//

#pragma implementation_key(898)
inline IDispatchPtr TGAssembly::_IOccurrenceAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(899)
inline IDispatchPtr TGAssembly::_IOccurrenceAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(900)
inline HRESULT TGAssembly::_IOccurrenceAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(901)
inline long TGAssembly::_IOccurrenceAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(902)
inline _bstr_t TGAssembly::_IOccurrenceAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(903)
inline void TGAssembly::_IOccurrenceAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(904)
inline _bstr_t TGAssembly::_IOccurrenceAuto::GetPartFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PartFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(905)
inline IDispatchPtr TGAssembly::_IOccurrenceAuto::GetPartDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PartDocument(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(906)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetReferenceOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReferenceOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(907)
inline void TGAssembly::_IOccurrenceAuto::PutReferenceOnly ( VARIANT_BOOL RefOnly ) {
    HRESULT _hr = put_ReferenceOnly(RefOnly);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(908)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetSubassembly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Subassembly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(909)
inline enum TGFramework::ObjectType TGAssembly::_IOccurrenceAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(910)
inline long TGAssembly::_IOccurrenceAuto::GetQuantity ( ) {
    long _result = 0;
    HRESULT _hr = get_Quantity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(911)
inline void TGAssembly::_IOccurrenceAuto::PutQuantity ( long Quantity ) {
    HRESULT _hr = put_Quantity(Quantity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(912)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(913)
inline void TGAssembly::_IOccurrenceAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(914)
inline HRESULT TGAssembly::_IOccurrenceAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(915)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetLocatable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Locatable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(916)
inline void TGAssembly::_IOccurrenceAuto::PutLocatable ( VARIANT_BOOL Locatable ) {
    HRESULT _hr = put_Locatable(Locatable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(917)
inline HRESULT TGAssembly::_IOccurrenceAuto::PutTransform ( double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ ) {
    HRESULT _hr = raw_PutTransform(OriginX, OriginY, OriginZ, AngleX, AngleY, AngleZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(918)
inline HRESULT TGAssembly::_IOccurrenceAuto::GetTransform ( double * OriginX, double * OriginY, double * OriginZ, double * AngleX, double * AngleY, double * AngleZ ) {
    HRESULT _hr = raw_GetTransform(OriginX, OriginY, OriginZ, AngleX, AngleY, AngleZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(919)
inline enum TGAssembly::OccurrenceStatusConstants TGAssembly::_IOccurrenceAuto::GetStatus ( ) {
    enum OccurrenceStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(920)
inline HRESULT TGAssembly::_IOccurrenceAuto::PutOrigin ( double OriginX, double OriginY, double OriginZ ) {
    HRESULT _hr = raw_PutOrigin(OriginX, OriginY, OriginZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(921)
inline HRESULT TGAssembly::_IOccurrenceAuto::GetOrigin ( double * OriginX, double * OriginY, double * OriginZ ) {
    HRESULT _hr = raw_GetOrigin(OriginX, OriginY, OriginZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(922)
inline HRESULT TGAssembly::_IOccurrenceAuto::Move ( double DeltaX, double DeltaY, double DeltaZ ) {
    HRESULT _hr = raw_Move(DeltaX, DeltaY, DeltaZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(923)
inline HRESULT TGAssembly::_IOccurrenceAuto::Rotate ( double AxisX1, double AxisY1, double AxisZ1, double AxisX2, double AxisY2, double AxisZ2, double Angle ) {
    HRESULT _hr = raw_Rotate(AxisX1, AxisY1, AxisZ1, AxisX2, AxisY2, AxisZ2, Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(924)
inline IDispatchPtr TGAssembly::_IOccurrenceAuto::GetRelations3d ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Relations3d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(925)
inline HRESULT TGAssembly::_IOccurrenceAuto::PutMatrix ( SAFEARRAY * * Matrix, VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_PutMatrix(Matrix, Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(926)
inline HRESULT TGAssembly::_IOccurrenceAuto::GetMatrix ( SAFEARRAY * * Matrix ) {
    HRESULT _hr = raw_GetMatrix(Matrix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(927)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIncludeInBom ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeInBom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(928)
inline void TGAssembly::_IOccurrenceAuto::PutIncludeInBom ( VARIANT_BOOL IncludeInBom ) {
    HRESULT _hr = put_IncludeInBom(IncludeInBom);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(929)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetDisplayInDrawings ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayInDrawings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(930)
inline void TGAssembly::_IOccurrenceAuto::PutDisplayInDrawings ( VARIANT_BOOL DisplayInDrawings ) {
    HRESULT _hr = put_DisplayInDrawings(DisplayInDrawings);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(931)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetDisplayInSubAssembly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayInSubAssembly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(932)
inline void TGAssembly::_IOccurrenceAuto::PutDisplayInSubAssembly ( VARIANT_BOOL DisplayInSubAssembly ) {
    HRESULT _hr = put_DisplayInSubAssembly(DisplayInSubAssembly);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(933)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIncludeInPhysicalProperties ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeInPhysicalProperties(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(934)
inline void TGAssembly::_IOccurrenceAuto::PutIncludeInPhysicalProperties ( VARIANT_BOOL IncludeInPhysicalProperties ) {
    HRESULT _hr = put_IncludeInPhysicalProperties(IncludeInPhysicalProperties);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(935)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIsForeign ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsForeign(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(936)
inline HRESULT TGAssembly::_IOccurrenceAuto::Replace ( _bstr_t NewOccurrenceFileName, VARIANT_BOOL ReplaceAll, const _variant_t & NewFamilyMemberName ) {
    HRESULT _hr = raw_Replace(NewOccurrenceFileName, ReplaceAll, NewFamilyMemberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(937)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::RenameFileName ( _bstr_t NewOccurrenceFileName ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_RenameFileName(NewOccurrenceFileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(938)
inline HRESULT TGAssembly::_IOccurrenceAuto::Mirror ( IDispatch * pPlane ) {
    HRESULT _hr = raw_Mirror(pPlane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(939)
inline _bstr_t TGAssembly::_IOccurrenceAuto::GetStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(940)
inline void TGAssembly::_IOccurrenceAuto::PutStyle ( _bstr_t Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(941)
inline IDispatchPtr TGAssembly::_IOccurrenceAuto::GetFaceStyle ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FaceStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(942)
inline void TGAssembly::_IOccurrenceAuto::PutFaceStyle ( IDispatch * FaceStyle ) {
    HRESULT _hr = put_FaceStyle(FaceStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(943)
inline HRESULT TGAssembly::_IOccurrenceAuto::MakeWritable ( ) {
    HRESULT _hr = raw_MakeWritable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(944)
inline IDispatchPtr TGAssembly::_IOccurrenceAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(945)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(946)
inline _bstr_t TGAssembly::_IOccurrenceAuto::GetOccurrenceFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OccurrenceFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(947)
inline IDispatchPtr TGAssembly::_IOccurrenceAuto::GetOccurrenceDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_OccurrenceDocument(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(948)
inline void TGAssembly::_IOccurrenceAuto::PutActivate ( VARIANT_BOOL bActivate ) {
    HRESULT _hr = put_Activate(bActivate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(949)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetActivate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Activate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(950)
inline TGAssembly::AssemblyDocumentPtr TGAssembly::_IOccurrenceAuto::GetTopLevelDocument ( ) {
    struct AssemblyDocument * _result = 0;
    HRESULT _hr = get_TopLevelDocument(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDocumentPtr(_result, false);
}

#pragma implementation_key(951)
inline HRESULT TGAssembly::_IOccurrenceAuto::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize ) {
    HRESULT _hr = raw_GetReferenceKey(ReferenceKey, KeySize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(952)
inline TGAssembly::SubOccurrencesPtr TGAssembly::_IOccurrenceAuto::GetSubOccurrences ( ) {
    struct SubOccurrences * _result = 0;
    HRESULT _hr = get_SubOccurrences(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SubOccurrencesPtr(_result, false);
}

#pragma implementation_key(953)
inline HRESULT TGAssembly::_IOccurrenceAuto::CreateTopologyReference ( SAFEARRAY * * ReferenceKey, struct TopologyReference * * TopologyReference ) {
    HRESULT _hr = raw_CreateTopologyReference(ReferenceKey, TopologyReference);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(954)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::IsTube ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsTube(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(955)
inline TGAssembly::TubePtr TGAssembly::_IOccurrenceAuto::GetTube ( ) {
    struct Tube * _result = 0;
    HRESULT _hr = raw_GetTube(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TubePtr(_result, false);
}

#pragma implementation_key(956)
inline double TGAssembly::_IOccurrenceAuto::GetNongraphicQuantity ( ) {
    double _result = 0;
    HRESULT _hr = get_NongraphicQuantity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(957)
inline void TGAssembly::_IOccurrenceAuto::PutNongraphicQuantity ( double NongraphicQuantity ) {
    HRESULT _hr = put_NongraphicQuantity(NongraphicQuantity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(958)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIsNongraphic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsNongraphic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(959)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetHasNongraphicQuantity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasNongraphicQuantity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(960)
inline long TGAssembly::_IOccurrenceAuto::GetNongraphicPrecision ( ) {
    long _result = 0;
    HRESULT _hr = get_NongraphicPrecision(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(961)
inline _bstr_t TGAssembly::_IOccurrenceAuto::GetNongraphicDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NongraphicDescription(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(962)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIsFamilyOfAssembly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsFamilyOfAssembly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(963)
inline HRESULT TGAssembly::_IOccurrenceAuto::SwapFamilyMember ( _bstr_t MemberName, VARIANT_BOOL SwapAllOccurrences ) {
    HRESULT _hr = raw_SwapFamilyMember(MemberName, SwapAllOccurrences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(964)
inline void TGAssembly::_IOccurrenceAuto::PutUseSimplified ( VARIANT_BOOL UseSimplified ) {
    HRESULT _hr = put_UseSimplified(UseSimplified);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(965)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetUseSimplified ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseSimplified(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(966)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetDisplayReferencePlanes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayReferencePlanes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(967)
inline void TGAssembly::_IOccurrenceAuto::PutDisplayReferencePlanes ( VARIANT_BOOL DisplayReferencePlanes ) {
    HRESULT _hr = put_DisplayReferencePlanes(DisplayReferencePlanes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(968)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetDisplayCoordinateSystems ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayCoordinateSystems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(969)
inline void TGAssembly::_IOccurrenceAuto::PutDisplayCoordinateSystems ( VARIANT_BOOL DisplayCoordinateSystems ) {
    HRESULT _hr = put_DisplayCoordinateSystems(DisplayCoordinateSystems);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(970)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetDisplayConstructions ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayConstructions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(971)
inline void TGAssembly::_IOccurrenceAuto::PutDisplayConstructions ( VARIANT_BOOL DisplayConstructions ) {
    HRESULT _hr = put_DisplayConstructions(DisplayConstructions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(972)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetDisplayConstrCurves ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayConstrCurves(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(973)
inline void TGAssembly::_IOccurrenceAuto::PutDisplayConstrCurves ( VARIANT_BOOL DisplayConstrCurves ) {
    HRESULT _hr = put_DisplayConstrCurves(DisplayConstrCurves);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(974)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetDisplayReferenceAxes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayReferenceAxes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(975)
inline void TGAssembly::_IOccurrenceAuto::PutDisplayReferenceAxes ( VARIANT_BOOL DisplayReferenceAxes ) {
    HRESULT _hr = put_DisplayReferenceAxes(DisplayReferenceAxes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(976)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetDisplaySketches ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplaySketches(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(977)
inline void TGAssembly::_IOccurrenceAuto::PutDisplaySketches ( VARIANT_BOOL DisplaySketches ) {
    HRESULT _hr = put_DisplaySketches(DisplaySketches);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(978)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetDisplayAsLastSaved ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayAsLastSaved(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(979)
inline void TGAssembly::_IOccurrenceAuto::PutDisplayAsLastSaved ( VARIANT_BOOL DisplayAsLastSaved ) {
    HRESULT _hr = put_DisplayAsLastSaved(DisplayAsLastSaved);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(980)
inline void TGAssembly::_IOccurrenceAuto::PutAdjustable ( VARIANT_BOOL Adjustable ) {
    HRESULT _hr = put_Adjustable(Adjustable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(981)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetAdjustable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Adjustable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(982)
inline IDispatchPtr TGAssembly::_IOccurrenceAuto::GetFaceStyle2 ( VARIANT_BOOL vbHonourPrefs ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetFaceStyle2(vbHonourPrefs, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(983)
inline TGAssembly::AdjustablePartPtr TGAssembly::_IOccurrenceAuto::MakeAdjustablePart ( ) {
    struct AdjustablePart * _result = 0;
    HRESULT _hr = raw_MakeAdjustablePart(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AdjustablePartPtr(_result, false);
}

#pragma implementation_key(984)
inline TGAssembly::AdjustablePartPtr TGAssembly::_IOccurrenceAuto::GetAdjustablePart ( ) {
    struct AdjustablePart * _result = 0;
    HRESULT _hr = raw_GetAdjustablePart(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AdjustablePartPtr(_result, false);
}

#pragma implementation_key(985)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIsAdjustablePart ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAdjustablePart(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(986)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::IsAlternateComponent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsAlternateComponent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(987)
inline HRESULT TGAssembly::_IOccurrenceAuto::AddAlternateComponent ( _bstr_t AlternateComponentFileName ) {
    HRESULT _hr = raw_AddAlternateComponent(AlternateComponentFileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(988)
inline HRESULT TGAssembly::_IOccurrenceAuto::RemoveAlternateComponent ( _bstr_t AlternateComponentFileName ) {
    HRESULT _hr = raw_RemoveAlternateComponent(AlternateComponentFileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(989)
inline HRESULT TGAssembly::_IOccurrenceAuto::RemoveAllAlternateComponents ( ) {
    HRESULT _hr = raw_RemoveAllAlternateComponents();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(990)
inline HRESULT TGAssembly::_IOccurrenceAuto::GetAllAlternateComponents ( long * AlternateComponentCount, SAFEARRAY * * AlternateComponentFileNames ) {
    HRESULT _hr = raw_GetAllAlternateComponents(AlternateComponentCount, AlternateComponentFileNames);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(991)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetHasBodyOverride ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasBodyOverride(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(992)
inline IDispatchPtr TGAssembly::_IOccurrenceAuto::GetBody ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Body(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(993)
inline HRESULT TGAssembly::_IOccurrenceAuto::GetSimplifiedBodies ( long * NumBodies, SAFEARRAY * * SimplifiedBodies ) {
    HRESULT _hr = raw_GetSimplifiedBodies(NumBodies, SimplifiedBodies);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(994)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIsPatterned ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsPatterned(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(995)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIsPatternItem ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsPatternItem(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(996)
inline HRESULT TGAssembly::_IOccurrenceAuto::CaptureRelationships ( long RelationshipCount, SAFEARRAY * * RelationshipsToCapture ) {
    HRESULT _hr = raw_CaptureRelationships(RelationshipCount, RelationshipsToCapture);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(997)
inline HRESULT TGAssembly::_IOccurrenceAuto::ClearCapturedRelationships ( ) {
    HRESULT _hr = raw_ClearCapturedRelationships();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(998)
inline HRESULT TGAssembly::_IOccurrenceAuto::GetBodyInversionMatrix ( SAFEARRAY * * InvMatrix ) {
    HRESULT _hr = raw_GetBodyInversionMatrix(InvMatrix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(999)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIncludeInInterference ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeInInterference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1000)
inline void TGAssembly::_IOccurrenceAuto::PutIncludeInInterference ( VARIANT_BOOL IncludeInInterference ) {
    HRESULT _hr = put_IncludeInInterference(IncludeInInterference);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1001)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetDisplayAsReference ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayAsReference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1002)
inline void TGAssembly::_IOccurrenceAuto::PutDisplayAsReference ( VARIANT_BOOL DisplayAsReference ) {
    HRESULT _hr = put_DisplayAsReference(DisplayAsReference);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1003)
inline TGAssembly::SubassemblyBodiesPtr TGAssembly::_IOccurrenceAuto::GetSubassemblyBodies ( ) {
    struct SubassemblyBodies * _result = 0;
    HRESULT _hr = get_SubassemblyBodies(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SubassemblyBodiesPtr(_result, false);
}

#pragma implementation_key(1004)
inline HRESULT TGAssembly::_IOccurrenceAuto::GetExplodeMatrix ( SAFEARRAY * * Matrix ) {
    HRESULT _hr = raw_GetExplodeMatrix(Matrix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1005)
inline HRESULT TGAssembly::_IOccurrenceAuto::RemoveOverrideBody ( ) {
    HRESULT _hr = raw_RemoveOverrideBody();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1006)
inline HRESULT TGAssembly::_IOccurrenceAuto::GetRangeBox ( SAFEARRAY * * MinRangePoint, SAFEARRAY * * MaxRangePoint ) {
    HRESULT _hr = raw_GetRangeBox(MinRangePoint, MaxRangePoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1007)
inline HRESULT TGAssembly::_IOccurrenceAuto::RetrieveHoleLocation ( ) {
    HRESULT _hr = raw_RetrieveHoleLocation();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1008)
inline HRESULT TGAssembly::_IOccurrenceAuto::DeleteHoleLocation ( ) {
    HRESULT _hr = raw_DeleteHoleLocation();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1009)
inline HRESULT TGAssembly::_IOccurrenceAuto::GetInterpartDrivingOccurrences ( long * NumDrivingOccurrences, SAFEARRAY * * DrivingOccurrences ) {
    HRESULT _hr = raw_GetInterpartDrivingOccurrences(NumDrivingOccurrences, DrivingOccurrences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1010)
inline HRESULT TGAssembly::_IOccurrenceAuto::GetInterpartDrivenOccurrences ( long * NumDrivenOccurrences, SAFEARRAY * * DrivenOccurrences ) {
    HRESULT _hr = raw_GetInterpartDrivenOccurrences(NumDrivenOccurrences, DrivenOccurrences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1011)
inline int TGAssembly::_IOccurrenceAuto::GetItemNumber ( ) {
    int _result = 0;
    HRESULT _hr = get_ItemNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1012)
inline void TGAssembly::_IOccurrenceAuto::PutItemNumber ( int pnItemNumber ) {
    HRESULT _hr = put_ItemNumber(pnItemNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1013)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetReferencePlanesVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReferencePlanesVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1014)
inline void TGAssembly::_IOccurrenceAuto::PutReferencePlanesVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_ReferencePlanesVisible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1015)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetCoordinateSystemsVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CoordinateSystemsVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1016)
inline void TGAssembly::_IOccurrenceAuto::PutCoordinateSystemsVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_CoordinateSystemsVisible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1017)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetSketchesVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SketchesVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1018)
inline void TGAssembly::_IOccurrenceAuto::PutSketchesVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_SketchesVisible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1019)
inline HRESULT TGAssembly::_IOccurrenceAuto::CreateTopologyReferenceToBodyOverride ( SAFEARRAY * * ReferenceKey, struct TopologyReference * * TopologyReference ) {
    HRESULT _hr = raw_CreateTopologyReferenceToBodyOverride(ReferenceKey, TopologyReference);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1020)
inline HRESULT TGAssembly::_IOccurrenceAuto::ResetName ( ) {
    HRESULT _hr = raw_ResetName();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1021)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetHasUserDefinedName ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasUserDefinedName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1022)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIsStructuralFrameItem ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsStructuralFrameItem(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1023)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIsWire ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsWire(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1024)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIsPipeFitting ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsPipeFitting(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1025)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIsPipeSegment ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsPipeSegment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1026)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIsFastenerSystemItem ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsFastenerSystemItem(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1027)
inline HRESULT TGAssembly::_IOccurrenceAuto::Range ( double * x_min, double * y_min, double * z_min, double * x_max, double * y_max, double * z_max ) {
    HRESULT _hr = raw_Range(x_min, y_min, z_min, x_max, y_max, z_max);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1028)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetDisplayCenterline ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayCenterline(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1029)
inline void TGAssembly::_IOccurrenceAuto::PutDisplayCenterline ( VARIANT_BOOL DisplayCenterline ) {
    HRESULT _hr = put_DisplayCenterline(DisplayCenterline);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1030)
inline enum TGFramework::ObjectType TGAssembly::_IOccurrenceAuto::GetNodeType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_NodeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1031)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIsCopy ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsCopy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1032)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIsFamilyOfParts ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsFamilyOfParts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1033)
inline HRESULT TGAssembly::_IOccurrenceAuto::GetSimplifiedBodies2 ( long * NumBodies, SAFEARRAY * * SimplifiedBodies, SAFEARRAY * * Transforms ) {
    HRESULT _hr = raw_GetSimplifiedBodies2(NumBodies, SimplifiedBodies, Transforms);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1034)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::FileMissing ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_FileMissing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1035)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::RecheckMissingFile ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_RecheckMissingFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1036)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetDisplayLiveSections ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayLiveSections(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1037)
inline void TGAssembly::_IOccurrenceAuto::PutDisplayLiveSections ( VARIANT_BOOL Display ) {
    HRESULT _hr = put_DisplayLiveSections(Display);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1038)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetDisplayDimensions ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayDimensions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1039)
inline void TGAssembly::_IOccurrenceAuto::PutDisplayDimensions ( VARIANT_BOOL Display ) {
    HRESULT _hr = put_DisplayDimensions(Display);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1040)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetDisplayAnnotations ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayAnnotations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1041)
inline void TGAssembly::_IOccurrenceAuto::PutDisplayAnnotations ( VARIANT_BOOL Display ) {
    HRESULT _hr = put_DisplayAnnotations(Display);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1042)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetDisplayDesignBody ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayDesignBody(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1043)
inline void TGAssembly::_IOccurrenceAuto::PutDisplayDesignBody ( VARIANT_BOOL Display ) {
    HRESULT _hr = put_DisplayDesignBody(Display);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1044)
inline _bstr_t TGAssembly::_IOccurrenceAuto::GetCustomPropertyValue ( _bstr_t CustomPropertyName ) {
    BSTR _result = 0;
    HRESULT _hr = get_CustomPropertyValue(CustomPropertyName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1045)
inline void TGAssembly::_IOccurrenceAuto::PutCustomPropertyValue ( _bstr_t CustomPropertyName, _bstr_t CustomPropertyValue ) {
    HRESULT _hr = put_CustomPropertyValue(CustomPropertyName, CustomPropertyValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1046)
inline HRESULT TGAssembly::_IOccurrenceAuto::FrameSaveAs ( _bstr_t FileName ) {
    HRESULT _hr = raw_FrameSaveAs(FileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1047)
inline HRESULT TGAssembly::_IOccurrenceAuto::FrameSaveAsTranslated ( _bstr_t FileName ) {
    HRESULT _hr = raw_FrameSaveAsTranslated(FileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1048)
inline HRESULT TGAssembly::_IOccurrenceAuto::PutStyleUsePartStyle ( ) {
    HRESULT _hr = raw_PutStyleUsePartStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1049)
inline HRESULT TGAssembly::_IOccurrenceAuto::PutStyleNone ( ) {
    HRESULT _hr = raw_PutStyleNone();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1050)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetStyleNone ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetStyleNone(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1051)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetStyleUsePartStyle ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetStyleUsePartStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1052)
inline _bstr_t TGAssembly::_IOccurrenceAuto::FrameSaveAsBiDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    HRESULT _hr = raw_FrameSaveAsBiDM(FilePath, DocumentNumber, Revision, Title, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1053)
inline IDispatchPtr TGAssembly::_IOccurrenceAuto::BindKeyToTopology ( VARIANT_BOOL BodyOverride, SAFEARRAY * * ReferenceKey ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_BindKeyToTopology(BodyOverride, ReferenceKey, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1054)
inline long TGAssembly::_IOccurrenceAuto::GetOccurrenceID ( ) {
    long _result = 0;
    HRESULT _hr = get_OccurrenceID(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1055)
inline HRESULT TGAssembly::_IOccurrenceAuto::GetSectionedFacetData ( long PartID, enum OccurrenceSectionedFacetDataConstants * FacetDataPresence, long * FacetCount, SAFEARRAY * * Points, SAFEARRAY * * Normals, SAFEARRAY * * TextureCoords, SAFEARRAY * * StyleIDs, SAFEARRAY * * FaceIDs ) {
    HRESULT _hr = raw_GetSectionedFacetData(PartID, FacetDataPresence, FacetCount, Points, Normals, TextureCoords, StyleIDs, FaceIDs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1056)
inline HRESULT TGAssembly::_IOccurrenceAuto::CutLength ( double * dCutLength ) {
    HRESULT _hr = raw_CutLength(dCutLength);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1057)
inline HRESULT TGAssembly::_IOccurrenceAuto::MiterCut ( double * MiterCut1, double * MiterCut2 ) {
    HRESULT _hr = raw_MiterCut(MiterCut1, MiterCut2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1058)
inline HRESULT TGAssembly::_IOccurrenceAuto::SideFaceEndAngle ( double * SideFaceEndAngle1, double * SideFaceEndAngle2 ) {
    HRESULT _hr = raw_SideFaceEndAngle(SideFaceEndAngle1, SideFaceEndAngle2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1059)
inline HRESULT TGAssembly::_IOccurrenceAuto::EndFaceEndAngle ( double * EndFaceEndAngle1, double * EndFaceEndAngle2 ) {
    HRESULT _hr = raw_EndFaceEndAngle(EndFaceEndAngle1, EndFaceEndAngle2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1060)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::GetIsInternalComponent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsInternalComponent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1061)
inline TGAssembly::InternalComponentPtr TGAssembly::_IOccurrenceAuto::GetInternalComponent ( ) {
    struct InternalComponent * _result = 0;
    HRESULT _hr = get_InternalComponent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return InternalComponentPtr(_result, false);
}

#pragma implementation_key(1062)
inline TGPart::SuppressVariablePtr TGAssembly::_IOccurrenceAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1063)
inline TGPart::SuppressVariablePtr TGAssembly::_IOccurrenceAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1064)
inline HRESULT TGAssembly::_IOccurrenceAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1065)
inline VARIANT_BOOL TGAssembly::_IOccurrenceAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _ISubOccurrenceAuto wrapper method implementations
//

#pragma implementation_key(1066)
inline TGFramework::ApplicationPtr TGAssembly::_ISubOccurrenceAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1067)
inline IDispatchPtr TGAssembly::_ISubOccurrenceAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1068)
inline TGAssembly::AssemblyDocumentPtr TGAssembly::_ISubOccurrenceAuto::GetTopLevelDocument ( ) {
    struct AssemblyDocument * _result = 0;
    HRESULT _hr = get_TopLevelDocument(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDocumentPtr(_result, false);
}

#pragma implementation_key(1069)
inline IDispatchPtr TGAssembly::_ISubOccurrenceAuto::GetSubOccurrenceDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_SubOccurrenceDocument(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1070)
inline _bstr_t TGAssembly::_ISubOccurrenceAuto::GetSubOccurrenceFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SubOccurrenceFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1071)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize ) {
    HRESULT _hr = raw_GetReferenceKey(ReferenceKey, KeySize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1072)
inline TGAssembly::SubOccurrencesPtr TGAssembly::_ISubOccurrenceAuto::GetSubOccurrences ( ) {
    struct SubOccurrences * _result = 0;
    HRESULT _hr = get_SubOccurrences(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SubOccurrencesPtr(_result, false);
}

#pragma implementation_key(1073)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::GetMatrix ( SAFEARRAY * * Matrix ) {
    HRESULT _hr = raw_GetMatrix(Matrix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1074)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::CreateTopologyReference ( SAFEARRAY * * ReferenceKey, struct TopologyReference * * TopologyReference ) {
    HRESULT _hr = raw_CreateTopologyReference(ReferenceKey, TopologyReference);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1075)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetSubassembly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Subassembly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1076)
inline enum TGFramework::ObjectType TGAssembly::_ISubOccurrenceAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1077)
inline _bstr_t TGAssembly::_ISubOccurrenceAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1078)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::GetMaterial ( SAFEARRAY * * DiffuseColor, SAFEARRAY * * AmbientColor, SAFEARRAY * * SpecularColor, SAFEARRAY * * EmissionColor, double * Shininess, double * Opacity ) {
    HRESULT _hr = raw_GetMaterial(DiffuseColor, AmbientColor, SpecularColor, EmissionColor, Shininess, Opacity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1079)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1080)
inline void TGAssembly::_ISubOccurrenceAuto::PutVisible ( VARIANT_BOOL pbVisible ) {
    HRESULT _hr = put_Visible(pbVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1081)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetUseSimplified ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseSimplified(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1082)
inline void TGAssembly::_ISubOccurrenceAuto::PutUseSimplified ( VARIANT_BOOL pbUseSimplified ) {
    HRESULT _hr = put_UseSimplified(pbUseSimplified);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1083)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetDisplayReferencePlanes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayReferencePlanes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1084)
inline void TGAssembly::_ISubOccurrenceAuto::PutDisplayReferencePlanes ( VARIANT_BOOL pbDisplayReferencePlanes ) {
    HRESULT _hr = put_DisplayReferencePlanes(pbDisplayReferencePlanes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1085)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetDisplayCoordinateSystems ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayCoordinateSystems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1086)
inline void TGAssembly::_ISubOccurrenceAuto::PutDisplayCoordinateSystems ( VARIANT_BOOL pbDisplayCoordinateSystems ) {
    HRESULT _hr = put_DisplayCoordinateSystems(pbDisplayCoordinateSystems);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1087)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetDisplayConstructions ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayConstructions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1088)
inline void TGAssembly::_ISubOccurrenceAuto::PutDisplayConstructions ( VARIANT_BOOL pbDisplayConstructions ) {
    HRESULT _hr = put_DisplayConstructions(pbDisplayConstructions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1089)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetDisplayConstrCurves ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayConstrCurves(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1090)
inline void TGAssembly::_ISubOccurrenceAuto::PutDisplayConstrCurves ( VARIANT_BOOL pbDisplayConstrCurves ) {
    HRESULT _hr = put_DisplayConstrCurves(pbDisplayConstrCurves);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1091)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetDisplayReferenceAxes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayReferenceAxes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1092)
inline void TGAssembly::_ISubOccurrenceAuto::PutDisplayReferenceAxes ( VARIANT_BOOL pbDisplayReferenceAxes ) {
    HRESULT _hr = put_DisplayReferenceAxes(pbDisplayReferenceAxes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1093)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetDisplaySketches ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplaySketches(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1094)
inline void TGAssembly::_ISubOccurrenceAuto::PutDisplaySketches ( VARIANT_BOOL pbDisplaySketches ) {
    HRESULT _hr = put_DisplaySketches(pbDisplaySketches);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1095)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetDisplayAsLastSaved ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayAsLastSaved(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1096)
inline void TGAssembly::_ISubOccurrenceAuto::PutDisplayAsLastSaved ( VARIANT_BOOL pbDisplayAsLastSaved ) {
    HRESULT _hr = put_DisplayAsLastSaved(pbDisplayAsLastSaved);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1097)
inline void TGAssembly::_ISubOccurrenceAuto::PutAdjustable ( VARIANT_BOOL Adjustable ) {
    HRESULT _hr = put_Adjustable(Adjustable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1098)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetAdjustable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Adjustable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1099)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::PutMatrix ( SAFEARRAY * * Matrix, VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_PutMatrix(Matrix, Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1100)
inline TGAssembly::OccurrencePtr TGAssembly::_ISubOccurrenceAuto::GetThisAsOccurrence ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_ThisAsOccurrence(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1101)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetHasBodyOverride ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasBodyOverride(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1102)
inline IDispatchPtr TGAssembly::_ISubOccurrenceAuto::GetBody ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Body(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1103)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::GetSimplifiedBodies ( long * NumBodies, SAFEARRAY * * SimplifiedBodies ) {
    HRESULT _hr = raw_GetSimplifiedBodies(NumBodies, SimplifiedBodies);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1104)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetIsPatterned ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsPatterned(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1105)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetIsPatternItem ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsPatternItem(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1106)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::GetBodyInversionMatrix ( SAFEARRAY * * InvMatrix ) {
    HRESULT _hr = raw_GetBodyInversionMatrix(InvMatrix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1107)
inline TGAssembly::AdjustablePartPtr TGAssembly::_ISubOccurrenceAuto::MakeAdjustablePart ( ) {
    struct AdjustablePart * _result = 0;
    HRESULT _hr = raw_MakeAdjustablePart(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AdjustablePartPtr(_result, false);
}

#pragma implementation_key(1108)
inline TGAssembly::AdjustablePartPtr TGAssembly::_ISubOccurrenceAuto::GetAdjustablePart ( ) {
    struct AdjustablePart * _result = 0;
    HRESULT _hr = raw_GetAdjustablePart(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AdjustablePartPtr(_result, false);
}

#pragma implementation_key(1109)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetIsAdjustablePart ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAdjustablePart(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1110)
inline TGAssembly::SubassemblyBodiesPtr TGAssembly::_ISubOccurrenceAuto::GetSubassemblyBodies ( ) {
    struct SubassemblyBodies * _result = 0;
    HRESULT _hr = get_SubassemblyBodies(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SubassemblyBodiesPtr(_result, false);
}

#pragma implementation_key(1111)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::GetExplodeMatrix ( SAFEARRAY * * Matrix ) {
    HRESULT _hr = raw_GetExplodeMatrix(Matrix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1112)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::RemoveOverrideBody ( ) {
    HRESULT _hr = raw_RemoveOverrideBody();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1113)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::GetRangeBox ( SAFEARRAY * * MinRangePoint, SAFEARRAY * * MaxRangePoint ) {
    HRESULT _hr = raw_GetRangeBox(MinRangePoint, MaxRangePoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1114)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::GetInterpartDrivingOccurrences ( long * NumDrivingOccurrences, SAFEARRAY * * DrivingOccurrences ) {
    HRESULT _hr = raw_GetInterpartDrivingOccurrences(NumDrivingOccurrences, DrivingOccurrences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1115)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::GetInterpartDrivenOccurrences ( long * NumDrivenOccurrences, SAFEARRAY * * DrivenOccurrences ) {
    HRESULT _hr = raw_GetInterpartDrivenOccurrences(NumDrivenOccurrences, DrivenOccurrences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1116)
inline int TGAssembly::_ISubOccurrenceAuto::GetItemNumber ( ) {
    int _result = 0;
    HRESULT _hr = get_ItemNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1117)
inline void TGAssembly::_ISubOccurrenceAuto::PutItemNumber ( int pnItemNumber ) {
    HRESULT _hr = put_ItemNumber(pnItemNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1118)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetReferencePlanesVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReferencePlanesVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1119)
inline void TGAssembly::_ISubOccurrenceAuto::PutReferencePlanesVisible ( VARIANT_BOOL pbVisible ) {
    HRESULT _hr = put_ReferencePlanesVisible(pbVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1120)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetCoordinateSystemsVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CoordinateSystemsVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1121)
inline void TGAssembly::_ISubOccurrenceAuto::PutCoordinateSystemsVisible ( VARIANT_BOOL pbVisible ) {
    HRESULT _hr = put_CoordinateSystemsVisible(pbVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1122)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetSketchesVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SketchesVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1123)
inline void TGAssembly::_ISubOccurrenceAuto::PutSketchesVisible ( VARIANT_BOOL pbVisible ) {
    HRESULT _hr = put_SketchesVisible(pbVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1124)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::CreateTopologyReferenceToBodyOverride ( SAFEARRAY * * ReferenceKey, struct TopologyReference * * TopologyReference ) {
    HRESULT _hr = raw_CreateTopologyReferenceToBodyOverride(ReferenceKey, TopologyReference);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1125)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::Range ( double * x_min, double * y_min, double * z_min, double * x_max, double * y_max, double * z_max ) {
    HRESULT _hr = raw_Range(x_min, y_min, z_min, x_max, y_max, z_max);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1126)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetDisplayCenterline ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayCenterline(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1127)
inline void TGAssembly::_ISubOccurrenceAuto::PutDisplayCenterline ( VARIANT_BOOL bCenterline ) {
    HRESULT _hr = put_DisplayCenterline(bCenterline);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1128)
inline TGFramework::ReferencePtr TGAssembly::_ISubOccurrenceAuto::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    HRESULT _hr = get_Reference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(1129)
inline enum TGFramework::ObjectType TGAssembly::_ISubOccurrenceAuto::GetNodeType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_NodeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1130)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::FileMissing ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_FileMissing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1131)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::RecheckMissingFile ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_RecheckMissingFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1132)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetDisplayLiveSections ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayLiveSections(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1133)
inline void TGAssembly::_ISubOccurrenceAuto::PutDisplayLiveSections ( VARIANT_BOOL Display ) {
    HRESULT _hr = put_DisplayLiveSections(Display);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1134)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetDisplayDimensions ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayDimensions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1135)
inline void TGAssembly::_ISubOccurrenceAuto::PutDisplayDimensions ( VARIANT_BOOL Display ) {
    HRESULT _hr = put_DisplayDimensions(Display);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1136)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetDisplayAnnotations ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayAnnotations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1137)
inline void TGAssembly::_ISubOccurrenceAuto::PutDisplayAnnotations ( VARIANT_BOOL Display ) {
    HRESULT _hr = put_DisplayAnnotations(Display);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1138)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetDisplayDesignBody ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayDesignBody(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1139)
inline void TGAssembly::_ISubOccurrenceAuto::PutDisplayDesignBody ( VARIANT_BOOL Display ) {
    HRESULT _hr = put_DisplayDesignBody(Display);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1140)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetHideInDrawing ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HideInDrawing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1141)
inline void TGAssembly::_ISubOccurrenceAuto::PutHideInDrawing ( VARIANT_BOOL pvbHideInDwg ) {
    HRESULT _hr = put_HideInDrawing(pvbHideInDwg);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1142)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetHideInSubassembly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HideInSubassembly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1143)
inline void TGAssembly::_ISubOccurrenceAuto::PutHideInSubassembly ( VARIANT_BOOL pvbHideInSub ) {
    HRESULT _hr = put_HideInSubassembly(pvbHideInSub);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1144)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetLocatable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Locatable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1145)
inline void TGAssembly::_ISubOccurrenceAuto::PutLocatable ( VARIANT_BOOL pvbLocatable ) {
    HRESULT _hr = put_Locatable(pvbLocatable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1146)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetDisplayAsDraftReference ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayAsDraftReference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1147)
inline void TGAssembly::_ISubOccurrenceAuto::PutDisplayAsDraftReference ( VARIANT_BOOL pvbDisplayAsDraftRef ) {
    HRESULT _hr = put_DisplayAsDraftReference(pvbDisplayAsDraftRef);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1148)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetExcludeFromPhysicalProperties ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ExcludeFromPhysicalProperties(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1149)
inline void TGAssembly::_ISubOccurrenceAuto::PutExcludeFromPhysicalProperties ( VARIANT_BOOL pvbExcludeFromPhysProps ) {
    HRESULT _hr = put_ExcludeFromPhysicalProperties(pvbExcludeFromPhysProps);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1150)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetExcludeFromReports ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ExcludeFromReports(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1151)
inline void TGAssembly::_ISubOccurrenceAuto::PutExcludeFromReports ( VARIANT_BOOL pvExcludeFromReports ) {
    HRESULT _hr = put_ExcludeFromReports(pvExcludeFromReports);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1152)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetExcludeFromInterference ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ExcludeFromInterference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1153)
inline void TGAssembly::_ISubOccurrenceAuto::PutExcludeFromInterference ( VARIANT_BOOL pvbExcludeFromInterferenceAnalysis ) {
    HRESULT _hr = put_ExcludeFromInterference(pvbExcludeFromInterferenceAnalysis);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1154)
inline _bstr_t TGAssembly::_ISubOccurrenceAuto::GetCustomPropertyValue ( _bstr_t CustomPropertyName ) {
    BSTR _result = 0;
    HRESULT _hr = get_CustomPropertyValue(CustomPropertyName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1155)
inline void TGAssembly::_ISubOccurrenceAuto::PutCustomPropertyValue ( _bstr_t CustomPropertyName, _bstr_t CustomPropertyValue ) {
    HRESULT _hr = put_CustomPropertyValue(CustomPropertyName, CustomPropertyValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1156)
inline IDispatchPtr TGAssembly::_ISubOccurrenceAuto::GetFaceStyle ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FaceStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1157)
inline void TGAssembly::_ISubOccurrenceAuto::PutFaceStyle ( IDispatch * FaceStyle ) {
    HRESULT _hr = put_FaceStyle(FaceStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1158)
inline IDispatchPtr TGAssembly::_ISubOccurrenceAuto::GetFaceStyle2 ( VARIANT_BOOL vbHonourPrefs ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetFaceStyle2(vbHonourPrefs, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1159)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::PutStyleUsePartStyle ( ) {
    HRESULT _hr = raw_PutStyleUsePartStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1160)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::PutStyleNone ( ) {
    HRESULT _hr = raw_PutStyleNone();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1161)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetStyleNone ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetStyleNone(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1162)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetStyleUsePartStyle ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetStyleUsePartStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1163)
inline _bstr_t TGAssembly::_ISubOccurrenceAuto::GetStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1164)
inline void TGAssembly::_ISubOccurrenceAuto::PutStyle ( _bstr_t Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1165)
inline IDispatchPtr TGAssembly::_ISubOccurrenceAuto::BindKeyToTopology ( VARIANT_BOOL BodyOverride, SAFEARRAY * * ReferenceKey ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_BindKeyToTopology(BodyOverride, ReferenceKey, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1166)
inline HRESULT TGAssembly::_ISubOccurrenceAuto::GetSectionedFacetData ( long PartID, enum OccurrenceSectionedFacetDataConstants * FacetDataPresence, long * FacetCount, SAFEARRAY * * Points, SAFEARRAY * * Normals, SAFEARRAY * * TextureCoords, SAFEARRAY * * StyleIDs, SAFEARRAY * * FaceIDs ) {
    HRESULT _hr = raw_GetSectionedFacetData(PartID, FacetDataPresence, FacetCount, Points, Normals, TextureCoords, StyleIDs, FaceIDs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1167)
inline VARIANT_BOOL TGAssembly::_ISubOccurrenceAuto::GetIsInternalComponent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsInternalComponent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1168)
inline TGAssembly::InternalComponentPtr TGAssembly::_ISubOccurrenceAuto::GetInternalComponent ( ) {
    struct InternalComponent * _result = 0;
    HRESULT _hr = get_InternalComponent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return InternalComponentPtr(_result, false);
}

//
// interface _IInternalComponentAuto wrapper method implementations
//

#pragma implementation_key(1169)
inline TGFramework::ApplicationPtr TGAssembly::_IInternalComponentAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1170)
inline IDispatchPtr TGAssembly::_IInternalComponentAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1171)
inline _bstr_t TGAssembly::_IInternalComponentAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1172)
inline void TGAssembly::_IInternalComponentAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1173)
inline enum TGAssembly::InternalComponentTypeConstant TGAssembly::_IInternalComponentAuto::GetType ( ) {
    enum InternalComponentTypeConstant _result;
    HRESULT _hr = raw_GetType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1174)
inline HRESULT TGAssembly::_IInternalComponentAuto::Optimize ( ) {
    HRESULT _hr = raw_Optimize();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1175)
inline HRESULT TGAssembly::_IInternalComponentAuto::DeleteBodies ( ) {
    HRESULT _hr = raw_DeleteBodies();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1176)
inline long TGAssembly::_IInternalComponentAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1177)
inline HRESULT TGAssembly::_IInternalComponentAuto::GetBodies ( long * NumberOfBodies, SAFEARRAY * * Bodies ) {
    HRESULT _hr = raw_GetBodies(NumberOfBodies, Bodies);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1178)
inline TGPart::ModelsPtr TGAssembly::_IInternalComponentAuto::GetModels ( ) {
    struct TGPart::Models * _result = 0;
    HRESULT _hr = get_Models(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::ModelsPtr(_result, false);
}

#pragma implementation_key(1179)
inline TGPart::ConstructionsPtr TGAssembly::_IInternalComponentAuto::GetConstructions ( ) {
    struct TGPart::Constructions * _result = 0;
    HRESULT _hr = get_Constructions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::ConstructionsPtr(_result, false);
}

#pragma implementation_key(1180)
inline HRESULT TGAssembly::_IInternalComponentAuto::EditStart ( ) {
    HRESULT _hr = raw_EditStart();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1181)
inline HRESULT TGAssembly::_IInternalComponentAuto::EditEnd ( ) {
    HRESULT _hr = raw_EditEnd();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1182)
inline HRESULT TGAssembly::_IInternalComponentAuto::MoveBody ( IDispatch * BodyProxy ) {
    HRESULT _hr = raw_MoveBody(BodyProxy);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1183)
inline HRESULT TGAssembly::_IInternalComponentAuto::MakeActive ( ) {
    HRESULT _hr = raw_MakeActive();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1184)
inline VARIANT_BOOL TGAssembly::_IInternalComponentAuto::IsActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1185)
inline HRESULT TGAssembly::_IInternalComponentAuto::GetSheetMetalParameter ( enum TGPart::SheetMetalGlobalConstants Parameter, VARIANT * Value ) {
    HRESULT _hr = raw_GetSheetMetalParameter(Parameter, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1186)
inline HRESULT TGAssembly::_IInternalComponentAuto::SetSheetMetalParameter ( enum TGPart::SheetMetalGlobalConstants Parameter, const _variant_t & Value ) {
    HRESULT _hr = raw_SetSheetMetalParameter(Parameter, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1187)
inline enum TGPart::ModelingModeConstants TGAssembly::_IInternalComponentAuto::GetModelingMode ( ) {
    enum TGPart::ModelingModeConstants _result;
    HRESULT _hr = get_ModelingMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1188)
inline void TGAssembly::_IInternalComponentAuto::PutModelingMode ( enum TGPart::ModelingModeConstants Mode ) {
    HRESULT _hr = put_ModelingMode(Mode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1189)
inline TGPart::SketchsPtr TGAssembly::_IInternalComponentAuto::GetSketches ( ) {
    struct TGPart::Sketchs * _result = 0;
    HRESULT _hr = get_Sketches(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SketchsPtr(_result, false);
}

#pragma implementation_key(1190)
inline TGPart::ProfileSetsPtr TGAssembly::_IInternalComponentAuto::GetProfileSets ( ) {
    struct TGPart::ProfileSets * _result = 0;
    HRESULT _hr = get_ProfileSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::ProfileSetsPtr(_result, false);
}

#pragma implementation_key(1191)
inline TGPart::RefPlanesPtr TGAssembly::_IInternalComponentAuto::GetPartRefPlanes ( ) {
    struct TGPart::RefPlanes * _result = 0;
    HRESULT _hr = get_PartRefPlanes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::RefPlanesPtr(_result, false);
}

#pragma implementation_key(1192)
inline TGPart::RefAxesPtr TGAssembly::_IInternalComponentAuto::GetRefAxes ( ) {
    struct TGPart::RefAxes * _result = 0;
    HRESULT _hr = get_RefAxes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::RefAxesPtr(_result, false);
}

#pragma implementation_key(1193)
inline TGPart::BendTablePtr TGAssembly::_IInternalComponentAuto::GetBendTable ( ) {
    struct TGPart::BendTable * _result = 0;
    HRESULT _hr = get_BendTable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::BendTablePtr(_result, false);
}

#pragma implementation_key(1194)
inline TGPart::UsedSketchesPtr TGAssembly::_IInternalComponentAuto::GetUsedSketches ( ) {
    struct TGPart::UsedSketches * _result = 0;
    HRESULT _hr = get_UsedSketches(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::UsedSketchesPtr(_result, false);
}

#pragma implementation_key(1195)
inline TGPart::UserDefinedSetsPtr TGAssembly::_IInternalComponentAuto::GetUserDefinedSets ( ) {
    struct TGPart::UserDefinedSets * _result = 0;
    HRESULT _hr = get_UserDefinedSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::UserDefinedSetsPtr(_result, false);
}

#pragma implementation_key(1196)
inline TGPart::ConstraintsPtr TGAssembly::_IInternalComponentAuto::GetConstraints ( ) {
    struct TGPart::Constraints * _result = 0;
    HRESULT _hr = get_Constraints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::ConstraintsPtr(_result, false);
}

#pragma implementation_key(1197)
inline VARIANT_BOOL TGAssembly::_IInternalComponentAuto::GetDisableMoveToSynchronous ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisableMoveToSynchronous(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1198)
inline void TGAssembly::_IInternalComponentAuto::PutDisableMoveToSynchronous ( VARIANT_BOOL bDisable ) {
    HRESULT _hr = put_DisableMoveToSynchronous(bDisable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1199)
inline HRESULT TGAssembly::_IInternalComponentAuto::Separate ( long NumberOfFeatures, SAFEARRAY * * Features ) {
    HRESULT _hr = raw_Separate(NumberOfFeatures, Features);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1200)
inline HRESULT TGAssembly::_IInternalComponentAuto::Break ( long NumberOfFeatures, SAFEARRAY * * Features ) {
    HRESULT _hr = raw_Break(NumberOfFeatures, Features);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1201)
inline HRESULT TGAssembly::_IInternalComponentAuto::MoveToSynchronous ( IDispatch * pFeatureUnk, VARIANT_BOOL bIgnoreWarnings, VARIANT_BOOL bExtendSelection, long * NumberOfFeaturesCausingError, SAFEARRAY * * ErrorMessageArray, long * NumberOfFeaturesCausingWarning, SAFEARRAY * * WarningMessageArray, double * VolumeDifference ) {
    HRESULT _hr = raw_MoveToSynchronous(pFeatureUnk, bIgnoreWarnings, bExtendSelection, NumberOfFeaturesCausingError, ErrorMessageArray, NumberOfFeaturesCausingWarning, WarningMessageArray, VolumeDifference);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1202)
inline HRESULT TGAssembly::_IInternalComponentAuto::TransformToSynchronousSheetmetal ( IDispatch * pRefFace, long nEdgeNum, SAFEARRAY * * EdgesArray, const _variant_t & BRType, double dBRWidth, double dBRLength, double dBendRadius, double dNeutralFactor ) {
    HRESULT _hr = raw_TransformToSynchronousSheetmetal(pRefFace, nEdgeNum, EdgesArray, BRType, dBRWidth, dBRLength, dBendRadius, dNeutralFactor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1203)
inline HRESULT TGAssembly::_IInternalComponentAuto::GetCurrentMaterialName ( BSTR * bstrMaterialName ) {
    HRESULT _hr = raw_GetCurrentMaterialName(bstrMaterialName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1204)
inline HRESULT TGAssembly::_IInternalComponentAuto::GetCurrentGageName ( BSTR * bstrGageName ) {
    HRESULT _hr = raw_GetCurrentGageName(bstrGageName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1205)
inline HRESULT TGAssembly::_IInternalComponentAuto::GetOODStatusofMaterialAndGage ( VARIANT_BOOL * vbMaterialPropOOD, VARIANT_BOOL * vbGagePropOOD ) {
    HRESULT _hr = raw_GetOODStatusofMaterialAndGage(vbMaterialPropOOD, vbGagePropOOD);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1206)
inline HRESULT TGAssembly::_IInternalComponentAuto::GetPhysicalProperties ( int * Status, double * Density, double * Accuracy, double * Volume, double * Area, double * Mass, SAFEARRAY * * CenterOfGravity, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMomentsOfInteria, SAFEARRAY * * PrincipalMomentsOfInteria, SAFEARRAY * * PrincipalAxes, SAFEARRAY * * RadiiOfGyration, double * RelativeAccuracyAchieved ) {
    HRESULT _hr = raw_GetPhysicalProperties(Status, Density, Accuracy, Volume, Area, Mass, CenterOfGravity, CenterOfVolume, GlobalMomentsOfInteria, PrincipalMomentsOfInteria, PrincipalAxes, RadiiOfGyration, RelativeAccuracyAchieved);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface PlanarRelation3d wrapper method implementations
//

#pragma implementation_key(1207)
inline IDispatchPtr TGAssembly::PlanarRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1208)
inline IDispatchPtr TGAssembly::PlanarRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1209)
inline HRESULT TGAssembly::PlanarRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1210)
inline long TGAssembly::PlanarRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1211)
inline enum TGFramework::ObjectType TGAssembly::PlanarRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1212)
inline HRESULT TGAssembly::PlanarRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(1213)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::PlanarRelation3d::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1214)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::PlanarRelation3d::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1215)
inline TGAssembly::PartPtr TGAssembly::PlanarRelation3d::GetPart1 ( ) {
    struct Part * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PartPtr(_result, false);
}

#pragma implementation_key(1216)
inline TGAssembly::PartPtr TGAssembly::PlanarRelation3d::GetPart2 ( ) {
    struct Part * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PartPtr(_result, false);
}

#pragma implementation_key(1217)
inline HRESULT TGAssembly::PlanarRelation3d::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005", GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1218)
inline HRESULT TGAssembly::PlanarRelation3d::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005", GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1219)
inline VARIANT_BOOL TGAssembly::PlanarRelation3d::GetFixedOffset ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1220)
inline void TGAssembly::PlanarRelation3d::PutFixedOffset ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1221)
inline double TGAssembly::PlanarRelation3d::GetOffset ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1222)
inline void TGAssembly::PlanarRelation3d::PutOffset ( double _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1223)
inline VARIANT_BOOL TGAssembly::PlanarRelation3d::GetNormalsAligned ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1224)
inline IDispatchPtr TGAssembly::PlanarRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1225)
inline VARIANT_BOOL TGAssembly::PlanarRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(1226)
inline TGAssembly::OccurrencePtr TGAssembly::PlanarRelation3d::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1227)
inline TGAssembly::OccurrencePtr TGAssembly::PlanarRelation3d::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1228)
inline void TGAssembly::PlanarRelation3d::PutNormalsAligned ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1229)
inline VARIANT_BOOL TGAssembly::PlanarRelation3d::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1230)
inline void TGAssembly::PlanarRelation3d::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1231)
inline IDispatchPtr TGAssembly::PlanarRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1232)
inline IDispatchPtr TGAssembly::PlanarRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1233)
inline VARIANT_BOOL TGAssembly::PlanarRelation3d::GetRangedOffset ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1234)
inline void TGAssembly::PlanarRelation3d::PutRangedOffset ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1235)
inline double TGAssembly::PlanarRelation3d::GetRangeLow ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1236)
inline void TGAssembly::PlanarRelation3d::PutRangeLow ( double _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1237)
inline double TGAssembly::PlanarRelation3d::GetRangeHigh ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1238)
inline void TGAssembly::PlanarRelation3d::PutRangeHigh ( double _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1239)
inline TGPart::SuppressVariablePtr TGAssembly::PlanarRelation3d::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1240)
inline TGPart::SuppressVariablePtr TGAssembly::PlanarRelation3d::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1241)
inline HRESULT TGAssembly::PlanarRelation3d::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1242)
inline VARIANT_BOOL TGAssembly::PlanarRelation3d::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IPlanarRelation3dAuto wrapper method implementations
//

#pragma implementation_key(1243)
inline IDispatchPtr TGAssembly::_IPlanarRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1244)
inline IDispatchPtr TGAssembly::_IPlanarRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1245)
inline HRESULT TGAssembly::_IPlanarRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1246)
inline long TGAssembly::_IPlanarRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1247)
inline enum TGFramework::ObjectType TGAssembly::_IPlanarRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1248)
inline HRESULT TGAssembly::_IPlanarRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1249)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::_IPlanarRelation3dAuto::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1250)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::_IPlanarRelation3dAuto::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    HRESULT _hr = get_DetailedStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1251)
inline TGAssembly::PartPtr TGAssembly::_IPlanarRelation3dAuto::GetPart1 ( ) {
    struct Part * _result = 0;
    HRESULT _hr = get_Part1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartPtr(_result, false);
}

#pragma implementation_key(1252)
inline TGAssembly::PartPtr TGAssembly::_IPlanarRelation3dAuto::GetPart2 ( ) {
    struct Part * _result = 0;
    HRESULT _hr = get_Part2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartPtr(_result, false);
}

#pragma implementation_key(1253)
inline HRESULT TGAssembly::_IPlanarRelation3dAuto::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetGeometry1(GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1254)
inline HRESULT TGAssembly::_IPlanarRelation3dAuto::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetGeometry2(GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1255)
inline VARIANT_BOOL TGAssembly::_IPlanarRelation3dAuto::GetFixedOffset ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FixedOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1256)
inline void TGAssembly::_IPlanarRelation3dAuto::PutFixedOffset ( VARIANT_BOOL FixedOffset ) {
    HRESULT _hr = put_FixedOffset(FixedOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1257)
inline double TGAssembly::_IPlanarRelation3dAuto::GetOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_Offset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1258)
inline void TGAssembly::_IPlanarRelation3dAuto::PutOffset ( double Offset ) {
    HRESULT _hr = put_Offset(Offset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1259)
inline VARIANT_BOOL TGAssembly::_IPlanarRelation3dAuto::GetNormalsAligned ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_NormalsAligned(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1260)
inline IDispatchPtr TGAssembly::_IPlanarRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1261)
inline VARIANT_BOOL TGAssembly::_IPlanarRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1262)
inline TGAssembly::OccurrencePtr TGAssembly::_IPlanarRelation3dAuto::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1263)
inline TGAssembly::OccurrencePtr TGAssembly::_IPlanarRelation3dAuto::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1264)
inline void TGAssembly::_IPlanarRelation3dAuto::PutNormalsAligned ( VARIANT_BOOL NormalsAligned ) {
    HRESULT _hr = put_NormalsAligned(NormalsAligned);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1265)
inline VARIANT_BOOL TGAssembly::_IPlanarRelation3dAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1266)
inline void TGAssembly::_IPlanarRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress ) {
    HRESULT _hr = put_Suppress(bSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1267)
inline IDispatchPtr TGAssembly::_IPlanarRelation3dAuto::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement1(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1268)
inline IDispatchPtr TGAssembly::_IPlanarRelation3dAuto::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement2(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1269)
inline VARIANT_BOOL TGAssembly::_IPlanarRelation3dAuto::GetRangedOffset ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RangedOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1270)
inline void TGAssembly::_IPlanarRelation3dAuto::PutRangedOffset ( VARIANT_BOOL RangedOffset ) {
    HRESULT _hr = put_RangedOffset(RangedOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1271)
inline double TGAssembly::_IPlanarRelation3dAuto::GetRangeLow ( ) {
    double _result = 0;
    HRESULT _hr = get_RangeLow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1272)
inline void TGAssembly::_IPlanarRelation3dAuto::PutRangeLow ( double RangeLow ) {
    HRESULT _hr = put_RangeLow(RangeLow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1273)
inline double TGAssembly::_IPlanarRelation3dAuto::GetRangeHigh ( ) {
    double _result = 0;
    HRESULT _hr = get_RangeHigh(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1274)
inline void TGAssembly::_IPlanarRelation3dAuto::PutRangeHigh ( double RangeHigh ) {
    HRESULT _hr = put_RangeHigh(RangeHigh);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1275)
inline TGPart::SuppressVariablePtr TGAssembly::_IPlanarRelation3dAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1276)
inline TGPart::SuppressVariablePtr TGAssembly::_IPlanarRelation3dAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1277)
inline HRESULT TGAssembly::_IPlanarRelation3dAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1278)
inline VARIANT_BOOL TGAssembly::_IPlanarRelation3dAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AxialRelation3d wrapper method implementations
//

#pragma implementation_key(1279)
inline IDispatchPtr TGAssembly::AxialRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1280)
inline IDispatchPtr TGAssembly::AxialRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1281)
inline HRESULT TGAssembly::AxialRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1282)
inline long TGAssembly::AxialRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1283)
inline enum TGFramework::ObjectType TGAssembly::AxialRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1284)
inline HRESULT TGAssembly::AxialRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(1285)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::AxialRelation3d::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1286)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::AxialRelation3d::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1287)
inline TGAssembly::PartPtr TGAssembly::AxialRelation3d::GetPart1 ( ) {
    struct Part * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PartPtr(_result, false);
}

#pragma implementation_key(1288)
inline TGAssembly::PartPtr TGAssembly::AxialRelation3d::GetPart2 ( ) {
    struct Part * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PartPtr(_result, false);
}

#pragma implementation_key(1289)
inline HRESULT TGAssembly::AxialRelation3d::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005", GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1290)
inline HRESULT TGAssembly::AxialRelation3d::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005", GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1291)
inline VARIANT_BOOL TGAssembly::AxialRelation3d::GetFixedRotate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1292)
inline void TGAssembly::AxialRelation3d::PutFixedRotate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1293)
inline IDispatchPtr TGAssembly::AxialRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1294)
inline VARIANT_BOOL TGAssembly::AxialRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(1295)
inline TGAssembly::OccurrencePtr TGAssembly::AxialRelation3d::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1296)
inline TGAssembly::OccurrencePtr TGAssembly::AxialRelation3d::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1297)
inline VARIANT_BOOL TGAssembly::AxialRelation3d::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1298)
inline void TGAssembly::AxialRelation3d::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1299)
inline IDispatchPtr TGAssembly::AxialRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1300)
inline IDispatchPtr TGAssembly::AxialRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1301)
inline VARIANT_BOOL TGAssembly::AxialRelation3d::GetParallelOffset ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1302)
inline void TGAssembly::AxialRelation3d::PutParallelOffset ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1303)
inline VARIANT_BOOL TGAssembly::AxialRelation3d::GetFixedParallelOffset ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1304)
inline void TGAssembly::AxialRelation3d::PutFixedParallelOffset ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1305)
inline double TGAssembly::AxialRelation3d::GetOffset ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1306)
inline void TGAssembly::AxialRelation3d::PutOffset ( double _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1307)
inline enum TGAssembly::Relation3dOrientationConstants TGAssembly::AxialRelation3d::GetOrientation ( ) {
    enum Relation3dOrientationConstants _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1308)
inline void TGAssembly::AxialRelation3d::PutOrientation ( enum Relation3dOrientationConstants _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1309)
inline HRESULT TGAssembly::AxialRelation3d::Flip ( ) {
    return _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1310)
inline VARIANT_BOOL TGAssembly::AxialRelation3d::GetRangedOffset ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1311)
inline void TGAssembly::AxialRelation3d::PutRangedOffset ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1312)
inline double TGAssembly::AxialRelation3d::GetRangeLow ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1313)
inline void TGAssembly::AxialRelation3d::PutRangeLow ( double _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1314)
inline double TGAssembly::AxialRelation3d::GetRangeHigh ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1315)
inline void TGAssembly::AxialRelation3d::PutRangeHigh ( double _arg1 ) {
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1316)
inline TGPart::SuppressVariablePtr TGAssembly::AxialRelation3d::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1317)
inline TGPart::SuppressVariablePtr TGAssembly::AxialRelation3d::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1318)
inline HRESULT TGAssembly::AxialRelation3d::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1319)
inline VARIANT_BOOL TGAssembly::AxialRelation3d::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IAxialRelation3dAuto wrapper method implementations
//

#pragma implementation_key(1320)
inline IDispatchPtr TGAssembly::_IAxialRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1321)
inline IDispatchPtr TGAssembly::_IAxialRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1322)
inline HRESULT TGAssembly::_IAxialRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1323)
inline long TGAssembly::_IAxialRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1324)
inline enum TGFramework::ObjectType TGAssembly::_IAxialRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1325)
inline HRESULT TGAssembly::_IAxialRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1326)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::_IAxialRelation3dAuto::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1327)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::_IAxialRelation3dAuto::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    HRESULT _hr = get_DetailedStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1328)
inline TGAssembly::PartPtr TGAssembly::_IAxialRelation3dAuto::GetPart1 ( ) {
    struct Part * _result = 0;
    HRESULT _hr = get_Part1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartPtr(_result, false);
}

#pragma implementation_key(1329)
inline TGAssembly::PartPtr TGAssembly::_IAxialRelation3dAuto::GetPart2 ( ) {
    struct Part * _result = 0;
    HRESULT _hr = get_Part2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartPtr(_result, false);
}

#pragma implementation_key(1330)
inline HRESULT TGAssembly::_IAxialRelation3dAuto::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetGeometry1(GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1331)
inline HRESULT TGAssembly::_IAxialRelation3dAuto::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetGeometry2(GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1332)
inline VARIANT_BOOL TGAssembly::_IAxialRelation3dAuto::GetFixedRotate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FixedRotate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1333)
inline void TGAssembly::_IAxialRelation3dAuto::PutFixedRotate ( VARIANT_BOOL FixedRotate ) {
    HRESULT _hr = put_FixedRotate(FixedRotate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1334)
inline IDispatchPtr TGAssembly::_IAxialRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1335)
inline VARIANT_BOOL TGAssembly::_IAxialRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1336)
inline TGAssembly::OccurrencePtr TGAssembly::_IAxialRelation3dAuto::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1337)
inline TGAssembly::OccurrencePtr TGAssembly::_IAxialRelation3dAuto::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1338)
inline VARIANT_BOOL TGAssembly::_IAxialRelation3dAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1339)
inline void TGAssembly::_IAxialRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress ) {
    HRESULT _hr = put_Suppress(bSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1340)
inline IDispatchPtr TGAssembly::_IAxialRelation3dAuto::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement1(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1341)
inline IDispatchPtr TGAssembly::_IAxialRelation3dAuto::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement2(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1342)
inline VARIANT_BOOL TGAssembly::_IAxialRelation3dAuto::GetParallelOffset ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ParallelOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1343)
inline void TGAssembly::_IAxialRelation3dAuto::PutParallelOffset ( VARIANT_BOOL ParallelOffset ) {
    HRESULT _hr = put_ParallelOffset(ParallelOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1344)
inline VARIANT_BOOL TGAssembly::_IAxialRelation3dAuto::GetFixedParallelOffset ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FixedParallelOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1345)
inline void TGAssembly::_IAxialRelation3dAuto::PutFixedParallelOffset ( VARIANT_BOOL FixedParallelOffset ) {
    HRESULT _hr = put_FixedParallelOffset(FixedParallelOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1346)
inline double TGAssembly::_IAxialRelation3dAuto::GetOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_Offset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1347)
inline void TGAssembly::_IAxialRelation3dAuto::PutOffset ( double Offset ) {
    HRESULT _hr = put_Offset(Offset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1348)
inline enum TGAssembly::Relation3dOrientationConstants TGAssembly::_IAxialRelation3dAuto::GetOrientation ( ) {
    enum Relation3dOrientationConstants _result;
    HRESULT _hr = get_Orientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1349)
inline void TGAssembly::_IAxialRelation3dAuto::PutOrientation ( enum Relation3dOrientationConstants Orientation ) {
    HRESULT _hr = put_Orientation(Orientation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1350)
inline HRESULT TGAssembly::_IAxialRelation3dAuto::Flip ( ) {
    HRESULT _hr = raw_Flip();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1351)
inline VARIANT_BOOL TGAssembly::_IAxialRelation3dAuto::GetRangedOffset ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RangedOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1352)
inline void TGAssembly::_IAxialRelation3dAuto::PutRangedOffset ( VARIANT_BOOL RangedOffset ) {
    HRESULT _hr = put_RangedOffset(RangedOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1353)
inline double TGAssembly::_IAxialRelation3dAuto::GetRangeLow ( ) {
    double _result = 0;
    HRESULT _hr = get_RangeLow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1354)
inline void TGAssembly::_IAxialRelation3dAuto::PutRangeLow ( double RangeLow ) {
    HRESULT _hr = put_RangeLow(RangeLow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1355)
inline double TGAssembly::_IAxialRelation3dAuto::GetRangeHigh ( ) {
    double _result = 0;
    HRESULT _hr = get_RangeHigh(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1356)
inline void TGAssembly::_IAxialRelation3dAuto::PutRangeHigh ( double RangeHigh ) {
    HRESULT _hr = put_RangeHigh(RangeHigh);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1357)
inline TGPart::SuppressVariablePtr TGAssembly::_IAxialRelation3dAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1358)
inline TGPart::SuppressVariablePtr TGAssembly::_IAxialRelation3dAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1359)
inline HRESULT TGAssembly::_IAxialRelation3dAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1360)
inline VARIANT_BOOL TGAssembly::_IAxialRelation3dAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface PointRelation3d wrapper method implementations
//

#pragma implementation_key(1361)
inline IDispatchPtr TGAssembly::PointRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1362)
inline IDispatchPtr TGAssembly::PointRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1363)
inline HRESULT TGAssembly::PointRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1364)
inline long TGAssembly::PointRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1365)
inline enum TGFramework::ObjectType TGAssembly::PointRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1366)
inline HRESULT TGAssembly::PointRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(1367)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::PointRelation3d::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1368)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::PointRelation3d::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1369)
inline TGAssembly::PartPtr TGAssembly::PointRelation3d::GetPart1 ( ) {
    struct Part * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PartPtr(_result, false);
}

#pragma implementation_key(1370)
inline TGAssembly::PartPtr TGAssembly::PointRelation3d::GetPart2 ( ) {
    struct Part * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PartPtr(_result, false);
}

#pragma implementation_key(1371)
inline HRESULT TGAssembly::PointRelation3d::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005", GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1372)
inline HRESULT TGAssembly::PointRelation3d::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005", GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1373)
inline IDispatchPtr TGAssembly::PointRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1374)
inline VARIANT_BOOL TGAssembly::PointRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(1375)
inline TGAssembly::OccurrencePtr TGAssembly::PointRelation3d::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1376)
inline TGAssembly::OccurrencePtr TGAssembly::PointRelation3d::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1377)
inline VARIANT_BOOL TGAssembly::PointRelation3d::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1378)
inline void TGAssembly::PointRelation3d::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1379)
inline IDispatchPtr TGAssembly::PointRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1380)
inline IDispatchPtr TGAssembly::PointRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1381)
inline VARIANT_BOOL TGAssembly::PointRelation3d::GetRangedOffset ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1382)
inline void TGAssembly::PointRelation3d::PutRangedOffset ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1383)
inline double TGAssembly::PointRelation3d::GetRangeLow ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1384)
inline void TGAssembly::PointRelation3d::PutRangeLow ( double _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1385)
inline double TGAssembly::PointRelation3d::GetRangeHigh ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1386)
inline void TGAssembly::PointRelation3d::PutRangeHigh ( double _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1387)
inline TGPart::SuppressVariablePtr TGAssembly::PointRelation3d::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1388)
inline TGPart::SuppressVariablePtr TGAssembly::PointRelation3d::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1389)
inline HRESULT TGAssembly::PointRelation3d::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1390)
inline VARIANT_BOOL TGAssembly::PointRelation3d::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IPointRelation3dAuto wrapper method implementations
//

#pragma implementation_key(1391)
inline IDispatchPtr TGAssembly::_IPointRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1392)
inline IDispatchPtr TGAssembly::_IPointRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1393)
inline HRESULT TGAssembly::_IPointRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1394)
inline long TGAssembly::_IPointRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1395)
inline enum TGFramework::ObjectType TGAssembly::_IPointRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1396)
inline HRESULT TGAssembly::_IPointRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1397)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::_IPointRelation3dAuto::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1398)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::_IPointRelation3dAuto::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    HRESULT _hr = get_DetailedStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1399)
inline TGAssembly::PartPtr TGAssembly::_IPointRelation3dAuto::GetPart1 ( ) {
    struct Part * _result = 0;
    HRESULT _hr = get_Part1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartPtr(_result, false);
}

#pragma implementation_key(1400)
inline TGAssembly::PartPtr TGAssembly::_IPointRelation3dAuto::GetPart2 ( ) {
    struct Part * _result = 0;
    HRESULT _hr = get_Part2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartPtr(_result, false);
}

#pragma implementation_key(1401)
inline HRESULT TGAssembly::_IPointRelation3dAuto::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetGeometry1(GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1402)
inline HRESULT TGAssembly::_IPointRelation3dAuto::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetGeometry2(GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1403)
inline IDispatchPtr TGAssembly::_IPointRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1404)
inline VARIANT_BOOL TGAssembly::_IPointRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1405)
inline TGAssembly::OccurrencePtr TGAssembly::_IPointRelation3dAuto::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1406)
inline TGAssembly::OccurrencePtr TGAssembly::_IPointRelation3dAuto::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1407)
inline VARIANT_BOOL TGAssembly::_IPointRelation3dAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1408)
inline void TGAssembly::_IPointRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress ) {
    HRESULT _hr = put_Suppress(bSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1409)
inline IDispatchPtr TGAssembly::_IPointRelation3dAuto::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement1(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1410)
inline IDispatchPtr TGAssembly::_IPointRelation3dAuto::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement2(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1411)
inline VARIANT_BOOL TGAssembly::_IPointRelation3dAuto::GetRangedOffset ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RangedOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1412)
inline void TGAssembly::_IPointRelation3dAuto::PutRangedOffset ( VARIANT_BOOL RangedOffset ) {
    HRESULT _hr = put_RangedOffset(RangedOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1413)
inline double TGAssembly::_IPointRelation3dAuto::GetRangeLow ( ) {
    double _result = 0;
    HRESULT _hr = get_RangeLow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1414)
inline void TGAssembly::_IPointRelation3dAuto::PutRangeLow ( double RangeLow ) {
    HRESULT _hr = put_RangeLow(RangeLow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1415)
inline double TGAssembly::_IPointRelation3dAuto::GetRangeHigh ( ) {
    double _result = 0;
    HRESULT _hr = get_RangeHigh(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1416)
inline void TGAssembly::_IPointRelation3dAuto::PutRangeHigh ( double RangeHigh ) {
    HRESULT _hr = put_RangeHigh(RangeHigh);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1417)
inline TGPart::SuppressVariablePtr TGAssembly::_IPointRelation3dAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1418)
inline TGPart::SuppressVariablePtr TGAssembly::_IPointRelation3dAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1419)
inline HRESULT TGAssembly::_IPointRelation3dAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1420)
inline VARIANT_BOOL TGAssembly::_IPointRelation3dAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AngularRelation3d wrapper method implementations
//

#pragma implementation_key(1421)
inline IDispatchPtr TGAssembly::AngularRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1422)
inline IDispatchPtr TGAssembly::AngularRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1423)
inline HRESULT TGAssembly::AngularRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1424)
inline long TGAssembly::AngularRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1425)
inline enum TGFramework::ObjectType TGAssembly::AngularRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1426)
inline HRESULT TGAssembly::AngularRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(1427)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::AngularRelation3d::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1428)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::AngularRelation3d::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1429)
inline TGAssembly::PartPtr TGAssembly::AngularRelation3d::GetPart1 ( ) {
    struct Part * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PartPtr(_result, false);
}

#pragma implementation_key(1430)
inline TGAssembly::PartPtr TGAssembly::AngularRelation3d::GetPart2 ( ) {
    struct Part * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PartPtr(_result, false);
}

#pragma implementation_key(1431)
inline HRESULT TGAssembly::AngularRelation3d::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005", GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1432)
inline HRESULT TGAssembly::AngularRelation3d::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005", GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1433)
inline double TGAssembly::AngularRelation3d::GetAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1434)
inline void TGAssembly::AngularRelation3d::PutAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1435)
inline HRESULT TGAssembly::AngularRelation3d::GetDefinition ( VARIANT_BOOL * ToPlane1PositiveSide, VARIANT_BOOL * FromPlane2PositiveSide, VARIANT_BOOL * CounterClockWise, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b\x400b\x400b\x4005\x4005\x4005", ToPlane1PositiveSide, FromPlane2PositiveSide, CounterClockWise, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1436)
inline IDispatchPtr TGAssembly::AngularRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1437)
inline VARIANT_BOOL TGAssembly::AngularRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(1438)
inline TGAssembly::OccurrencePtr TGAssembly::AngularRelation3d::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1439)
inline TGAssembly::OccurrencePtr TGAssembly::AngularRelation3d::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1440)
inline VARIANT_BOOL TGAssembly::AngularRelation3d::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1441)
inline void TGAssembly::AngularRelation3d::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1442)
inline IDispatchPtr TGAssembly::AngularRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1443)
inline IDispatchPtr TGAssembly::AngularRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1444)
inline VARIANT_BOOL TGAssembly::AngularRelation3d::GetRangedAngle ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1445)
inline void TGAssembly::AngularRelation3d::PutRangedAngle ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1446)
inline double TGAssembly::AngularRelation3d::GetRangeLow ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1447)
inline void TGAssembly::AngularRelation3d::PutRangeLow ( double _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1448)
inline double TGAssembly::AngularRelation3d::GetRangeHigh ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1449)
inline void TGAssembly::AngularRelation3d::PutRangeHigh ( double _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1450)
inline TGPart::SuppressVariablePtr TGAssembly::AngularRelation3d::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1451)
inline TGPart::SuppressVariablePtr TGAssembly::AngularRelation3d::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1452)
inline HRESULT TGAssembly::AngularRelation3d::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1453)
inline VARIANT_BOOL TGAssembly::AngularRelation3d::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IAngularRelation3dAuto wrapper method implementations
//

#pragma implementation_key(1454)
inline IDispatchPtr TGAssembly::_IAngularRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1455)
inline IDispatchPtr TGAssembly::_IAngularRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1456)
inline HRESULT TGAssembly::_IAngularRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1457)
inline long TGAssembly::_IAngularRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1458)
inline enum TGFramework::ObjectType TGAssembly::_IAngularRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1459)
inline HRESULT TGAssembly::_IAngularRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1460)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::_IAngularRelation3dAuto::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1461)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::_IAngularRelation3dAuto::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    HRESULT _hr = get_DetailedStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1462)
inline TGAssembly::PartPtr TGAssembly::_IAngularRelation3dAuto::GetPart1 ( ) {
    struct Part * _result = 0;
    HRESULT _hr = get_Part1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartPtr(_result, false);
}

#pragma implementation_key(1463)
inline TGAssembly::PartPtr TGAssembly::_IAngularRelation3dAuto::GetPart2 ( ) {
    struct Part * _result = 0;
    HRESULT _hr = get_Part2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartPtr(_result, false);
}

#pragma implementation_key(1464)
inline HRESULT TGAssembly::_IAngularRelation3dAuto::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetGeometry1(GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1465)
inline HRESULT TGAssembly::_IAngularRelation3dAuto::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetGeometry2(GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1466)
inline double TGAssembly::_IAngularRelation3dAuto::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1467)
inline void TGAssembly::_IAngularRelation3dAuto::PutAngle ( double Angle ) {
    HRESULT _hr = put_Angle(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1468)
inline HRESULT TGAssembly::_IAngularRelation3dAuto::GetDefinition ( VARIANT_BOOL * ToPlane1PositiveSide, VARIANT_BOOL * FromPlane2PositiveSide, VARIANT_BOOL * CounterClockWise, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetDefinition(ToPlane1PositiveSide, FromPlane2PositiveSide, CounterClockWise, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1469)
inline IDispatchPtr TGAssembly::_IAngularRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1470)
inline VARIANT_BOOL TGAssembly::_IAngularRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1471)
inline TGAssembly::OccurrencePtr TGAssembly::_IAngularRelation3dAuto::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1472)
inline TGAssembly::OccurrencePtr TGAssembly::_IAngularRelation3dAuto::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1473)
inline VARIANT_BOOL TGAssembly::_IAngularRelation3dAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1474)
inline void TGAssembly::_IAngularRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress ) {
    HRESULT _hr = put_Suppress(bSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1475)
inline IDispatchPtr TGAssembly::_IAngularRelation3dAuto::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement1(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1476)
inline IDispatchPtr TGAssembly::_IAngularRelation3dAuto::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement2(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1477)
inline VARIANT_BOOL TGAssembly::_IAngularRelation3dAuto::GetRangedAngle ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RangedAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1478)
inline void TGAssembly::_IAngularRelation3dAuto::PutRangedAngle ( VARIANT_BOOL RangedAngle ) {
    HRESULT _hr = put_RangedAngle(RangedAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1479)
inline double TGAssembly::_IAngularRelation3dAuto::GetRangeLow ( ) {
    double _result = 0;
    HRESULT _hr = get_RangeLow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1480)
inline void TGAssembly::_IAngularRelation3dAuto::PutRangeLow ( double RangeLow ) {
    HRESULT _hr = put_RangeLow(RangeLow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1481)
inline double TGAssembly::_IAngularRelation3dAuto::GetRangeHigh ( ) {
    double _result = 0;
    HRESULT _hr = get_RangeHigh(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1482)
inline void TGAssembly::_IAngularRelation3dAuto::PutRangeHigh ( double RangeHigh ) {
    HRESULT _hr = put_RangeHigh(RangeHigh);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1483)
inline TGPart::SuppressVariablePtr TGAssembly::_IAngularRelation3dAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1484)
inline TGPart::SuppressVariablePtr TGAssembly::_IAngularRelation3dAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1485)
inline HRESULT TGAssembly::_IAngularRelation3dAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1486)
inline VARIANT_BOOL TGAssembly::_IAngularRelation3dAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface TangentRelation3d wrapper method implementations
//

#pragma implementation_key(1487)
inline IDispatchPtr TGAssembly::TangentRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1488)
inline IDispatchPtr TGAssembly::TangentRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1489)
inline HRESULT TGAssembly::TangentRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1490)
inline long TGAssembly::TangentRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1491)
inline enum TGFramework::ObjectType TGAssembly::TangentRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1492)
inline HRESULT TGAssembly::TangentRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(1493)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::TangentRelation3d::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1494)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::TangentRelation3d::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1495)
inline HRESULT TGAssembly::TangentRelation3d::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005", GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1496)
inline HRESULT TGAssembly::TangentRelation3d::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005", GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1497)
inline TGAssembly::OccurrencePtr TGAssembly::TangentRelation3d::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1498)
inline TGAssembly::OccurrencePtr TGAssembly::TangentRelation3d::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1499)
inline VARIANT_BOOL TGAssembly::TangentRelation3d::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1500)
inline void TGAssembly::TangentRelation3d::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1501)
inline double TGAssembly::TangentRelation3d::GetOffset ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1502)
inline void TGAssembly::TangentRelation3d::PutOffset ( double _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1503)
inline VARIANT_BOOL TGAssembly::TangentRelation3d::GetHalfSpacePositive ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1504)
inline IDispatchPtr TGAssembly::TangentRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1505)
inline VARIANT_BOOL TGAssembly::TangentRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(1506)
inline IDispatchPtr TGAssembly::TangentRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1507)
inline IDispatchPtr TGAssembly::TangentRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1508)
inline VARIANT_BOOL TGAssembly::TangentRelation3d::GetRangedOffset ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1509)
inline void TGAssembly::TangentRelation3d::PutRangedOffset ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1510)
inline double TGAssembly::TangentRelation3d::GetRangeLow ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1511)
inline void TGAssembly::TangentRelation3d::PutRangeLow ( double _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1512)
inline double TGAssembly::TangentRelation3d::GetRangeHigh ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1513)
inline void TGAssembly::TangentRelation3d::PutRangeHigh ( double _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1514)
inline TGPart::SuppressVariablePtr TGAssembly::TangentRelation3d::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1515)
inline TGPart::SuppressVariablePtr TGAssembly::TangentRelation3d::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1516)
inline HRESULT TGAssembly::TangentRelation3d::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1517)
inline VARIANT_BOOL TGAssembly::TangentRelation3d::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _ITangentRelation3dAuto wrapper method implementations
//

#pragma implementation_key(1518)
inline IDispatchPtr TGAssembly::_ITangentRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1519)
inline IDispatchPtr TGAssembly::_ITangentRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1520)
inline HRESULT TGAssembly::_ITangentRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1521)
inline long TGAssembly::_ITangentRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1522)
inline enum TGFramework::ObjectType TGAssembly::_ITangentRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1523)
inline HRESULT TGAssembly::_ITangentRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1524)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::_ITangentRelation3dAuto::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1525)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::_ITangentRelation3dAuto::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    HRESULT _hr = get_DetailedStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1526)
inline HRESULT TGAssembly::_ITangentRelation3dAuto::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetGeometry1(GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1527)
inline HRESULT TGAssembly::_ITangentRelation3dAuto::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetGeometry2(GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1528)
inline TGAssembly::OccurrencePtr TGAssembly::_ITangentRelation3dAuto::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1529)
inline TGAssembly::OccurrencePtr TGAssembly::_ITangentRelation3dAuto::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1530)
inline VARIANT_BOOL TGAssembly::_ITangentRelation3dAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1531)
inline void TGAssembly::_ITangentRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress ) {
    HRESULT _hr = put_Suppress(bSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1532)
inline double TGAssembly::_ITangentRelation3dAuto::GetOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_Offset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1533)
inline void TGAssembly::_ITangentRelation3dAuto::PutOffset ( double Offset ) {
    HRESULT _hr = put_Offset(Offset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1534)
inline VARIANT_BOOL TGAssembly::_ITangentRelation3dAuto::GetHalfSpacePositive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HalfSpacePositive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1535)
inline IDispatchPtr TGAssembly::_ITangentRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1536)
inline VARIANT_BOOL TGAssembly::_ITangentRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1537)
inline IDispatchPtr TGAssembly::_ITangentRelation3dAuto::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement1(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1538)
inline IDispatchPtr TGAssembly::_ITangentRelation3dAuto::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement2(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1539)
inline VARIANT_BOOL TGAssembly::_ITangentRelation3dAuto::GetRangedOffset ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RangedOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1540)
inline void TGAssembly::_ITangentRelation3dAuto::PutRangedOffset ( VARIANT_BOOL RangedOffset ) {
    HRESULT _hr = put_RangedOffset(RangedOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1541)
inline double TGAssembly::_ITangentRelation3dAuto::GetRangeLow ( ) {
    double _result = 0;
    HRESULT _hr = get_RangeLow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1542)
inline void TGAssembly::_ITangentRelation3dAuto::PutRangeLow ( double RangeLow ) {
    HRESULT _hr = put_RangeLow(RangeLow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1543)
inline double TGAssembly::_ITangentRelation3dAuto::GetRangeHigh ( ) {
    double _result = 0;
    HRESULT _hr = get_RangeHigh(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1544)
inline void TGAssembly::_ITangentRelation3dAuto::PutRangeHigh ( double RangeHigh ) {
    HRESULT _hr = put_RangeHigh(RangeHigh);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1545)
inline TGPart::SuppressVariablePtr TGAssembly::_ITangentRelation3dAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1546)
inline TGPart::SuppressVariablePtr TGAssembly::_ITangentRelation3dAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1547)
inline HRESULT TGAssembly::_ITangentRelation3dAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1548)
inline VARIANT_BOOL TGAssembly::_ITangentRelation3dAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface GearRelation3d wrapper method implementations
//

#pragma implementation_key(1549)
inline IDispatchPtr TGAssembly::GearRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1550)
inline IDispatchPtr TGAssembly::GearRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1551)
inline HRESULT TGAssembly::GearRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1552)
inline long TGAssembly::GearRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1553)
inline enum TGFramework::ObjectType TGAssembly::GearRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1554)
inline HRESULT TGAssembly::GearRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(1555)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::GearRelation3d::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1556)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::GearRelation3d::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1557)
inline TGAssembly::OccurrencePtr TGAssembly::GearRelation3d::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1558)
inline TGAssembly::OccurrencePtr TGAssembly::GearRelation3d::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1559)
inline VARIANT_BOOL TGAssembly::GearRelation3d::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1560)
inline void TGAssembly::GearRelation3d::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1561)
inline IDispatchPtr TGAssembly::GearRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1562)
inline IDispatchPtr TGAssembly::GearRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1563)
inline HRESULT TGAssembly::GearRelation3d::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005", GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1564)
inline HRESULT TGAssembly::GearRelation3d::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005", GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1565)
inline double TGAssembly::GearRelation3d::GetRatioValue1 ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1566)
inline void TGAssembly::GearRelation3d::PutRatioValue1 ( double _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1567)
inline double TGAssembly::GearRelation3d::GetRatioValue2 ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1568)
inline void TGAssembly::GearRelation3d::PutRatioValue2 ( double _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1569)
inline HRESULT TGAssembly::GearRelation3d::Flip ( ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1570)
inline IDispatchPtr TGAssembly::GearRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1571)
inline VARIANT_BOOL TGAssembly::GearRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(1572)
inline TGPart::SuppressVariablePtr TGAssembly::GearRelation3d::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1573)
inline TGPart::SuppressVariablePtr TGAssembly::GearRelation3d::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1574)
inline HRESULT TGAssembly::GearRelation3d::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1575)
inline VARIANT_BOOL TGAssembly::GearRelation3d::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IGearRelation3dAuto wrapper method implementations
//

#pragma implementation_key(1576)
inline IDispatchPtr TGAssembly::_IGearRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1577)
inline IDispatchPtr TGAssembly::_IGearRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1578)
inline HRESULT TGAssembly::_IGearRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1579)
inline long TGAssembly::_IGearRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1580)
inline enum TGFramework::ObjectType TGAssembly::_IGearRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1581)
inline HRESULT TGAssembly::_IGearRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1582)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::_IGearRelation3dAuto::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1583)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::_IGearRelation3dAuto::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    HRESULT _hr = get_DetailedStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1584)
inline TGAssembly::OccurrencePtr TGAssembly::_IGearRelation3dAuto::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1585)
inline TGAssembly::OccurrencePtr TGAssembly::_IGearRelation3dAuto::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1586)
inline VARIANT_BOOL TGAssembly::_IGearRelation3dAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1587)
inline void TGAssembly::_IGearRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress ) {
    HRESULT _hr = put_Suppress(bSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1588)
inline IDispatchPtr TGAssembly::_IGearRelation3dAuto::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement1(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1589)
inline IDispatchPtr TGAssembly::_IGearRelation3dAuto::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement2(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1590)
inline HRESULT TGAssembly::_IGearRelation3dAuto::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetGeometry1(GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1591)
inline HRESULT TGAssembly::_IGearRelation3dAuto::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetGeometry2(GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1592)
inline double TGAssembly::_IGearRelation3dAuto::GetRatioValue1 ( ) {
    double _result = 0;
    HRESULT _hr = get_RatioValue1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1593)
inline void TGAssembly::_IGearRelation3dAuto::PutRatioValue1 ( double RatioValue1 ) {
    HRESULT _hr = put_RatioValue1(RatioValue1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1594)
inline double TGAssembly::_IGearRelation3dAuto::GetRatioValue2 ( ) {
    double _result = 0;
    HRESULT _hr = get_RatioValue2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1595)
inline void TGAssembly::_IGearRelation3dAuto::PutRatioValue2 ( double RatioValue2 ) {
    HRESULT _hr = put_RatioValue2(RatioValue2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1596)
inline HRESULT TGAssembly::_IGearRelation3dAuto::Flip ( ) {
    HRESULT _hr = raw_Flip();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1597)
inline IDispatchPtr TGAssembly::_IGearRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1598)
inline VARIANT_BOOL TGAssembly::_IGearRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1599)
inline TGPart::SuppressVariablePtr TGAssembly::_IGearRelation3dAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1600)
inline TGPart::SuppressVariablePtr TGAssembly::_IGearRelation3dAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1601)
inline HRESULT TGAssembly::_IGearRelation3dAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1602)
inline VARIANT_BOOL TGAssembly::_IGearRelation3dAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface CenterPlaneRelation3d wrapper method implementations
//

#pragma implementation_key(1603)
inline IDispatchPtr TGAssembly::CenterPlaneRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1604)
inline IDispatchPtr TGAssembly::CenterPlaneRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1605)
inline HRESULT TGAssembly::CenterPlaneRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1606)
inline long TGAssembly::CenterPlaneRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1607)
inline enum TGFramework::ObjectType TGAssembly::CenterPlaneRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1608)
inline HRESULT TGAssembly::CenterPlaneRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(1609)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::CenterPlaneRelation3d::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1610)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::CenterPlaneRelation3d::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1611)
inline VARIANT_BOOL TGAssembly::CenterPlaneRelation3d::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1612)
inline void TGAssembly::CenterPlaneRelation3d::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1613)
inline HRESULT TGAssembly::CenterPlaneRelation3d::Flip ( ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1614)
inline IDispatchPtr TGAssembly::CenterPlaneRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1615)
inline IDispatchPtr TGAssembly::CenterPlaneRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1616)
inline IDispatchPtr TGAssembly::CenterPlaneRelation3d::GetElement3 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1617)
inline IDispatchPtr TGAssembly::CenterPlaneRelation3d::GetElement4 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1618)
inline IDispatchPtr TGAssembly::CenterPlaneRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1619)
inline VARIANT_BOOL TGAssembly::CenterPlaneRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(1620)
inline TGPart::SuppressVariablePtr TGAssembly::CenterPlaneRelation3d::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1621)
inline TGPart::SuppressVariablePtr TGAssembly::CenterPlaneRelation3d::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1622)
inline HRESULT TGAssembly::CenterPlaneRelation3d::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1623)
inline VARIANT_BOOL TGAssembly::CenterPlaneRelation3d::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _ICenterPlaneRelation3dAuto wrapper method implementations
//

#pragma implementation_key(1624)
inline IDispatchPtr TGAssembly::_ICenterPlaneRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1625)
inline IDispatchPtr TGAssembly::_ICenterPlaneRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1626)
inline HRESULT TGAssembly::_ICenterPlaneRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1627)
inline long TGAssembly::_ICenterPlaneRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1628)
inline enum TGFramework::ObjectType TGAssembly::_ICenterPlaneRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1629)
inline HRESULT TGAssembly::_ICenterPlaneRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1630)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::_ICenterPlaneRelation3dAuto::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1631)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::_ICenterPlaneRelation3dAuto::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    HRESULT _hr = get_DetailedStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1632)
inline VARIANT_BOOL TGAssembly::_ICenterPlaneRelation3dAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1633)
inline void TGAssembly::_ICenterPlaneRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress ) {
    HRESULT _hr = put_Suppress(bSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1634)
inline HRESULT TGAssembly::_ICenterPlaneRelation3dAuto::Flip ( ) {
    HRESULT _hr = raw_Flip();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1635)
inline IDispatchPtr TGAssembly::_ICenterPlaneRelation3dAuto::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement1(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1636)
inline IDispatchPtr TGAssembly::_ICenterPlaneRelation3dAuto::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement2(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1637)
inline IDispatchPtr TGAssembly::_ICenterPlaneRelation3dAuto::GetElement3 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement3(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1638)
inline IDispatchPtr TGAssembly::_ICenterPlaneRelation3dAuto::GetElement4 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement4(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1639)
inline IDispatchPtr TGAssembly::_ICenterPlaneRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1640)
inline VARIANT_BOOL TGAssembly::_ICenterPlaneRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1641)
inline TGPart::SuppressVariablePtr TGAssembly::_ICenterPlaneRelation3dAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1642)
inline TGPart::SuppressVariablePtr TGAssembly::_ICenterPlaneRelation3dAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1643)
inline HRESULT TGAssembly::_ICenterPlaneRelation3dAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1644)
inline VARIANT_BOOL TGAssembly::_ICenterPlaneRelation3dAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface RigidSetRelation3d wrapper method implementations
//

#pragma implementation_key(1645)
inline IDispatchPtr TGAssembly::RigidSetRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1646)
inline IDispatchPtr TGAssembly::RigidSetRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1647)
inline HRESULT TGAssembly::RigidSetRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1648)
inline long TGAssembly::RigidSetRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1649)
inline enum TGFramework::ObjectType TGAssembly::RigidSetRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1650)
inline HRESULT TGAssembly::RigidSetRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(1651)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::RigidSetRelation3d::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1652)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::RigidSetRelation3d::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1653)
inline VARIANT_BOOL TGAssembly::RigidSetRelation3d::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1654)
inline void TGAssembly::RigidSetRelation3d::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1655)
inline HRESULT TGAssembly::RigidSetRelation3d::AddOccurrence ( IDispatch * Occurrence ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Occurrence);
}

#pragma implementation_key(1656)
inline HRESULT TGAssembly::RigidSetRelation3d::RemoveOccurrence ( IDispatch * Occurrence ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Occurrence);
}

#pragma implementation_key(1657)
inline VARIANT_BOOL TGAssembly::RigidSetRelation3d::GetIsMember ( IDispatch * Occurrence ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0009", Occurrence);
    return _result;
}

#pragma implementation_key(1658)
inline long TGAssembly::RigidSetRelation3d::GetOccurrenceCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1659)
inline SAFEARRAY * TGAssembly::RigidSetRelation3d::GetOccurrences ( ) {
    SAFEARRAY * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_ARRAY|VT_DISPATCH, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1660)
inline IDispatchPtr TGAssembly::RigidSetRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1661)
inline VARIANT_BOOL TGAssembly::RigidSetRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(1662)
inline TGPart::SuppressVariablePtr TGAssembly::RigidSetRelation3d::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1663)
inline TGPart::SuppressVariablePtr TGAssembly::RigidSetRelation3d::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1664)
inline HRESULT TGAssembly::RigidSetRelation3d::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1665)
inline VARIANT_BOOL TGAssembly::RigidSetRelation3d::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IRigidSetRelation3dAuto wrapper method implementations
//

#pragma implementation_key(1666)
inline IDispatchPtr TGAssembly::_IRigidSetRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1667)
inline IDispatchPtr TGAssembly::_IRigidSetRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1668)
inline HRESULT TGAssembly::_IRigidSetRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1669)
inline long TGAssembly::_IRigidSetRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1670)
inline enum TGFramework::ObjectType TGAssembly::_IRigidSetRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1671)
inline HRESULT TGAssembly::_IRigidSetRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1672)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::_IRigidSetRelation3dAuto::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1673)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::_IRigidSetRelation3dAuto::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    HRESULT _hr = get_DetailedStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1674)
inline VARIANT_BOOL TGAssembly::_IRigidSetRelation3dAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1675)
inline void TGAssembly::_IRigidSetRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress ) {
    HRESULT _hr = put_Suppress(bSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1676)
inline HRESULT TGAssembly::_IRigidSetRelation3dAuto::AddOccurrence ( IDispatch * Occurrence ) {
    HRESULT _hr = raw_AddOccurrence(Occurrence);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1677)
inline HRESULT TGAssembly::_IRigidSetRelation3dAuto::RemoveOccurrence ( IDispatch * Occurrence ) {
    HRESULT _hr = raw_RemoveOccurrence(Occurrence);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1678)
inline VARIANT_BOOL TGAssembly::_IRigidSetRelation3dAuto::GetIsMember ( IDispatch * Occurrence ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsMember(Occurrence, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1679)
inline long TGAssembly::_IRigidSetRelation3dAuto::GetOccurrenceCount ( ) {
    long _result = 0;
    HRESULT _hr = get_OccurrenceCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1680)
inline SAFEARRAY * TGAssembly::_IRigidSetRelation3dAuto::GetOccurrences ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_Occurrences(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1681)
inline IDispatchPtr TGAssembly::_IRigidSetRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1682)
inline VARIANT_BOOL TGAssembly::_IRigidSetRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1683)
inline TGPart::SuppressVariablePtr TGAssembly::_IRigidSetRelation3dAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1684)
inline TGPart::SuppressVariablePtr TGAssembly::_IRigidSetRelation3dAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1685)
inline HRESULT TGAssembly::_IRigidSetRelation3dAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1686)
inline VARIANT_BOOL TGAssembly::_IRigidSetRelation3dAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface CamFollowerRelation3d wrapper method implementations
//

#pragma implementation_key(1687)
inline IDispatchPtr TGAssembly::CamFollowerRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1688)
inline IDispatchPtr TGAssembly::CamFollowerRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1689)
inline HRESULT TGAssembly::CamFollowerRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1690)
inline long TGAssembly::CamFollowerRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1691)
inline enum TGFramework::ObjectType TGAssembly::CamFollowerRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1692)
inline HRESULT TGAssembly::CamFollowerRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(1693)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::CamFollowerRelation3d::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1694)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::CamFollowerRelation3d::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1695)
inline TGAssembly::OccurrencePtr TGAssembly::CamFollowerRelation3d::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1696)
inline TGAssembly::OccurrencePtr TGAssembly::CamFollowerRelation3d::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1697)
inline VARIANT_BOOL TGAssembly::CamFollowerRelation3d::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1698)
inline void TGAssembly::CamFollowerRelation3d::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1699)
inline IDispatchPtr TGAssembly::CamFollowerRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1700)
inline VARIANT_BOOL TGAssembly::CamFollowerRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(1701)
inline TGPart::SuppressVariablePtr TGAssembly::CamFollowerRelation3d::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1702)
inline TGPart::SuppressVariablePtr TGAssembly::CamFollowerRelation3d::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1703)
inline HRESULT TGAssembly::CamFollowerRelation3d::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1704)
inline VARIANT_BOOL TGAssembly::CamFollowerRelation3d::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _ICamFollowerRelation3dAuto wrapper method implementations
//

#pragma implementation_key(1705)
inline IDispatchPtr TGAssembly::_ICamFollowerRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1706)
inline IDispatchPtr TGAssembly::_ICamFollowerRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1707)
inline HRESULT TGAssembly::_ICamFollowerRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1708)
inline long TGAssembly::_ICamFollowerRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1709)
inline enum TGFramework::ObjectType TGAssembly::_ICamFollowerRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1710)
inline HRESULT TGAssembly::_ICamFollowerRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1711)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::_ICamFollowerRelation3dAuto::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1712)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::_ICamFollowerRelation3dAuto::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    HRESULT _hr = get_DetailedStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1713)
inline TGAssembly::OccurrencePtr TGAssembly::_ICamFollowerRelation3dAuto::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1714)
inline TGAssembly::OccurrencePtr TGAssembly::_ICamFollowerRelation3dAuto::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1715)
inline VARIANT_BOOL TGAssembly::_ICamFollowerRelation3dAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1716)
inline void TGAssembly::_ICamFollowerRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress ) {
    HRESULT _hr = put_Suppress(bSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1717)
inline IDispatchPtr TGAssembly::_ICamFollowerRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1718)
inline VARIANT_BOOL TGAssembly::_ICamFollowerRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1719)
inline TGPart::SuppressVariablePtr TGAssembly::_ICamFollowerRelation3dAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1720)
inline TGPart::SuppressVariablePtr TGAssembly::_ICamFollowerRelation3dAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1721)
inline HRESULT TGAssembly::_ICamFollowerRelation3dAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1722)
inline VARIANT_BOOL TGAssembly::_ICamFollowerRelation3dAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface PathRelation3d wrapper method implementations
//

#pragma implementation_key(1723)
inline IDispatchPtr TGAssembly::PathRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1724)
inline IDispatchPtr TGAssembly::PathRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1725)
inline HRESULT TGAssembly::PathRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1726)
inline long TGAssembly::PathRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1727)
inline enum TGFramework::ObjectType TGAssembly::PathRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1728)
inline HRESULT TGAssembly::PathRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(1729)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::PathRelation3d::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1730)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::PathRelation3d::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1731)
inline TGAssembly::OccurrencePtr TGAssembly::PathRelation3d::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1732)
inline TGAssembly::OccurrencePtr TGAssembly::PathRelation3d::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1733)
inline VARIANT_BOOL TGAssembly::PathRelation3d::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1734)
inline void TGAssembly::PathRelation3d::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1735)
inline IDispatchPtr TGAssembly::PathRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1736)
inline VARIANT_BOOL TGAssembly::PathRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(1737)
inline TGPart::SuppressVariablePtr TGAssembly::PathRelation3d::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1738)
inline TGPart::SuppressVariablePtr TGAssembly::PathRelation3d::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1739)
inline HRESULT TGAssembly::PathRelation3d::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1740)
inline VARIANT_BOOL TGAssembly::PathRelation3d::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IPathRelation3dAuto wrapper method implementations
//

#pragma implementation_key(1741)
inline IDispatchPtr TGAssembly::_IPathRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1742)
inline IDispatchPtr TGAssembly::_IPathRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1743)
inline HRESULT TGAssembly::_IPathRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1744)
inline long TGAssembly::_IPathRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1745)
inline enum TGFramework::ObjectType TGAssembly::_IPathRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1746)
inline HRESULT TGAssembly::_IPathRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1747)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::_IPathRelation3dAuto::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1748)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::_IPathRelation3dAuto::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    HRESULT _hr = get_DetailedStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1749)
inline TGAssembly::OccurrencePtr TGAssembly::_IPathRelation3dAuto::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1750)
inline TGAssembly::OccurrencePtr TGAssembly::_IPathRelation3dAuto::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1751)
inline VARIANT_BOOL TGAssembly::_IPathRelation3dAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1752)
inline void TGAssembly::_IPathRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress ) {
    HRESULT _hr = put_Suppress(bSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1753)
inline IDispatchPtr TGAssembly::_IPathRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1754)
inline VARIANT_BOOL TGAssembly::_IPathRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1755)
inline TGPart::SuppressVariablePtr TGAssembly::_IPathRelation3dAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1756)
inline TGPart::SuppressVariablePtr TGAssembly::_IPathRelation3dAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1757)
inline HRESULT TGAssembly::_IPathRelation3dAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1758)
inline VARIANT_BOOL TGAssembly::_IPathRelation3dAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface CoordinateSystemRelation3d wrapper method implementations
//

#pragma implementation_key(1759)
inline IDispatchPtr TGAssembly::CoordinateSystemRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1760)
inline IDispatchPtr TGAssembly::CoordinateSystemRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1761)
inline HRESULT TGAssembly::CoordinateSystemRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1762)
inline long TGAssembly::CoordinateSystemRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1763)
inline enum TGFramework::ObjectType TGAssembly::CoordinateSystemRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1764)
inline HRESULT TGAssembly::CoordinateSystemRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(1765)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::CoordinateSystemRelation3d::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1766)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::CoordinateSystemRelation3d::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1767)
inline TGAssembly::PartPtr TGAssembly::CoordinateSystemRelation3d::GetPart1 ( ) {
    struct Part * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PartPtr(_result, false);
}

#pragma implementation_key(1768)
inline TGAssembly::PartPtr TGAssembly::CoordinateSystemRelation3d::GetPart2 ( ) {
    struct Part * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PartPtr(_result, false);
}

#pragma implementation_key(1769)
inline HRESULT TGAssembly::CoordinateSystemRelation3d::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005", GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1770)
inline HRESULT TGAssembly::CoordinateSystemRelation3d::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005", GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1771)
inline VARIANT_BOOL TGAssembly::CoordinateSystemRelation3d::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1772)
inline void TGAssembly::CoordinateSystemRelation3d::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1773)
inline IDispatchPtr TGAssembly::CoordinateSystemRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1774)
inline IDispatchPtr TGAssembly::CoordinateSystemRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1775)
inline IDispatchPtr TGAssembly::CoordinateSystemRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1776)
inline VARIANT_BOOL TGAssembly::CoordinateSystemRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(1777)
inline TGPart::SuppressVariablePtr TGAssembly::CoordinateSystemRelation3d::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1778)
inline TGPart::SuppressVariablePtr TGAssembly::CoordinateSystemRelation3d::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1779)
inline HRESULT TGAssembly::CoordinateSystemRelation3d::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1780)
inline VARIANT_BOOL TGAssembly::CoordinateSystemRelation3d::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _ICoordinateSystemRelation3dAuto wrapper method implementations
//

#pragma implementation_key(1781)
inline IDispatchPtr TGAssembly::_ICoordinateSystemRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1782)
inline IDispatchPtr TGAssembly::_ICoordinateSystemRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1783)
inline HRESULT TGAssembly::_ICoordinateSystemRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1784)
inline long TGAssembly::_ICoordinateSystemRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1785)
inline enum TGFramework::ObjectType TGAssembly::_ICoordinateSystemRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1786)
inline HRESULT TGAssembly::_ICoordinateSystemRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1787)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::_ICoordinateSystemRelation3dAuto::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1788)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::_ICoordinateSystemRelation3dAuto::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    HRESULT _hr = get_DetailedStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1789)
inline TGAssembly::PartPtr TGAssembly::_ICoordinateSystemRelation3dAuto::GetPart1 ( ) {
    struct Part * _result = 0;
    HRESULT _hr = get_Part1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartPtr(_result, false);
}

#pragma implementation_key(1790)
inline TGAssembly::PartPtr TGAssembly::_ICoordinateSystemRelation3dAuto::GetPart2 ( ) {
    struct Part * _result = 0;
    HRESULT _hr = get_Part2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartPtr(_result, false);
}

#pragma implementation_key(1791)
inline HRESULT TGAssembly::_ICoordinateSystemRelation3dAuto::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetGeometry1(GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1792)
inline HRESULT TGAssembly::_ICoordinateSystemRelation3dAuto::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetGeometry2(GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1793)
inline VARIANT_BOOL TGAssembly::_ICoordinateSystemRelation3dAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1794)
inline void TGAssembly::_ICoordinateSystemRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress ) {
    HRESULT _hr = put_Suppress(bSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1795)
inline IDispatchPtr TGAssembly::_ICoordinateSystemRelation3dAuto::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement1(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1796)
inline IDispatchPtr TGAssembly::_ICoordinateSystemRelation3dAuto::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement2(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1797)
inline IDispatchPtr TGAssembly::_ICoordinateSystemRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1798)
inline VARIANT_BOOL TGAssembly::_ICoordinateSystemRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1799)
inline TGPart::SuppressVariablePtr TGAssembly::_ICoordinateSystemRelation3dAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1800)
inline TGPart::SuppressVariablePtr TGAssembly::_ICoordinateSystemRelation3dAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1801)
inline HRESULT TGAssembly::_ICoordinateSystemRelation3dAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1802)
inline VARIANT_BOOL TGAssembly::_ICoordinateSystemRelation3dAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface SlotRelation3d wrapper method implementations
//

#pragma implementation_key(1803)
inline IDispatchPtr TGAssembly::SlotRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1804)
inline IDispatchPtr TGAssembly::SlotRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1805)
inline HRESULT TGAssembly::SlotRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1806)
inline long TGAssembly::SlotRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1807)
inline enum TGFramework::ObjectType TGAssembly::SlotRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1808)
inline HRESULT TGAssembly::SlotRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(1809)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::SlotRelation3d::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1810)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::SlotRelation3d::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1811)
inline TGAssembly::OccurrencePtr TGAssembly::SlotRelation3d::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1812)
inline TGAssembly::OccurrencePtr TGAssembly::SlotRelation3d::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1813)
inline HRESULT TGAssembly::SlotRelation3d::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005", GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1814)
inline HRESULT TGAssembly::SlotRelation3d::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005", GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
}

#pragma implementation_key(1815)
inline VARIANT_BOOL TGAssembly::SlotRelation3d::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1816)
inline void TGAssembly::SlotRelation3d::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1817)
inline IDispatchPtr TGAssembly::SlotRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1818)
inline IDispatchPtr TGAssembly::SlotRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x400b", IsTopologyReference);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1819)
inline double TGAssembly::SlotRelation3d::GetOffsetValue ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1820)
inline void TGAssembly::SlotRelation3d::PutOffsetValue ( double _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1821)
inline enum TGAssembly::Relation3dSlotOffsetTypeConstants TGAssembly::SlotRelation3d::GetOffsetType ( ) {
    enum Relation3dSlotOffsetTypeConstants _result;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1822)
inline void TGAssembly::SlotRelation3d::PutOffsetType ( enum Relation3dSlotOffsetTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1823)
inline double TGAssembly::SlotRelation3d::GetSlotPathLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1824)
inline IDispatchPtr TGAssembly::SlotRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1825)
inline VARIANT_BOOL TGAssembly::SlotRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(1826)
inline TGPart::SuppressVariablePtr TGAssembly::SlotRelation3d::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1827)
inline TGPart::SuppressVariablePtr TGAssembly::SlotRelation3d::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1828)
inline HRESULT TGAssembly::SlotRelation3d::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1829)
inline VARIANT_BOOL TGAssembly::SlotRelation3d::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IRelations3dAuto wrapper method implementations
//

#pragma implementation_key(1830)
inline IDispatchPtr TGAssembly::_IRelations3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1831)
inline long TGAssembly::_IRelations3dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1832)
inline IDispatchPtr TGAssembly::_IRelations3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1833)
inline IDispatchPtr TGAssembly::_IRelations3dAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1834)
inline IUnknownPtr TGAssembly::_IRelations3dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1835)
inline IDispatchPtr TGAssembly::_IRelations3dAuto::AddGround ( struct Occurrence * Occurrence ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_AddGround(Occurrence, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1836)
inline TGAssembly::PlanarRelation3dPtr TGAssembly::_IRelations3dAuto::AddPlanar ( IDispatch * Plane1, IDispatch * Plane2, VARIANT_BOOL NormalsAligned, SAFEARRAY * * ConstrainingPoint1, SAFEARRAY * * ConstrainingPoint2 ) {
    struct PlanarRelation3d * _result = 0;
    HRESULT _hr = raw_AddPlanar(Plane1, Plane2, NormalsAligned, ConstrainingPoint1, ConstrainingPoint2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PlanarRelation3dPtr(_result, false);
}

#pragma implementation_key(1837)
inline TGAssembly::AxialRelation3dPtr TGAssembly::_IRelations3dAuto::AddAxial ( IDispatch * Axis1, IDispatch * Axis2, VARIANT_BOOL NormalsAligned ) {
    struct AxialRelation3d * _result = 0;
    HRESULT _hr = raw_AddAxial(Axis1, Axis2, NormalsAligned, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AxialRelation3dPtr(_result, false);
}

#pragma implementation_key(1838)
inline TGAssembly::PointRelation3dPtr TGAssembly::_IRelations3dAuto::AddPoint ( IDispatch * PointGeometry, enum Relation3dGeometryConstants PointKeyPoint, IDispatch * ConnectGeometry, const _variant_t & ConnectKeyPoint ) {
    struct PointRelation3d * _result = 0;
    HRESULT _hr = raw_AddPoint(PointGeometry, PointKeyPoint, ConnectGeometry, ConnectKeyPoint, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PointRelation3dPtr(_result, false);
}

#pragma implementation_key(1839)
inline TGAssembly::AngularRelation3dPtr TGAssembly::_IRelations3dAuto::AddAngular ( IDispatch * Element1, IDispatch * Element2, VARIANT_BOOL ReverseElement1Direction, VARIANT_BOOL ReverseElement2Direction, IDispatch * MeasureElement1, IDispatch * MeasureElement2, double Angle, VARIANT_BOOL MeasureToPositiveSide, VARIANT_BOOL MeasureFromPositiveSide, VARIANT_BOOL MeasureCCW ) {
    struct AngularRelation3d * _result = 0;
    HRESULT _hr = raw_AddAngular(Element1, Element2, ReverseElement1Direction, ReverseElement2Direction, MeasureElement1, MeasureElement2, Angle, MeasureToPositiveSide, MeasureFromPositiveSide, MeasureCCW, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AngularRelation3dPtr(_result, false);
}

#pragma implementation_key(1840)
inline TGAssembly::PointRelation3dPtr TGAssembly::_IRelations3dAuto::AddPointWithInferredGeometry ( IDispatch * PointGeometry, IDispatch * SketchPoint ) {
    struct PointRelation3d * _result = 0;
    HRESULT _hr = raw_AddPointWithInferredGeometry(PointGeometry, SketchPoint, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PointRelation3dPtr(_result, false);
}

#pragma implementation_key(1841)
inline TGAssembly::AxialRelation3dPtr TGAssembly::_IRelations3dAuto::AddAxialWithParallelOffset ( IDispatch * Axis1, IDispatch * Axis2, VARIANT_BOOL FixedOffset, double Offset ) {
    struct AxialRelation3d * _result = 0;
    HRESULT _hr = raw_AddAxialWithParallelOffset(Axis1, Axis2, FixedOffset, Offset, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AxialRelation3dPtr(_result, false);
}

#pragma implementation_key(1842)
inline TGAssembly::TangentRelation3dPtr TGAssembly::_IRelations3dAuto::AddTangent ( IDispatch * Element1, IDispatch * Element2, SAFEARRAY * * ConstrainingPoint1, SAFEARRAY * * ConstrainingPoint2, double Offset, VARIANT_BOOL IsHalfSpacePositive ) {
    struct TangentRelation3d * _result = 0;
    HRESULT _hr = raw_AddTangent(Element1, Element2, ConstrainingPoint1, ConstrainingPoint2, Offset, IsHalfSpacePositive, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TangentRelation3dPtr(_result, false);
}

#pragma implementation_key(1843)
inline TGAssembly::GearRelation3dPtr TGAssembly::_IRelations3dAuto::AddGear ( IDispatch * Element1, IDispatch * Element2, enum Relation3dGearTypeConstants GearType, enum Relation3dGearRatioTypeConstants RatioType, double GearRatio1, double GearRatio2, VARIANT_BOOL Flip ) {
    struct GearRelation3d * _result = 0;
    HRESULT _hr = raw_AddGear(Element1, Element2, GearType, RatioType, GearRatio1, GearRatio2, Flip, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GearRelation3dPtr(_result, false);
}

#pragma implementation_key(1844)
inline TGAssembly::CenterPlaneRelation3dPtr TGAssembly::_IRelations3dAuto::AddCenterPlane ( IDispatch * PlacementElement1, IDispatch * PlacementElement2, IDispatch * TargetElement1, IDispatch * TargetElement2, SAFEARRAY * * PlacementConstrainingPoint1, SAFEARRAY * * PlacementConstrainingPoint2, SAFEARRAY * * TargetConstrainingPoint1, SAFEARRAY * * TargetConstrainingPoint2 ) {
    struct CenterPlaneRelation3d * _result = 0;
    HRESULT _hr = raw_AddCenterPlane(PlacementElement1, PlacementElement2, TargetElement1, TargetElement2, PlacementConstrainingPoint1, PlacementConstrainingPoint2, TargetConstrainingPoint1, TargetConstrainingPoint2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterPlaneRelation3dPtr(_result, false);
}

#pragma implementation_key(1845)
inline TGAssembly::RigidSetRelation3dPtr TGAssembly::_IRelations3dAuto::AddRigidSet ( long OccurrenceCount, SAFEARRAY * * Occurrences ) {
    struct RigidSetRelation3d * _result = 0;
    HRESULT _hr = raw_AddRigidSet(OccurrenceCount, Occurrences, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RigidSetRelation3dPtr(_result, false);
}

#pragma implementation_key(1846)
inline TGAssembly::CamFollowerRelation3dPtr TGAssembly::_IRelations3dAuto::AddPlanarCam ( IDispatch * ConstrainingFollowerElement, SAFEARRAY * * ConstrainingCamFaces ) {
    struct CamFollowerRelation3d * _result = 0;
    HRESULT _hr = raw_AddPlanarCam(ConstrainingFollowerElement, ConstrainingCamFaces, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CamFollowerRelation3dPtr(_result, false);
}

#pragma implementation_key(1847)
inline TGAssembly::CamFollowerRelation3dPtr TGAssembly::_IRelations3dAuto::AddBarrelCam ( IDispatch * ConstrainingFollowerElement, SAFEARRAY * * ConstrainingCamEdges ) {
    struct CamFollowerRelation3d * _result = 0;
    HRESULT _hr = raw_AddBarrelCam(ConstrainingFollowerElement, ConstrainingCamEdges, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CamFollowerRelation3dPtr(_result, false);
}

#pragma implementation_key(1848)
inline TGAssembly::PathRelation3dPtr TGAssembly::_IRelations3dAuto::AddPath ( IDispatch * ConstrainingFollowerElement, SAFEARRAY * * ConstrainingCamEdges ) {
    struct PathRelation3d * _result = 0;
    HRESULT _hr = raw_AddPath(ConstrainingFollowerElement, ConstrainingCamEdges, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PathRelation3dPtr(_result, false);
}

#pragma implementation_key(1849)
inline TGAssembly::CoordinateSystemRelation3dPtr TGAssembly::_IRelations3dAuto::AddCoordinateSystem ( IDispatch * pCoordSystem1, IDispatch * pCoordSystem2 ) {
    struct CoordinateSystemRelation3d * _result = 0;
    HRESULT _hr = raw_AddCoordinateSystem(pCoordSystem1, pCoordSystem2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CoordinateSystemRelation3dPtr(_result, false);
}

#pragma implementation_key(1850)
inline TGAssembly::SlotRelation3dPtr TGAssembly::_IRelations3dAuto::AddSlot ( IDispatch * pSlotElement, IDispatch * pPinElement, enum Relation3dSlotOffsetTypeConstants eSlotOffsetType, double dOffset ) {
    struct SlotRelation3d * _result = 0;
    HRESULT _hr = raw_AddSlot(pSlotElement, pPinElement, eSlotOffsetType, dOffset, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SlotRelation3dPtr(_result, false);
}

//
// interface _ISlotRelation3dAuto_TG wrapper method implementations
//

#pragma implementation_key(1851)
inline IDispatchPtr TGAssembly::_ISlotRelation3dAuto_TG::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1852)
inline IDispatchPtr TGAssembly::_ISlotRelation3dAuto_TG::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1853)
inline HRESULT TGAssembly::_ISlotRelation3dAuto_TG::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1854)
inline long TGAssembly::_ISlotRelation3dAuto_TG::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1855)
inline enum TGFramework::ObjectType TGAssembly::_ISlotRelation3dAuto_TG::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1856)
inline HRESULT TGAssembly::_ISlotRelation3dAuto_TG::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1857)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::_ISlotRelation3dAuto_TG::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1858)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::_ISlotRelation3dAuto_TG::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    HRESULT _hr = get_DetailedStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1859)
inline TGAssembly::OccurrencePtr TGAssembly::_ISlotRelation3dAuto_TG::GetOccurrence1 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1860)
inline TGAssembly::OccurrencePtr TGAssembly::_ISlotRelation3dAuto_TG::GetOccurrence2 ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1861)
inline HRESULT TGAssembly::_ISlotRelation3dAuto_TG::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetGeometry1(GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1862)
inline HRESULT TGAssembly::_ISlotRelation3dAuto_TG::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ ) {
    HRESULT _hr = raw_GetGeometry2(GeometryType, PointX, PointY, PointZ, VectorX, VectorY, VectorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1863)
inline VARIANT_BOOL TGAssembly::_ISlotRelation3dAuto_TG::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1864)
inline void TGAssembly::_ISlotRelation3dAuto_TG::PutSuppress ( VARIANT_BOOL bSuppress ) {
    HRESULT _hr = put_Suppress(bSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1865)
inline IDispatchPtr TGAssembly::_ISlotRelation3dAuto_TG::GetElement1 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement1(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1866)
inline IDispatchPtr TGAssembly::_ISlotRelation3dAuto_TG::GetElement2 ( VARIANT_BOOL * IsTopologyReference ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetElement2(IsTopologyReference, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1867)
inline double TGAssembly::_ISlotRelation3dAuto_TG::GetOffsetValue ( ) {
    double _result = 0;
    HRESULT _hr = get_OffsetValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1868)
inline void TGAssembly::_ISlotRelation3dAuto_TG::PutOffsetValue ( double Offset ) {
    HRESULT _hr = put_OffsetValue(Offset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1869)
inline enum TGAssembly::Relation3dSlotOffsetTypeConstants TGAssembly::_ISlotRelation3dAuto_TG::GetOffsetType ( ) {
    enum Relation3dSlotOffsetTypeConstants _result;
    HRESULT _hr = get_OffsetType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1870)
inline void TGAssembly::_ISlotRelation3dAuto_TG::PutOffsetType ( enum Relation3dSlotOffsetTypeConstants eSlotOffsetType ) {
    HRESULT _hr = put_OffsetType(eSlotOffsetType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1871)
inline double TGAssembly::_ISlotRelation3dAuto_TG::GetSlotPathLength ( ) {
    double _result = 0;
    HRESULT _hr = get_SlotPathLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1872)
inline IDispatchPtr TGAssembly::_ISlotRelation3dAuto_TG::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1873)
inline VARIANT_BOOL TGAssembly::_ISlotRelation3dAuto_TG::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1874)
inline TGPart::SuppressVariablePtr TGAssembly::_ISlotRelation3dAuto_TG::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1875)
inline TGPart::SuppressVariablePtr TGAssembly::_ISlotRelation3dAuto_TG::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(1876)
inline HRESULT TGAssembly::_ISlotRelation3dAuto_TG::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1877)
inline VARIANT_BOOL TGAssembly::_ISlotRelation3dAuto_TG::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface PhysicalProperties wrapper method implementations
//

#pragma implementation_key(1878)
inline IDispatchPtr TGAssembly::PhysicalProperties::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1879)
inline IDispatchPtr TGAssembly::PhysicalProperties::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1880)
inline VARIANT_BOOL TGAssembly::PhysicalProperties::GetDisplayCenterOfMass ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1881)
inline void TGAssembly::PhysicalProperties::PutDisplayCenterOfMass ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1882)
inline VARIANT_BOOL TGAssembly::PhysicalProperties::GetDisplayCenterOfVolume ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1883)
inline void TGAssembly::PhysicalProperties::PutDisplayCenterOfVolume ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1884)
inline VARIANT_BOOL TGAssembly::PhysicalProperties::GetDisplayPrincipalAxes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1885)
inline void TGAssembly::PhysicalProperties::PutDisplayPrincipalAxes ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1886)
inline HRESULT TGAssembly::PhysicalProperties::WriteToFile ( _bstr_t FileName ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)FileName);
}

#pragma implementation_key(1887)
inline HRESULT TGAssembly::PhysicalProperties::GetAssemblyPhysicalProperties ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x400b\x400b", Mass, Volume, Area, CenterOfMass, CenterOfVolume, GlobalMoments, PrincipalAxis1, PrincipalAxis2, PrincipalAxis3, PrincipalMoments, RadiiOfGyration, IsSick, UpdateStatus);
}

#pragma implementation_key(1888)
inline HRESULT TGAssembly::PhysicalProperties::GetAssemblyPhysicalProperties1 ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus, double * OverrideMass ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x400b\x400b\x4005", Mass, Volume, Area, CenterOfMass, CenterOfVolume, GlobalMoments, PrincipalAxis1, PrincipalAxis2, PrincipalAxis3, PrincipalMoments, RadiiOfGyration, IsSick, UpdateStatus, OverrideMass);
}

#pragma implementation_key(1889)
inline HRESULT TGAssembly::PhysicalProperties::GetSelectSetPhysicalProperties ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005", Mass, Volume, Area, CenterOfMass, CenterOfVolume, GlobalMoments, PrincipalAxis1, PrincipalAxis2, PrincipalAxis3, PrincipalMoments, RadiiOfGyration);
}

#pragma implementation_key(1890)
inline VARIANT_BOOL TGAssembly::PhysicalProperties::GetIsUpToDate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1891)
inline HRESULT TGAssembly::PhysicalProperties::Update ( ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1892)
inline HRESULT TGAssembly::PhysicalProperties::GetAsmPhysicalPropsRelativeToCoordSystem ( IDispatch * CoordinateSystem, double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4005\x4005\x4005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x400b\x400b", CoordinateSystem, Mass, Volume, Area, CenterOfMass, CenterOfVolume, GlobalMoments, PrincipalAxis1, PrincipalAxis2, PrincipalAxis3, PrincipalMoments, RadiiOfGyration, IsSick, UpdateStatus);
}

#pragma implementation_key(1893)
inline HRESULT TGAssembly::PhysicalProperties::GetSelectSetPhysicalPropsRelativeToCoordSystem ( IDispatch * CoordinateSystem, double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4005\x4005\x4005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005", CoordinateSystem, Mass, Volume, Area, CenterOfMass, CenterOfVolume, GlobalMoments, PrincipalAxis1, PrincipalAxis2, PrincipalAxis3, PrincipalMoments, RadiiOfGyration);
}

#pragma implementation_key(1894)
inline VARIANT_BOOL TGAssembly::PhysicalProperties::GetUserDefinedPropertiesStatus ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1895)
inline void TGAssembly::PhysicalProperties::PutUserDefinedPropertiesStatus ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1896)
inline VARIANT_BOOL TGAssembly::PhysicalProperties::GetUpdateOnFileSaveStatus ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1897)
inline void TGAssembly::PhysicalProperties::PutUpdateOnFileSaveStatus ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1898)
inline HRESULT TGAssembly::PhysicalProperties::SetUserDefinedAssemblyPhysicalProperties ( double * Volume, double * Area, double * Mass, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * RadiiOfGyration, double * OverrideMass ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x4005", Volume, Area, Mass, CenterOfMass, CenterOfVolume, GlobalMoments, PrincipalMoments, PrincipalAxis1, PrincipalAxis2, PrincipalAxis3, RadiiOfGyration, OverrideMass);
}

#pragma implementation_key(1899)
inline VARIANT_BOOL TGAssembly::PhysicalProperties::GetUseQuantityOverrideMass ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1900)
inline void TGAssembly::PhysicalProperties::PutUseQuantityOverrideMass ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1901)
inline HRESULT TGAssembly::PhysicalProperties::UpdateV2 ( SAFEARRAY * * ParFileNamesWithoutDensity ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6008", ParFileNamesWithoutDensity);
}

#pragma implementation_key(1902)
inline HRESULT TGAssembly::PhysicalProperties::GetAssemblyPhysicalPropertiesInstantly ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus, SAFEARRAY * * ParFileNamesWithoutDensity ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x400b\x400b\x6008", Mass, Volume, Area, CenterOfMass, CenterOfVolume, GlobalMoments, PrincipalAxis1, PrincipalAxis2, PrincipalAxis3, PrincipalMoments, RadiiOfGyration, IsSick, UpdateStatus, ParFileNamesWithoutDensity);
}

#pragma implementation_key(1903)
inline HRESULT TGAssembly::PhysicalProperties::GetAssemblyPhysicalPropertiesWithOverrideMassInstantly ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus, SAFEARRAY * * ParFileNamesWithoutDensity, double * OverrideMass ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x400b\x400b\x6008\x4005", Mass, Volume, Area, CenterOfMass, CenterOfVolume, GlobalMoments, PrincipalAxis1, PrincipalAxis2, PrincipalAxis3, PrincipalMoments, RadiiOfGyration, IsSick, UpdateStatus, ParFileNamesWithoutDensity, OverrideMass);
}

//
// interface _IPhysicalPropertiesAuto wrapper method implementations
//

#pragma implementation_key(1904)
inline IDispatchPtr TGAssembly::_IPhysicalPropertiesAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1905)
inline IDispatchPtr TGAssembly::_IPhysicalPropertiesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1906)
inline VARIANT_BOOL TGAssembly::_IPhysicalPropertiesAuto::GetDisplayCenterOfMass ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayCenterOfMass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1907)
inline void TGAssembly::_IPhysicalPropertiesAuto::PutDisplayCenterOfMass ( VARIANT_BOOL Display ) {
    HRESULT _hr = put_DisplayCenterOfMass(Display);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1908)
inline VARIANT_BOOL TGAssembly::_IPhysicalPropertiesAuto::GetDisplayCenterOfVolume ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayCenterOfVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1909)
inline void TGAssembly::_IPhysicalPropertiesAuto::PutDisplayCenterOfVolume ( VARIANT_BOOL Display ) {
    HRESULT _hr = put_DisplayCenterOfVolume(Display);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1910)
inline VARIANT_BOOL TGAssembly::_IPhysicalPropertiesAuto::GetDisplayPrincipalAxes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayPrincipalAxes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1911)
inline void TGAssembly::_IPhysicalPropertiesAuto::PutDisplayPrincipalAxes ( VARIANT_BOOL Display ) {
    HRESULT _hr = put_DisplayPrincipalAxes(Display);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1912)
inline HRESULT TGAssembly::_IPhysicalPropertiesAuto::WriteToFile ( _bstr_t FileName ) {
    HRESULT _hr = raw_WriteToFile(FileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1913)
inline HRESULT TGAssembly::_IPhysicalPropertiesAuto::GetAssemblyPhysicalProperties ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus ) {
    HRESULT _hr = raw_GetAssemblyPhysicalProperties(Mass, Volume, Area, CenterOfMass, CenterOfVolume, GlobalMoments, PrincipalAxis1, PrincipalAxis2, PrincipalAxis3, PrincipalMoments, RadiiOfGyration, IsSick, UpdateStatus);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1914)
inline HRESULT TGAssembly::_IPhysicalPropertiesAuto::GetAssemblyPhysicalProperties1 ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus, double * OverrideMass ) {
    HRESULT _hr = raw_GetAssemblyPhysicalProperties1(Mass, Volume, Area, CenterOfMass, CenterOfVolume, GlobalMoments, PrincipalAxis1, PrincipalAxis2, PrincipalAxis3, PrincipalMoments, RadiiOfGyration, IsSick, UpdateStatus, OverrideMass);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1915)
inline HRESULT TGAssembly::_IPhysicalPropertiesAuto::GetSelectSetPhysicalProperties ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration ) {
    HRESULT _hr = raw_GetSelectSetPhysicalProperties(Mass, Volume, Area, CenterOfMass, CenterOfVolume, GlobalMoments, PrincipalAxis1, PrincipalAxis2, PrincipalAxis3, PrincipalMoments, RadiiOfGyration);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1916)
inline VARIANT_BOOL TGAssembly::_IPhysicalPropertiesAuto::GetIsUpToDate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsUpToDate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1917)
inline HRESULT TGAssembly::_IPhysicalPropertiesAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1918)
inline HRESULT TGAssembly::_IPhysicalPropertiesAuto::GetAsmPhysicalPropsRelativeToCoordSystem ( IDispatch * CoordinateSystem, double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus ) {
    HRESULT _hr = raw_GetAsmPhysicalPropsRelativeToCoordSystem(CoordinateSystem, Mass, Volume, Area, CenterOfMass, CenterOfVolume, GlobalMoments, PrincipalAxis1, PrincipalAxis2, PrincipalAxis3, PrincipalMoments, RadiiOfGyration, IsSick, UpdateStatus);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1919)
inline HRESULT TGAssembly::_IPhysicalPropertiesAuto::GetSelectSetPhysicalPropsRelativeToCoordSystem ( IDispatch * CoordinateSystem, double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration ) {
    HRESULT _hr = raw_GetSelectSetPhysicalPropsRelativeToCoordSystem(CoordinateSystem, Mass, Volume, Area, CenterOfMass, CenterOfVolume, GlobalMoments, PrincipalAxis1, PrincipalAxis2, PrincipalAxis3, PrincipalMoments, RadiiOfGyration);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1920)
inline VARIANT_BOOL TGAssembly::_IPhysicalPropertiesAuto::GetUserDefinedPropertiesStatus ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UserDefinedPropertiesStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1921)
inline void TGAssembly::_IPhysicalPropertiesAuto::PutUserDefinedPropertiesStatus ( VARIANT_BOOL Status ) {
    HRESULT _hr = put_UserDefinedPropertiesStatus(Status);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1922)
inline VARIANT_BOOL TGAssembly::_IPhysicalPropertiesAuto::GetUpdateOnFileSaveStatus ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UpdateOnFileSaveStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1923)
inline void TGAssembly::_IPhysicalPropertiesAuto::PutUpdateOnFileSaveStatus ( VARIANT_BOOL Status ) {
    HRESULT _hr = put_UpdateOnFileSaveStatus(Status);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1924)
inline HRESULT TGAssembly::_IPhysicalPropertiesAuto::SetUserDefinedAssemblyPhysicalProperties ( double * Volume, double * Area, double * Mass, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * RadiiOfGyration, double * OverrideMass ) {
    HRESULT _hr = raw_SetUserDefinedAssemblyPhysicalProperties(Volume, Area, Mass, CenterOfMass, CenterOfVolume, GlobalMoments, PrincipalMoments, PrincipalAxis1, PrincipalAxis2, PrincipalAxis3, RadiiOfGyration, OverrideMass);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1925)
inline VARIANT_BOOL TGAssembly::_IPhysicalPropertiesAuto::GetUseQuantityOverrideMass ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseQuantityOverrideMass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1926)
inline void TGAssembly::_IPhysicalPropertiesAuto::PutUseQuantityOverrideMass ( VARIANT_BOOL UseQuantityOverrideMass ) {
    HRESULT _hr = put_UseQuantityOverrideMass(UseQuantityOverrideMass);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1927)
inline HRESULT TGAssembly::_IPhysicalPropertiesAuto::UpdateV2 ( SAFEARRAY * * ParFileNamesWithoutDensity ) {
    HRESULT _hr = raw_UpdateV2(ParFileNamesWithoutDensity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1928)
inline HRESULT TGAssembly::_IPhysicalPropertiesAuto::GetAssemblyPhysicalPropertiesInstantly ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus, SAFEARRAY * * ParFileNamesWithoutDensity ) {
    HRESULT _hr = raw_GetAssemblyPhysicalPropertiesInstantly(Mass, Volume, Area, CenterOfMass, CenterOfVolume, GlobalMoments, PrincipalAxis1, PrincipalAxis2, PrincipalAxis3, PrincipalMoments, RadiiOfGyration, IsSick, UpdateStatus, ParFileNamesWithoutDensity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1929)
inline HRESULT TGAssembly::_IPhysicalPropertiesAuto::GetAssemblyPhysicalPropertiesWithOverrideMassInstantly ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus, SAFEARRAY * * ParFileNamesWithoutDensity, double * OverrideMass ) {
    HRESULT _hr = raw_GetAssemblyPhysicalPropertiesWithOverrideMassInstantly(Mass, Volume, Area, CenterOfMass, CenterOfVolume, GlobalMoments, PrincipalAxis1, PrincipalAxis2, PrincipalAxis3, PrincipalMoments, RadiiOfGyration, IsSick, UpdateStatus, ParFileNamesWithoutDensity, OverrideMass);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Occurrences wrapper method implementations
//

#pragma implementation_key(1930)
inline IDispatchPtr TGAssembly::Occurrences::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1931)
inline long TGAssembly::Occurrences::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1932)
inline IDispatchPtr TGAssembly::Occurrences::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1933)
inline TGAssembly::OccurrencePtr TGAssembly::Occurrences::Item ( const _variant_t & Index ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1934)
inline TGAssembly::OccurrencePtr TGAssembly::Occurrences::AddByFilename ( _bstr_t OccurrenceFileName, const _variant_t & UseSimplifiedPart ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x080c", (BSTR)OccurrenceFileName, &UseSimplifiedPart);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1935)
inline TGAssembly::OccurrencePtr TGAssembly::Occurrences::AddWithTransform ( _bstr_t OccurrenceFileName, double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005\x0005\x0005", (BSTR)OccurrenceFileName, OriginX, OriginY, OriginZ, AngleX, AngleY, AngleZ);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1936)
inline TGAssembly::OccurrencePtr TGAssembly::Occurrences::AddWithMatrix ( _bstr_t OccurrenceFileName, SAFEARRAY * * Matrix ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x6005", (BSTR)OccurrenceFileName, Matrix);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1937)
inline TGAssembly::OccurrencePtr TGAssembly::Occurrences::AddTube ( SAFEARRAY * * TubeSegments, BSTR * PartFileName, const _variant_t & TemplateFileName, const _variant_t & IsSolid, const _variant_t & Material, const _variant_t & BendRadius, const _variant_t & OuterDiameter, const _variant_t & MinimumFlatLength, const _variant_t & WallThickness, const _variant_t & ExtendStart, const _variant_t & ExtendEnd, const _variant_t & AddConnectRelations, const _variant_t & StartEndTreatmentType, const _variant_t & StartEndTreatmentInsideDiameter, const _variant_t & StartEndTreatmentOutsideDiameter, const _variant_t & StartEndTreatmentRadius, const _variant_t & StartEndTreatmentDepth, const _variant_t & StartEndTreatmentAngle, const _variant_t & EndEndTreatmentType, const _variant_t & EndEndTreatmentInsideDiameter, const _variant_t & EndEndTreatmentOutsideDiameter, const _variant_t & EndEndTreatmentRadius, const _variant_t & EndEndTreatmentDepth, const _variant_t & EndEndTreatmentAngle ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x6009\x4008\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", TubeSegments, PartFileName, &TemplateFileName, &IsSolid, &Material, &BendRadius, &OuterDiameter, &MinimumFlatLength, &WallThickness, &ExtendStart, &ExtendEnd, &AddConnectRelations, &StartEndTreatmentType, &StartEndTreatmentInsideDiameter, &StartEndTreatmentOutsideDiameter, &StartEndTreatmentRadius, &StartEndTreatmentDepth, &StartEndTreatmentAngle, &EndEndTreatmentType, &EndEndTreatmentInsideDiameter, &EndEndTreatmentOutsideDiameter, &EndEndTreatmentRadius, &EndEndTreatmentDepth, &EndEndTreatmentAngle);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1938)
inline TGAssembly::OccurrencePtr TGAssembly::Occurrences::AddTubeBIDM ( SAFEARRAY * * TubeSegments, _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t RevisionID, _bstr_t Title, BSTR * NewFileName, const _variant_t & TemplateFileName, const _variant_t & IsSolid, const _variant_t & Material, const _variant_t & BendRadius, const _variant_t & OuterDiameter, const _variant_t & MinimumFlatLength, const _variant_t & WallThickness, const _variant_t & ExtendStart, const _variant_t & ExtendEnd, const _variant_t & AddConnectRelations, const _variant_t & StartEndTreatmentType, const _variant_t & StartEndTreatmentInsideDiameter, const _variant_t & StartEndTreatmentOutsideDiameter, const _variant_t & StartEndTreatmentRadius, const _variant_t & StartEndTreatmentDepth, const _variant_t & StartEndTreatmentAngle, const _variant_t & EndEndTreatmentType, const _variant_t & EndEndTreatmentInsideDiameter, const _variant_t & EndEndTreatmentOutsideDiameter, const _variant_t & EndEndTreatmentRadius, const _variant_t & EndEndTreatmentDepth, const _variant_t & EndEndTreatmentAngle ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x6009\x0008\x0008\x0008\x0008\x4008\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", TubeSegments, (BSTR)FilePath, (BSTR)DocumentNumber, (BSTR)RevisionID, (BSTR)Title, NewFileName, &TemplateFileName, &IsSolid, &Material, &BendRadius, &OuterDiameter, &MinimumFlatLength, &WallThickness, &ExtendStart, &ExtendEnd, &AddConnectRelations, &StartEndTreatmentType, &StartEndTreatmentInsideDiameter, &StartEndTreatmentOutsideDiameter, &StartEndTreatmentRadius, &StartEndTreatmentDepth, &StartEndTreatmentAngle, &EndEndTreatmentType, &EndEndTreatmentInsideDiameter, &EndEndTreatmentOutsideDiameter, &EndEndTreatmentRadius, &EndEndTreatmentDepth, &EndEndTreatmentAngle);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1939)
inline TGAssembly::OccurrencePtr TGAssembly::Occurrences::AddFamilyByFilename ( _bstr_t OccurrenceFileName, _bstr_t MemberName ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)OccurrenceFileName, (BSTR)MemberName);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1940)
inline TGAssembly::OccurrencePtr TGAssembly::Occurrences::AddFamilyWithTransform ( _bstr_t OccurrenceFileName, double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ, _bstr_t MemberName ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005\x0005\x0005\x0008", (BSTR)OccurrenceFileName, OriginX, OriginY, OriginZ, AngleX, AngleY, AngleZ, (BSTR)MemberName);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1941)
inline TGAssembly::OccurrencePtr TGAssembly::Occurrences::AddFamilyWithMatrix ( _bstr_t OccurrenceFileName, SAFEARRAY * * Matrix, _bstr_t MemberName ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x6005\x0008", (BSTR)OccurrenceFileName, Matrix, (BSTR)MemberName);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1942)
inline TGAssembly::OccurrencePtr TGAssembly::Occurrences::AddByTemplate ( _bstr_t OccurrenceFileName, const _variant_t & TemplateFileName ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x080c", (BSTR)OccurrenceFileName, &TemplateFileName);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1943)
inline HRESULT TGAssembly::Occurrences::ReorderOccurrence ( IDispatch * OccurrenceToReorder, IDispatch * TargetOccurrence, VARIANT_BOOL AfterTarget ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x000b", OccurrenceToReorder, TargetOccurrence, AfterTarget);
}

#pragma implementation_key(1944)
inline enum TGFramework::ObjectType TGAssembly::Occurrences::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1945)
inline IDispatchPtr TGAssembly::Occurrences::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1946)
inline VARIANT_BOOL TGAssembly::Occurrences::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(1947)
inline TGAssembly::OccurrencePtr TGAssembly::Occurrences::AddAsAdjustablePart ( _bstr_t OccurrenceFileName ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)OccurrenceFileName);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1948)
inline TGAssembly::OccurrencePtr TGAssembly::Occurrences::GetOccurrence ( long ID ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", ID);
    return OccurrencePtr(_result, false);
}

//
// interface _IOccurrencesAuto wrapper method implementations
//

#pragma implementation_key(1949)
inline IDispatchPtr TGAssembly::_IOccurrencesAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1950)
inline long TGAssembly::_IOccurrencesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1951)
inline IDispatchPtr TGAssembly::_IOccurrencesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1952)
inline TGAssembly::OccurrencePtr TGAssembly::_IOccurrencesAuto::Item ( const _variant_t & Index ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1953)
inline IUnknownPtr TGAssembly::_IOccurrencesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1954)
inline TGAssembly::OccurrencePtr TGAssembly::_IOccurrencesAuto::AddByFilename ( _bstr_t OccurrenceFileName, const _variant_t & UseSimplifiedPart ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = raw_AddByFilename(OccurrenceFileName, UseSimplifiedPart, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1955)
inline TGAssembly::OccurrencePtr TGAssembly::_IOccurrencesAuto::AddWithTransform ( _bstr_t OccurrenceFileName, double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = raw_AddWithTransform(OccurrenceFileName, OriginX, OriginY, OriginZ, AngleX, AngleY, AngleZ, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1956)
inline TGAssembly::OccurrencePtr TGAssembly::_IOccurrencesAuto::AddWithMatrix ( _bstr_t OccurrenceFileName, SAFEARRAY * * Matrix ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = raw_AddWithMatrix(OccurrenceFileName, Matrix, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1957)
inline TGAssembly::OccurrencePtr TGAssembly::_IOccurrencesAuto::AddTube ( SAFEARRAY * * TubeSegments, BSTR * PartFileName, const _variant_t & TemplateFileName, const _variant_t & IsSolid, const _variant_t & Material, const _variant_t & BendRadius, const _variant_t & OuterDiameter, const _variant_t & MinimumFlatLength, const _variant_t & WallThickness, const _variant_t & ExtendStart, const _variant_t & ExtendEnd, const _variant_t & AddConnectRelations, const _variant_t & StartEndTreatmentType, const _variant_t & StartEndTreatmentInsideDiameter, const _variant_t & StartEndTreatmentOutsideDiameter, const _variant_t & StartEndTreatmentRadius, const _variant_t & StartEndTreatmentDepth, const _variant_t & StartEndTreatmentAngle, const _variant_t & EndEndTreatmentType, const _variant_t & EndEndTreatmentInsideDiameter, const _variant_t & EndEndTreatmentOutsideDiameter, const _variant_t & EndEndTreatmentRadius, const _variant_t & EndEndTreatmentDepth, const _variant_t & EndEndTreatmentAngle ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = raw_AddTube(TubeSegments, PartFileName, TemplateFileName, IsSolid, Material, BendRadius, OuterDiameter, MinimumFlatLength, WallThickness, ExtendStart, ExtendEnd, AddConnectRelations, StartEndTreatmentType, StartEndTreatmentInsideDiameter, StartEndTreatmentOutsideDiameter, StartEndTreatmentRadius, StartEndTreatmentDepth, StartEndTreatmentAngle, EndEndTreatmentType, EndEndTreatmentInsideDiameter, EndEndTreatmentOutsideDiameter, EndEndTreatmentRadius, EndEndTreatmentDepth, EndEndTreatmentAngle, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1958)
inline TGAssembly::OccurrencePtr TGAssembly::_IOccurrencesAuto::AddTubeBIDM ( SAFEARRAY * * TubeSegments, _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t RevisionID, _bstr_t Title, BSTR * NewFileName, const _variant_t & TemplateFileName, const _variant_t & IsSolid, const _variant_t & Material, const _variant_t & BendRadius, const _variant_t & OuterDiameter, const _variant_t & MinimumFlatLength, const _variant_t & WallThickness, const _variant_t & ExtendStart, const _variant_t & ExtendEnd, const _variant_t & AddConnectRelations, const _variant_t & StartEndTreatmentType, const _variant_t & StartEndTreatmentInsideDiameter, const _variant_t & StartEndTreatmentOutsideDiameter, const _variant_t & StartEndTreatmentRadius, const _variant_t & StartEndTreatmentDepth, const _variant_t & StartEndTreatmentAngle, const _variant_t & EndEndTreatmentType, const _variant_t & EndEndTreatmentInsideDiameter, const _variant_t & EndEndTreatmentOutsideDiameter, const _variant_t & EndEndTreatmentRadius, const _variant_t & EndEndTreatmentDepth, const _variant_t & EndEndTreatmentAngle ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = raw_AddTubeBIDM(TubeSegments, FilePath, DocumentNumber, RevisionID, Title, NewFileName, TemplateFileName, IsSolid, Material, BendRadius, OuterDiameter, MinimumFlatLength, WallThickness, ExtendStart, ExtendEnd, AddConnectRelations, StartEndTreatmentType, StartEndTreatmentInsideDiameter, StartEndTreatmentOutsideDiameter, StartEndTreatmentRadius, StartEndTreatmentDepth, StartEndTreatmentAngle, EndEndTreatmentType, EndEndTreatmentInsideDiameter, EndEndTreatmentOutsideDiameter, EndEndTreatmentRadius, EndEndTreatmentDepth, EndEndTreatmentAngle, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1959)
inline TGAssembly::OccurrencePtr TGAssembly::_IOccurrencesAuto::AddFamilyByFilename ( _bstr_t OccurrenceFileName, _bstr_t MemberName ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = raw_AddFamilyByFilename(OccurrenceFileName, MemberName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1960)
inline TGAssembly::OccurrencePtr TGAssembly::_IOccurrencesAuto::AddFamilyWithTransform ( _bstr_t OccurrenceFileName, double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ, _bstr_t MemberName ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = raw_AddFamilyWithTransform(OccurrenceFileName, OriginX, OriginY, OriginZ, AngleX, AngleY, AngleZ, MemberName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1961)
inline TGAssembly::OccurrencePtr TGAssembly::_IOccurrencesAuto::AddFamilyWithMatrix ( _bstr_t OccurrenceFileName, SAFEARRAY * * Matrix, _bstr_t MemberName ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = raw_AddFamilyWithMatrix(OccurrenceFileName, Matrix, MemberName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1962)
inline TGAssembly::OccurrencePtr TGAssembly::_IOccurrencesAuto::AddByTemplate ( _bstr_t OccurrenceFileName, const _variant_t & TemplateFileName ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = raw_AddByTemplate(OccurrenceFileName, TemplateFileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1963)
inline HRESULT TGAssembly::_IOccurrencesAuto::ReorderOccurrence ( IDispatch * OccurrenceToReorder, IDispatch * TargetOccurrence, VARIANT_BOOL AfterTarget ) {
    HRESULT _hr = raw_ReorderOccurrence(OccurrenceToReorder, TargetOccurrence, AfterTarget);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1964)
inline enum TGFramework::ObjectType TGAssembly::_IOccurrencesAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1965)
inline IDispatchPtr TGAssembly::_IOccurrencesAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1966)
inline VARIANT_BOOL TGAssembly::_IOccurrencesAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1967)
inline TGAssembly::OccurrencePtr TGAssembly::_IOccurrencesAuto::AddAsAdjustablePart ( _bstr_t OccurrenceFileName ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = raw_AddAsAdjustablePart(OccurrenceFileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(1968)
inline TGAssembly::OccurrencePtr TGAssembly::_IOccurrencesAuto::GetOccurrence ( long ID ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = raw_GetOccurrence(ID, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

//
// dispinterface AsmRefPlanes wrapper method implementations
//

#pragma implementation_key(1969)
inline TGFramework::ApplicationPtr TGAssembly::AsmRefPlanes::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1970)
inline IDispatchPtr TGAssembly::AsmRefPlanes::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1971)
inline long TGAssembly::AsmRefPlanes::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1972)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::Item ( const _variant_t & Index ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(1973)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::AddParallelByDistance ( IDispatch * ParentPlane, double Distance, const _variant_t & NormalSide, const _variant_t & Pivot, const _variant_t & PivotOrigin, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x080c\x080c\x080c\x080c", ParentPlane, Distance, &NormalSide, &Pivot, &PivotOrigin, &Local);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(1974)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::AddMiddlePlaneByTwoPlanes ( IDispatch * ParentPlane, IDispatch * ParentPlaneTwo, const _variant_t & PivotParallel, const _variant_t & PivotOriginParallel, enum TGPart::ReferenceElementConstants PivotOriginAngular ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0x2710, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x000c\x000c\x0003", ParentPlane, ParentPlaneTwo, &PivotParallel, &PivotOriginParallel, PivotOriginAngular);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(1975)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::AddAngularByAngle ( IDispatch * ParentPlane, double Angle, IDispatch * Pivot, enum TGPart::ReferenceElementConstants PivotOrigin, const _variant_t & NormalSide, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0009\x0003\x080c\x080c", ParentPlane, Angle, Pivot, PivotOrigin, &NormalSide, &Local);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(1976)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::AddBy3Points ( IDispatch * RootPoint, IDispatch * SecondXAxisPoint, IDispatch * ThirdPoint ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0009", RootPoint, SecondXAxisPoint, ThirdPoint);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(1977)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::AddNormalToCurveAtDistanceAlongCurve ( IDispatch * Parent, IDispatch * OrientationPlane, double Distance, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants distanceOrigin ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0005\x0005\x0003\x0003", Parent, OrientationPlane, Distance, XAxisRotation, normalOrientation, distanceOrigin);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(1978)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::AddNormalToCurveAtArcLengthRatio ( IDispatch * Parent, IDispatch * OrientationPlane, double ArcLengthRatio, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants arcLengthRatioOrigin ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0005\x0005\x0003\x0003", Parent, OrientationPlane, ArcLengthRatio, XAxisRotation, normalOrientation, arcLengthRatioOrigin);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(1979)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::AddNormalToCurveAtKeyPoint ( IDispatch * Parent, IDispatch * OrientationPlane, IDispatch * Keypoint, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants selectedCurveEnd ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0009\x0005\x0003\x0003", Parent, OrientationPlane, Keypoint, XAxisRotation, normalOrientation, selectedCurveEnd);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(1980)
inline VARIANT_BOOL TGAssembly::AsmRefPlanes::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1981)
inline void TGAssembly::AsmRefPlanes::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1982)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::AddTangentToCylinderOrConeAtAngleEx ( IDispatch * Face, IDispatch * ParentPlane, double AngleOfRotation, double XAxisAngle, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::ReferenceElementConstants normalOrientation, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0005\x0005\x0003\x0003\x080c", Face, ParentPlane, AngleOfRotation, XAxisAngle, ExtentSide, normalOrientation, &Local);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(1983)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::AddTangentToCylinderOrConeAtKeyPointEx ( IDispatch * Face, IDispatch * ParentPlane, IDispatch * Keypoint, enum TGFramework::KeyPointType KeyPointTypeConstant, double XAxisAngle, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::ReferenceElementConstants normalOrientation, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0009\x0003\x0005\x0003\x0003\x080c", Face, ParentPlane, Keypoint, KeyPointTypeConstant, XAxisAngle, ExtentSide, normalOrientation, &Local);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(1984)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::AddTangentToCurvedSurfaceAtKeyPointEx ( IDispatch * Face, IDispatch * ParentPlane, IDispatch * Keypoint, enum TGFramework::KeyPointType KeyPointTypeConstant, double XAxisAngle, enum TGPart::ReferenceElementConstants normalOrientation, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0009\x0003\x0005\x0003\x080c", Face, ParentPlane, Keypoint, KeyPointTypeConstant, XAxisAngle, normalOrientation, &Local);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(1985)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::AddParallelByDistanceEx ( IDispatch * ParentPlane, double Distance, const _variant_t & NormalSide, const _variant_t & Pivot, const _variant_t & PivotOrigin, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x080c\x080c\x080c\x080c", ParentPlane, Distance, &NormalSide, &Pivot, &PivotOrigin, &Local);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(1986)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::AddAngularByAngleEx ( IDispatch * ParentPlane, double Angle, IDispatch * Pivot, enum TGPart::ReferenceElementConstants PivotOrigin, const _variant_t & NormalSide, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0009\x0003\x080c\x080c", ParentPlane, Angle, Pivot, PivotOrigin, &NormalSide, &Local);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(1987)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::AddBy3PointsEx ( IDispatch * RootPoint, IDispatch * SecondXAxisPoint, IDispatch * ThirdPoint, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0009\x080c", RootPoint, SecondXAxisPoint, ThirdPoint, &Local);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(1988)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::AddNormalToCurveAtDistanceAlongCurveEx ( IDispatch * Parent, IDispatch * OrientationPlane, double Distance, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants distanceOrigin, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0005\x0005\x0003\x0003\x080c", Parent, OrientationPlane, Distance, XAxisRotation, normalOrientation, distanceOrigin, &Local);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(1989)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::AddNormalToCurveAtArcLengthRatioEx ( IDispatch * Parent, IDispatch * OrientationPlane, double ArcLengthRatio, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants arcLengthRatioOrigin, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0005\x0005\x0003\x0003\x080c", Parent, OrientationPlane, ArcLengthRatio, XAxisRotation, normalOrientation, arcLengthRatioOrigin, &Local);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(1990)
inline TGAssembly::AsmRefPlanePtr TGAssembly::AsmRefPlanes::AddNormalToCurveAtKeyPointEx ( IDispatch * Parent, IDispatch * OrientationPlane, IDispatch * Keypoint, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants selectedCurveEnd, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0009\x0005\x0003\x0003\x080c", Parent, OrientationPlane, Keypoint, XAxisRotation, normalOrientation, selectedCurveEnd, &Local);
    return AsmRefPlanePtr(_result, false);
}

//
// dispinterface AsmRefPlane wrapper method implementations
//

#pragma implementation_key(1991)
inline TGFramework::ApplicationPtr TGAssembly::AsmRefPlane::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1992)
inline IDispatchPtr TGAssembly::AsmRefPlane::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1993)
inline _bstr_t TGAssembly::AsmRefPlane::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1994)
inline void TGAssembly::AsmRefPlane::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1995)
inline HRESULT TGAssembly::AsmRefPlane::GetNormal ( SAFEARRAY * * Normal ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", Normal);
}

#pragma implementation_key(1996)
inline HRESULT TGAssembly::AsmRefPlane::GetRootPoint ( SAFEARRAY * * RootPoint ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", RootPoint);
}

#pragma implementation_key(1997)
inline HRESULT TGAssembly::AsmRefPlane::GetReferenceDirection ( SAFEARRAY * * RefDir ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", RefDir);
}

#pragma implementation_key(1998)
inline VARIANT_BOOL TGAssembly::AsmRefPlane::GetGlobal ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1999)
inline void TGAssembly::AsmRefPlane::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2000)
inline VARIANT_BOOL TGAssembly::AsmRefPlane::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2001)
inline enum TGFramework::ObjectType TGAssembly::AsmRefPlane::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2002)
inline HRESULT TGAssembly::AsmRefPlane::ResizeRefPlaneByDirDist ( VARIANT_BOOL bAlongX, int idx, double dist ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x0003\x0005", bAlongX, idx, dist);
}

#pragma implementation_key(2003)
inline HRESULT TGAssembly::AsmRefPlane::AutoResizeRefPlane ( ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2004)
inline enum TGPart::FeatureStatusConstants TGAssembly::AsmRefPlane::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

#pragma implementation_key(2005)
inline IDispatchPtr TGAssembly::AsmRefPlane::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2006)
inline VARIANT_BOOL TGAssembly::AsmRefPlane::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2007)
inline HRESULT TGAssembly::AsmRefPlane::Delete ( ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2008)
inline SAFEARRAY * TGAssembly::AsmRefPlane::GetParentRelations ( ) {
    SAFEARRAY * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_ARRAY|VT_DISPATCH, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2009)
inline double TGAssembly::AsmRefPlane::GetTangentAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2010)
inline void TGAssembly::AsmRefPlane::PutTangentAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

//
// interface _IAsmRefPlanesAuto wrapper method implementations
//

#pragma implementation_key(2011)
inline TGFramework::ApplicationPtr TGAssembly::_IAsmRefPlanesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2012)
inline IDispatchPtr TGAssembly::_IAsmRefPlanesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2013)
inline long TGAssembly::_IAsmRefPlanesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2014)
inline IUnknownPtr TGAssembly::_IAsmRefPlanesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2015)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::Item ( const _variant_t & Index ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2016)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::AddParallelByDistance ( IDispatch * ParentPlane, double Distance, const _variant_t & NormalSide, const _variant_t & Pivot, const _variant_t & PivotOrigin, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_AddParallelByDistance(ParentPlane, Distance, NormalSide, Pivot, PivotOrigin, Local, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2017)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::AddMiddlePlaneByTwoPlanes ( IDispatch * ParentPlane, IDispatch * ParentPlaneTwo, const _variant_t & PivotParallel, const _variant_t & PivotOriginParallel, enum TGPart::ReferenceElementConstants PivotOriginAngular ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_AddMiddlePlaneByTwoPlanes(ParentPlane, ParentPlaneTwo, PivotParallel, PivotOriginParallel, PivotOriginAngular, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2018)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::AddAngularByAngle ( IDispatch * ParentPlane, double Angle, IDispatch * Pivot, enum TGPart::ReferenceElementConstants PivotOrigin, const _variant_t & NormalSide, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_AddAngularByAngle(ParentPlane, Angle, Pivot, PivotOrigin, NormalSide, Local, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2019)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::AddBy3Points ( IDispatch * RootPoint, IDispatch * SecondXAxisPoint, IDispatch * ThirdPoint ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_AddBy3Points(RootPoint, SecondXAxisPoint, ThirdPoint, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2020)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::AddNormalToCurveAtDistanceAlongCurve ( IDispatch * Parent, IDispatch * OrientationPlane, double Distance, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants distanceOrigin ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_AddNormalToCurveAtDistanceAlongCurve(Parent, OrientationPlane, Distance, XAxisRotation, normalOrientation, distanceOrigin, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2021)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::AddNormalToCurveAtArcLengthRatio ( IDispatch * Parent, IDispatch * OrientationPlane, double ArcLengthRatio, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants arcLengthRatioOrigin ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_AddNormalToCurveAtArcLengthRatio(Parent, OrientationPlane, ArcLengthRatio, XAxisRotation, normalOrientation, arcLengthRatioOrigin, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2022)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::AddNormalToCurveAtKeyPoint ( IDispatch * Parent, IDispatch * OrientationPlane, IDispatch * Keypoint, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants selectedCurveEnd ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_AddNormalToCurveAtKeyPoint(Parent, OrientationPlane, Keypoint, XAxisRotation, normalOrientation, selectedCurveEnd, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2023)
inline VARIANT_BOOL TGAssembly::_IAsmRefPlanesAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2024)
inline void TGAssembly::_IAsmRefPlanesAuto::PutVisible ( VARIANT_BOOL pbVisible ) {
    HRESULT _hr = put_Visible(pbVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2025)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::AddTangentToCylinderOrConeAtAngleEx ( IDispatch * Face, IDispatch * ParentPlane, double AngleOfRotation, double XAxisAngle, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::ReferenceElementConstants normalOrientation, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_AddTangentToCylinderOrConeAtAngleEx(Face, ParentPlane, AngleOfRotation, XAxisAngle, ExtentSide, normalOrientation, Local, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2026)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::AddTangentToCylinderOrConeAtKeyPointEx ( IDispatch * Face, IDispatch * ParentPlane, IDispatch * Keypoint, enum TGFramework::KeyPointType KeyPointTypeConstant, double XAxisAngle, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::ReferenceElementConstants normalOrientation, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_AddTangentToCylinderOrConeAtKeyPointEx(Face, ParentPlane, Keypoint, KeyPointTypeConstant, XAxisAngle, ExtentSide, normalOrientation, Local, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2027)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::AddTangentToCurvedSurfaceAtKeyPointEx ( IDispatch * Face, IDispatch * ParentPlane, IDispatch * Keypoint, enum TGFramework::KeyPointType KeyPointTypeConstant, double XAxisAngle, enum TGPart::ReferenceElementConstants normalOrientation, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_AddTangentToCurvedSurfaceAtKeyPointEx(Face, ParentPlane, Keypoint, KeyPointTypeConstant, XAxisAngle, normalOrientation, Local, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2028)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::AddParallelByDistanceEx ( IDispatch * ParentPlane, double Distance, const _variant_t & NormalSide, const _variant_t & Pivot, const _variant_t & PivotOrigin, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_AddParallelByDistanceEx(ParentPlane, Distance, NormalSide, Pivot, PivotOrigin, Local, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2029)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::AddAngularByAngleEx ( IDispatch * ParentPlane, double Angle, IDispatch * Pivot, enum TGPart::ReferenceElementConstants PivotOrigin, const _variant_t & NormalSide, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_AddAngularByAngleEx(ParentPlane, Angle, Pivot, PivotOrigin, NormalSide, Local, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2030)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::AddBy3PointsEx ( IDispatch * RootPoint, IDispatch * SecondXAxisPoint, IDispatch * ThirdPoint, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_AddBy3PointsEx(RootPoint, SecondXAxisPoint, ThirdPoint, Local, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2031)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::AddNormalToCurveAtDistanceAlongCurveEx ( IDispatch * Parent, IDispatch * OrientationPlane, double Distance, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants distanceOrigin, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_AddNormalToCurveAtDistanceAlongCurveEx(Parent, OrientationPlane, Distance, XAxisRotation, normalOrientation, distanceOrigin, Local, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2032)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::AddNormalToCurveAtArcLengthRatioEx ( IDispatch * Parent, IDispatch * OrientationPlane, double ArcLengthRatio, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants arcLengthRatioOrigin, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_AddNormalToCurveAtArcLengthRatioEx(Parent, OrientationPlane, ArcLengthRatio, XAxisRotation, normalOrientation, arcLengthRatioOrigin, Local, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2033)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IAsmRefPlanesAuto::AddNormalToCurveAtKeyPointEx ( IDispatch * Parent, IDispatch * OrientationPlane, IDispatch * Keypoint, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants selectedCurveEnd, const _variant_t & Local ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = raw_AddNormalToCurveAtKeyPointEx(Parent, OrientationPlane, Keypoint, XAxisRotation, normalOrientation, selectedCurveEnd, Local, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

//
// interface _IAsmRefPlaneAuto wrapper method implementations
//

#pragma implementation_key(2034)
inline TGFramework::ApplicationPtr TGAssembly::_IAsmRefPlaneAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2035)
inline IDispatchPtr TGAssembly::_IAsmRefPlaneAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2036)
inline _bstr_t TGAssembly::_IAsmRefPlaneAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2037)
inline void TGAssembly::_IAsmRefPlaneAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2038)
inline HRESULT TGAssembly::_IAsmRefPlaneAuto::GetNormal ( SAFEARRAY * * Normal ) {
    HRESULT _hr = raw_GetNormal(Normal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2039)
inline HRESULT TGAssembly::_IAsmRefPlaneAuto::GetRootPoint ( SAFEARRAY * * RootPoint ) {
    HRESULT _hr = raw_GetRootPoint(RootPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2040)
inline HRESULT TGAssembly::_IAsmRefPlaneAuto::GetReferenceDirection ( SAFEARRAY * * RefDir ) {
    HRESULT _hr = raw_GetReferenceDirection(RefDir);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2041)
inline VARIANT_BOOL TGAssembly::_IAsmRefPlaneAuto::GetGlobal ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Global(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2042)
inline void TGAssembly::_IAsmRefPlaneAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2043)
inline VARIANT_BOOL TGAssembly::_IAsmRefPlaneAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2044)
inline enum TGFramework::ObjectType TGAssembly::_IAsmRefPlaneAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2045)
inline HRESULT TGAssembly::_IAsmRefPlaneAuto::ResizeRefPlaneByDirDist ( VARIANT_BOOL bAlongX, int idx, double dist ) {
    HRESULT _hr = raw_ResizeRefPlaneByDirDist(bAlongX, idx, dist);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2046)
inline HRESULT TGAssembly::_IAsmRefPlaneAuto::AutoResizeRefPlane ( ) {
    HRESULT _hr = raw_AutoResizeRefPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2047)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAsmRefPlaneAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2048)
inline IDispatchPtr TGAssembly::_IAsmRefPlaneAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2049)
inline VARIANT_BOOL TGAssembly::_IAsmRefPlaneAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2050)
inline HRESULT TGAssembly::_IAsmRefPlaneAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2051)
inline SAFEARRAY * TGAssembly::_IAsmRefPlaneAuto::GetParentRelations ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_ParentRelations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2052)
inline double TGAssembly::_IAsmRefPlaneAuto::GetTangentAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_TangentAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2053)
inline void TGAssembly::_IAsmRefPlaneAuto::PutTangentAngle ( double dAngle ) {
    HRESULT _hr = put_TangentAngle(dAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface Layouts wrapper method implementations
//

#pragma implementation_key(2054)
inline TGAssembly::LayoutPtr TGAssembly::Layouts::Item ( const _variant_t & Index ) {
    struct Layout * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return LayoutPtr(_result, false);
}

#pragma implementation_key(2055)
inline TGFramework::ApplicationPtr TGAssembly::Layouts::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2056)
inline IDispatchPtr TGAssembly::Layouts::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2057)
inline long TGAssembly::Layouts::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2058)
inline TGAssembly::LayoutPtr TGAssembly::Layouts::Add ( struct AsmRefPlane * AsmRefPlane, const _variant_t & ReturnExisting, VARIANT * Status ) {
    struct Layout * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x080c\x480c", AsmRefPlane, &ReturnExisting, Status);
    return LayoutPtr(_result, false);
}

#pragma implementation_key(2059)
inline TGAssembly::LayoutPtr TGAssembly::Layouts::AddByTearOff ( SAFEARRAY * * ProfileCurveBodyEdges, IDispatch * TearOffSketchPlane, VARIANT_BOOL bAssociative, VARIANT_BOOL bCopy, VARIANT * Status ) {
    struct Layout * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x6009\x0009\x000b\x000b\x480c", ProfileCurveBodyEdges, TearOffSketchPlane, bAssociative, bCopy, Status);
    return LayoutPtr(_result, false);
}

#pragma implementation_key(2060)
inline VARIANT_BOOL TGAssembly::Layouts::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2061)
inline void TGAssembly::Layouts::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

//
// dispinterface Layout wrapper method implementations
//

#pragma implementation_key(2062)
inline TGFramework::ApplicationPtr TGAssembly::Layout::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2063)
inline HRESULT TGAssembly::Layout::Delete ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2064)
inline IDispatchPtr TGAssembly::Layout::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2065)
inline IDispatchPtr TGAssembly::Layout::GetProfile ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2066)
inline _bstr_t TGAssembly::Layout::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2067)
inline void TGAssembly::Layout::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2068)
inline TGAssembly::AsmRefPlanePtr TGAssembly::Layout::GetRefPlane ( ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2069)
inline enum TGFramework::ObjectType TGAssembly::Layout::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2070)
inline IDispatchPtr TGAssembly::Layout::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2071)
inline VARIANT_BOOL TGAssembly::Layout::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2072)
inline VARIANT_BOOL TGAssembly::Layout::GetShowSketchColors ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2073)
inline void TGAssembly::Layout::PutShowSketchColors ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2074)
inline _bstr_t TGAssembly::Layout::GetStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2075)
inline void TGAssembly::Layout::PutStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2076)
inline enum TGPart::FeatureStatusConstants TGAssembly::Layout::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

//
// interface _ILayoutsAuto wrapper method implementations
//

#pragma implementation_key(2077)
inline TGAssembly::LayoutPtr TGAssembly::_ILayoutsAuto::Item ( const _variant_t & Index ) {
    struct Layout * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LayoutPtr(_result, false);
}

#pragma implementation_key(2078)
inline IUnknownPtr TGAssembly::_ILayoutsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2079)
inline TGFramework::ApplicationPtr TGAssembly::_ILayoutsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2080)
inline IDispatchPtr TGAssembly::_ILayoutsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2081)
inline long TGAssembly::_ILayoutsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2082)
inline TGAssembly::LayoutPtr TGAssembly::_ILayoutsAuto::Add ( struct AsmRefPlane * AsmRefPlane, const _variant_t & ReturnExisting, VARIANT * Status ) {
    struct Layout * _result = 0;
    HRESULT _hr = raw_Add(AsmRefPlane, ReturnExisting, Status, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LayoutPtr(_result, false);
}

#pragma implementation_key(2083)
inline TGAssembly::LayoutPtr TGAssembly::_ILayoutsAuto::AddByTearOff ( SAFEARRAY * * ProfileCurveBodyEdges, IDispatch * TearOffSketchPlane, VARIANT_BOOL bAssociative, VARIANT_BOOL bCopy, VARIANT * Status ) {
    struct Layout * _result = 0;
    HRESULT _hr = raw_AddByTearOff(ProfileCurveBodyEdges, TearOffSketchPlane, bAssociative, bCopy, Status, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LayoutPtr(_result, false);
}

#pragma implementation_key(2084)
inline VARIANT_BOOL TGAssembly::_ILayoutsAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2085)
inline void TGAssembly::_ILayoutsAuto::PutVisible ( VARIANT_BOOL pbVisible ) {
    HRESULT _hr = put_Visible(pbVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface _ILayoutAuto wrapper method implementations
//

#pragma implementation_key(2086)
inline TGFramework::ApplicationPtr TGAssembly::_ILayoutAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2087)
inline HRESULT TGAssembly::_ILayoutAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2088)
inline IDispatchPtr TGAssembly::_ILayoutAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2089)
inline IDispatchPtr TGAssembly::_ILayoutAuto::GetProfile ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2090)
inline _bstr_t TGAssembly::_ILayoutAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2091)
inline void TGAssembly::_ILayoutAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2092)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_ILayoutAuto::GetRefPlane ( ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = get_RefPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(2093)
inline enum TGFramework::ObjectType TGAssembly::_ILayoutAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2094)
inline IDispatchPtr TGAssembly::_ILayoutAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2095)
inline VARIANT_BOOL TGAssembly::_ILayoutAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2096)
inline VARIANT_BOOL TGAssembly::_ILayoutAuto::GetShowSketchColors ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowSketchColors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2097)
inline void TGAssembly::_ILayoutAuto::PutShowSketchColors ( VARIANT_BOOL ShowSketchColors ) {
    HRESULT _hr = put_ShowSketchColors(ShowSketchColors);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2098)
inline _bstr_t TGAssembly::_ILayoutAuto::GetStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2099)
inline void TGAssembly::_ILayoutAuto::PutStyle ( _bstr_t Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2100)
inline enum TGPart::FeatureStatusConstants TGAssembly::_ILayoutAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface LineSegments wrapper method implementations
//

#pragma implementation_key(2101)
inline TGAssembly::LineSegmentPtr TGAssembly::LineSegments::Item ( const _variant_t & Index ) {
    struct LineSegment * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return LineSegmentPtr(_result, false);
}

#pragma implementation_key(2102)
inline TGFramework::ApplicationPtr TGAssembly::LineSegments::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2103)
inline long TGAssembly::LineSegments::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2104)
inline IDispatchPtr TGAssembly::LineSegments::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2105)
inline TGAssembly::LineSegmentPtr TGAssembly::LineSegments::Add ( SAFEARRAY * * StartPoint, SAFEARRAY * * EndPoint ) {
    struct LineSegment * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x6005\x6005", StartPoint, EndPoint);
    return LineSegmentPtr(_result, false);
}

//
// dispinterface LineSegment wrapper method implementations
//

#pragma implementation_key(2106)
inline TGFramework::ApplicationPtr TGAssembly::LineSegment::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2107)
inline IDispatchPtr TGAssembly::LineSegment::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2108)
inline IDispatchPtr TGAssembly::LineSegment::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2109)
inline VARIANT_BOOL TGAssembly::LineSegment::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2110)
inline HRESULT TGAssembly::LineSegment::GetStartPoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(2111)
inline HRESULT TGAssembly::LineSegment::GetEndPoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(2112)
inline HRESULT TGAssembly::LineSegment::SetStartPoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(2113)
inline HRESULT TGAssembly::LineSegment::SetEndPoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(2114)
inline enum TGFramework::ObjectType TGAssembly::LineSegment::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2115)
inline HRESULT TGAssembly::LineSegment::SplitAtPoint ( double x, double y, double z, VARIANT * OtherSplitElement ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x480c", x, y, z, OtherSplitElement);
}

//
// interface _ILineSegmentsAuto wrapper method implementations
//

#pragma implementation_key(2116)
inline TGAssembly::LineSegmentPtr TGAssembly::_ILineSegmentsAuto::Item ( const _variant_t & Index ) {
    struct LineSegment * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LineSegmentPtr(_result, false);
}

#pragma implementation_key(2117)
inline IUnknownPtr TGAssembly::_ILineSegmentsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2118)
inline TGFramework::ApplicationPtr TGAssembly::_ILineSegmentsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2119)
inline long TGAssembly::_ILineSegmentsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2120)
inline IDispatchPtr TGAssembly::_ILineSegmentsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2121)
inline TGAssembly::LineSegmentPtr TGAssembly::_ILineSegmentsAuto::Add ( SAFEARRAY * * StartPoint, SAFEARRAY * * EndPoint ) {
    struct LineSegment * _result = 0;
    HRESULT _hr = raw_Add(StartPoint, EndPoint, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LineSegmentPtr(_result, false);
}

//
// interface _ILineSegmentAuto wrapper method implementations
//

#pragma implementation_key(2122)
inline TGFramework::ApplicationPtr TGAssembly::_ILineSegmentAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2123)
inline IDispatchPtr TGAssembly::_ILineSegmentAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2124)
inline IDispatchPtr TGAssembly::_ILineSegmentAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2125)
inline VARIANT_BOOL TGAssembly::_ILineSegmentAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2126)
inline HRESULT TGAssembly::_ILineSegmentAuto::GetStartPoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetStartPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2127)
inline HRESULT TGAssembly::_ILineSegmentAuto::GetEndPoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetEndPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2128)
inline HRESULT TGAssembly::_ILineSegmentAuto::SetStartPoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_SetStartPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2129)
inline HRESULT TGAssembly::_ILineSegmentAuto::SetEndPoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_SetEndPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2130)
inline enum TGFramework::ObjectType TGAssembly::_ILineSegmentAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2131)
inline HRESULT TGAssembly::_ILineSegmentAuto::SplitAtPoint ( double x, double y, double z, VARIANT * OtherSplitElement ) {
    HRESULT _hr = raw_SplitAtPoint(x, y, z, OtherSplitElement);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Segments wrapper method implementations
//

#pragma implementation_key(2132)
inline IDispatchPtr TGAssembly::Segments::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2133)
inline TGFramework::ApplicationPtr TGAssembly::Segments::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2134)
inline long TGAssembly::Segments::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2135)
inline IDispatchPtr TGAssembly::Segments::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// interface _ISegmentsAuto wrapper method implementations
//

#pragma implementation_key(2136)
inline IDispatchPtr TGAssembly::_ISegmentsAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2137)
inline IUnknownPtr TGAssembly::_ISegmentsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2138)
inline TGFramework::ApplicationPtr TGAssembly::_ISegmentsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2139)
inline long TGAssembly::_ISegmentsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2140)
inline IDispatchPtr TGAssembly::_ISegmentsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// dispinterface ArcSegments wrapper method implementations
//

#pragma implementation_key(2141)
inline TGFramework::ApplicationPtr TGAssembly::ArcSegments::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2142)
inline IDispatchPtr TGAssembly::ArcSegments::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2143)
inline TGAssembly::ArcSegmentPtr TGAssembly::ArcSegments::Item ( const _variant_t & Index ) {
    struct ArcSegment * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ArcSegmentPtr(_result, false);
}

#pragma implementation_key(2144)
inline long TGAssembly::ArcSegments::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2145)
inline TGAssembly::ArcSegmentPtr TGAssembly::ArcSegments::Add ( SAFEARRAY * * StartPoint, SAFEARRAY * * EndPoint, SAFEARRAY * * PlanePoint ) {
    struct ArcSegment * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x6005\x6005\x6005", StartPoint, EndPoint, PlanePoint);
    return ArcSegmentPtr(_result, false);
}

//
// dispinterface ArcSegment wrapper method implementations
//

#pragma implementation_key(2146)
inline TGFramework::ApplicationPtr TGAssembly::ArcSegment::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2147)
inline IDispatchPtr TGAssembly::ArcSegment::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2148)
inline IDispatchPtr TGAssembly::ArcSegment::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2149)
inline VARIANT_BOOL TGAssembly::ArcSegment::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2150)
inline enum TGFramework::ObjectType TGAssembly::ArcSegment::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2151)
inline HRESULT TGAssembly::ArcSegment::GetStartPoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(2152)
inline HRESULT TGAssembly::ArcSegment::SetStartPoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(2153)
inline HRESULT TGAssembly::ArcSegment::GetEndPoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(2154)
inline HRESULT TGAssembly::ArcSegment::SetEndPoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(2155)
inline double TGAssembly::ArcSegment::GetRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2156)
inline void TGAssembly::ArcSegment::PutRadius ( double _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2157)
inline double TGAssembly::ArcSegment::GetSweepAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2158)
inline void TGAssembly::ArcSegment::PutSweepAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

//
// interface _IArcSegmentsAuto wrapper method implementations
//

#pragma implementation_key(2159)
inline TGFramework::ApplicationPtr TGAssembly::_IArcSegmentsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2160)
inline IDispatchPtr TGAssembly::_IArcSegmentsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2161)
inline TGAssembly::ArcSegmentPtr TGAssembly::_IArcSegmentsAuto::Item ( const _variant_t & Index ) {
    struct ArcSegment * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ArcSegmentPtr(_result, false);
}

#pragma implementation_key(2162)
inline IUnknownPtr TGAssembly::_IArcSegmentsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2163)
inline long TGAssembly::_IArcSegmentsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2164)
inline TGAssembly::ArcSegmentPtr TGAssembly::_IArcSegmentsAuto::Add ( SAFEARRAY * * StartPoint, SAFEARRAY * * EndPoint, SAFEARRAY * * PlanePoint ) {
    struct ArcSegment * _result = 0;
    HRESULT _hr = raw_Add(StartPoint, EndPoint, PlanePoint, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ArcSegmentPtr(_result, false);
}

//
// interface _IArcSegmentAuto wrapper method implementations
//

#pragma implementation_key(2165)
inline TGFramework::ApplicationPtr TGAssembly::_IArcSegmentAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2166)
inline IDispatchPtr TGAssembly::_IArcSegmentAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2167)
inline IDispatchPtr TGAssembly::_IArcSegmentAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2168)
inline VARIANT_BOOL TGAssembly::_IArcSegmentAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2169)
inline enum TGFramework::ObjectType TGAssembly::_IArcSegmentAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2170)
inline HRESULT TGAssembly::_IArcSegmentAuto::GetStartPoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetStartPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2171)
inline HRESULT TGAssembly::_IArcSegmentAuto::SetStartPoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetStartPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2172)
inline HRESULT TGAssembly::_IArcSegmentAuto::GetEndPoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetEndPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2173)
inline HRESULT TGAssembly::_IArcSegmentAuto::SetEndPoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetEndPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2174)
inline double TGAssembly::_IArcSegmentAuto::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2175)
inline void TGAssembly::_IArcSegmentAuto::PutRadius ( double Radius ) {
    HRESULT _hr = put_Radius(Radius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2176)
inline double TGAssembly::_IArcSegmentAuto::GetSweepAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_SweepAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2177)
inline void TGAssembly::_IArcSegmentAuto::PutSweepAngle ( double SweepAngle ) {
    HRESULT _hr = put_SweepAngle(SweepAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface SegmentRelations3d wrapper method implementations
//

#pragma implementation_key(2178)
inline IDispatchPtr TGAssembly::SegmentRelations3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2179)
inline long TGAssembly::SegmentRelations3d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2180)
inline IDispatchPtr TGAssembly::SegmentRelations3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2181)
inline IDispatchPtr TGAssembly::SegmentRelations3d::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2182)
inline TGAssembly::SegmentDirectionRelation3dPtr TGAssembly::SegmentRelations3d::AddSegmentDirection ( IDispatch * Element1, enum SegmentRelation3dGeometryConstants SegmentGeometryType1, IDispatch * Element2, enum SegmentRelation3dGeometryConstants SegmentGeometryType2, enum SegmentRelation3dDirectionConstants SegmentDirectionType ) {
    struct SegmentDirectionRelation3d * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x0003\x0003", Element1, SegmentGeometryType1, Element2, SegmentGeometryType2, SegmentDirectionType);
    return SegmentDirectionRelation3dPtr(_result, false);
}

#pragma implementation_key(2183)
inline TGAssembly::SegmentDistanceRelation3dPtr TGAssembly::SegmentRelations3d::AddSegmentDistance ( IDispatch * Element1, enum SegmentRelation3dGeometryConstants SegmentGeometryType1, IDispatch * Element2, enum SegmentRelation3dGeometryConstants SegmentGeometryType2, IDispatch * RefPlane, enum SegmentRelation3dDistanceConstants SegmentDistanceType, double Distance ) {
    struct SegmentDistanceRelation3d * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x0003\x0009\x0003\x0005", Element1, SegmentGeometryType1, Element2, SegmentGeometryType2, RefPlane, SegmentDistanceType, Distance);
    return SegmentDistanceRelation3dPtr(_result, false);
}

#pragma implementation_key(2184)
inline TGAssembly::SegmentRadiusRelation3dPtr TGAssembly::SegmentRelations3d::AddSegmentRadius ( IDispatch * Element, double Radius ) {
    struct SegmentRadiusRelation3d * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005", Element, Radius);
    return SegmentRadiusRelation3dPtr(_result, false);
}

#pragma implementation_key(2185)
inline TGAssembly::SegmentAngularRelation3dPtr TGAssembly::SegmentRelations3d::AddSegmentAngular ( IDispatch * Element1, enum SegmentRelation3dGeometryConstants SegmentGeometryType1, IDispatch * Element2, enum SegmentRelation3dGeometryConstants SegmentGeometryType2, double Angle, VARIANT_BOOL vbSegAngleFromPositiveDir, VARIANT_BOOL vbSegAngleToPositiveDir, VARIANT_BOOL vbSegAngleCCW ) {
    struct SegmentAngularRelation3d * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x0003\x0005\x000b\x000b\x000b", Element1, SegmentGeometryType1, Element2, SegmentGeometryType2, Angle, vbSegAngleFromPositiveDir, vbSegAngleToPositiveDir, vbSegAngleCCW);
    return SegmentAngularRelation3dPtr(_result, false);
}

#pragma implementation_key(2186)
inline TGAssembly::SegmentPointRelation3dPtr TGAssembly::SegmentRelations3d::AddSegmentPoint ( IDispatch * Element1, enum SegmentRelation3dGeometryConstants SegmentGeometryType1, IDispatch * Element2, enum SegmentRelation3dGeometryConstants SegmentGeometryType2 ) {
    struct SegmentPointRelation3d * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x0003", Element1, SegmentGeometryType1, Element2, SegmentGeometryType2);
    return SegmentPointRelation3dPtr(_result, false);
}

#pragma implementation_key(2187)
inline TGAssembly::SegmentTangentRelation3dPtr TGAssembly::SegmentRelations3d::AddSegmentTangent ( IDispatch * Element1, IDispatch * Element2 ) {
    struct SegmentTangentRelation3d * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009", Element1, Element2);
    return SegmentTangentRelation3dPtr(_result, false);
}

//
// dispinterface SegmentDirectionRelation3d wrapper method implementations
//

#pragma implementation_key(2188)
inline IDispatchPtr TGAssembly::SegmentDirectionRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2189)
inline IDispatchPtr TGAssembly::SegmentDirectionRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2190)
inline HRESULT TGAssembly::SegmentDirectionRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2191)
inline long TGAssembly::SegmentDirectionRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2192)
inline enum TGFramework::ObjectType TGAssembly::SegmentDirectionRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2193)
inline HRESULT TGAssembly::SegmentDirectionRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(2194)
inline enum TGAssembly::SegmentRelation3dStatusConstants TGAssembly::SegmentDirectionRelation3d::GetStatus ( ) {
    enum SegmentRelation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2195)
inline HRESULT TGAssembly::SegmentDirectionRelation3d::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4003", Element1, Type, GeometryType);
}

#pragma implementation_key(2196)
inline HRESULT TGAssembly::SegmentDirectionRelation3d::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4003", Element2, Type, GeometryType);
}

#pragma implementation_key(2197)
inline enum TGAssembly::SegmentRelation3dDirectionConstants TGAssembly::SegmentDirectionRelation3d::GetDirectionType ( ) {
    enum SegmentRelation3dDirectionConstants _result;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2198)
inline IDispatchPtr TGAssembly::SegmentDirectionRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2199)
inline VARIANT_BOOL TGAssembly::SegmentDirectionRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _ISegmentDirectionRelation3dAuto wrapper method implementations
//

#pragma implementation_key(2200)
inline IDispatchPtr TGAssembly::_ISegmentDirectionRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2201)
inline IDispatchPtr TGAssembly::_ISegmentDirectionRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2202)
inline HRESULT TGAssembly::_ISegmentDirectionRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2203)
inline long TGAssembly::_ISegmentDirectionRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2204)
inline enum TGFramework::ObjectType TGAssembly::_ISegmentDirectionRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2205)
inline HRESULT TGAssembly::_ISegmentDirectionRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2206)
inline enum TGAssembly::SegmentRelation3dStatusConstants TGAssembly::_ISegmentDirectionRelation3dAuto::GetStatus ( ) {
    enum SegmentRelation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2207)
inline HRESULT TGAssembly::_ISegmentDirectionRelation3dAuto::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    HRESULT _hr = raw_GetElement1(Element1, Type, GeometryType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2208)
inline HRESULT TGAssembly::_ISegmentDirectionRelation3dAuto::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    HRESULT _hr = raw_GetElement2(Element2, Type, GeometryType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2209)
inline enum TGAssembly::SegmentRelation3dDirectionConstants TGAssembly::_ISegmentDirectionRelation3dAuto::GetDirectionType ( ) {
    enum SegmentRelation3dDirectionConstants _result;
    HRESULT _hr = get_DirectionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2210)
inline IDispatchPtr TGAssembly::_ISegmentDirectionRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2211)
inline VARIANT_BOOL TGAssembly::_ISegmentDirectionRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface SegmentDistanceRelation3d wrapper method implementations
//

#pragma implementation_key(2212)
inline IDispatchPtr TGAssembly::SegmentDistanceRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2213)
inline IDispatchPtr TGAssembly::SegmentDistanceRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2214)
inline HRESULT TGAssembly::SegmentDistanceRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2215)
inline long TGAssembly::SegmentDistanceRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2216)
inline enum TGFramework::ObjectType TGAssembly::SegmentDistanceRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2217)
inline HRESULT TGAssembly::SegmentDistanceRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(2218)
inline enum TGAssembly::SegmentRelation3dStatusConstants TGAssembly::SegmentDistanceRelation3d::GetStatus ( ) {
    enum SegmentRelation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2219)
inline double TGAssembly::SegmentDistanceRelation3d::GetDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2220)
inline void TGAssembly::SegmentDistanceRelation3d::PutDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2221)
inline IDispatchPtr TGAssembly::SegmentDistanceRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2222)
inline VARIANT_BOOL TGAssembly::SegmentDistanceRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2223)
inline HRESULT TGAssembly::SegmentDistanceRelation3d::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4003", Element1, Type, GeometryType);
}

#pragma implementation_key(2224)
inline HRESULT TGAssembly::SegmentDistanceRelation3d::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4003", Element2, Type, GeometryType);
}

#pragma implementation_key(2225)
inline HRESULT TGAssembly::SegmentDistanceRelation3d::GetElement3 ( IDispatch * * Element3, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4003", Element3, Type, GeometryType);
}

#pragma implementation_key(2226)
inline enum TGAssembly::SegmentRelation3dDistanceConstants TGAssembly::SegmentDistanceRelation3d::GetDistanceType ( ) {
    enum SegmentRelation3dDistanceConstants _result;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2227)
inline IDispatchPtr TGAssembly::SegmentDistanceRelation3d::GetDimension ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// interface _ISegmentDistanceRelation3dAuto wrapper method implementations
//

#pragma implementation_key(2228)
inline IDispatchPtr TGAssembly::_ISegmentDistanceRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2229)
inline IDispatchPtr TGAssembly::_ISegmentDistanceRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2230)
inline HRESULT TGAssembly::_ISegmentDistanceRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2231)
inline long TGAssembly::_ISegmentDistanceRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2232)
inline enum TGFramework::ObjectType TGAssembly::_ISegmentDistanceRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2233)
inline HRESULT TGAssembly::_ISegmentDistanceRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2234)
inline enum TGAssembly::SegmentRelation3dStatusConstants TGAssembly::_ISegmentDistanceRelation3dAuto::GetStatus ( ) {
    enum SegmentRelation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2235)
inline double TGAssembly::_ISegmentDistanceRelation3dAuto::GetDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_Distance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2236)
inline void TGAssembly::_ISegmentDistanceRelation3dAuto::PutDistance ( double Distance ) {
    HRESULT _hr = put_Distance(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2237)
inline IDispatchPtr TGAssembly::_ISegmentDistanceRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2238)
inline VARIANT_BOOL TGAssembly::_ISegmentDistanceRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2239)
inline HRESULT TGAssembly::_ISegmentDistanceRelation3dAuto::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    HRESULT _hr = raw_GetElement1(Element1, Type, GeometryType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2240)
inline HRESULT TGAssembly::_ISegmentDistanceRelation3dAuto::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    HRESULT _hr = raw_GetElement2(Element2, Type, GeometryType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2241)
inline HRESULT TGAssembly::_ISegmentDistanceRelation3dAuto::GetElement3 ( IDispatch * * Element3, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    HRESULT _hr = raw_GetElement3(Element3, Type, GeometryType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2242)
inline enum TGAssembly::SegmentRelation3dDistanceConstants TGAssembly::_ISegmentDistanceRelation3dAuto::GetDistanceType ( ) {
    enum SegmentRelation3dDistanceConstants _result;
    HRESULT _hr = get_DistanceType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2243)
inline IDispatchPtr TGAssembly::_ISegmentDistanceRelation3dAuto::GetDimension ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Dimension(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// dispinterface SegmentRadiusRelation3d wrapper method implementations
//

#pragma implementation_key(2244)
inline IDispatchPtr TGAssembly::SegmentRadiusRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2245)
inline IDispatchPtr TGAssembly::SegmentRadiusRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2246)
inline HRESULT TGAssembly::SegmentRadiusRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2247)
inline long TGAssembly::SegmentRadiusRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2248)
inline enum TGFramework::ObjectType TGAssembly::SegmentRadiusRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2249)
inline HRESULT TGAssembly::SegmentRadiusRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(2250)
inline enum TGAssembly::SegmentRelation3dStatusConstants TGAssembly::SegmentRadiusRelation3d::GetStatus ( ) {
    enum SegmentRelation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2251)
inline double TGAssembly::SegmentRadiusRelation3d::GetRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2252)
inline void TGAssembly::SegmentRadiusRelation3d::PutRadius ( double _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2253)
inline TGAssembly::ArcSegmentPtr TGAssembly::SegmentRadiusRelation3d::GetArcSegment ( ) {
    struct ArcSegment * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ArcSegmentPtr(_result, false);
}

#pragma implementation_key(2254)
inline IDispatchPtr TGAssembly::SegmentRadiusRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2255)
inline VARIANT_BOOL TGAssembly::SegmentRadiusRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2256)
inline HRESULT TGAssembly::SegmentRadiusRelation3d::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4003", Element1, Type, GeometryType);
}

#pragma implementation_key(2257)
inline IDispatchPtr TGAssembly::SegmentRadiusRelation3d::GetDimension ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// interface _ISegmentRadiusRelation3dAuto wrapper method implementations
//

#pragma implementation_key(2258)
inline IDispatchPtr TGAssembly::_ISegmentRadiusRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2259)
inline IDispatchPtr TGAssembly::_ISegmentRadiusRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2260)
inline HRESULT TGAssembly::_ISegmentRadiusRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2261)
inline long TGAssembly::_ISegmentRadiusRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2262)
inline enum TGFramework::ObjectType TGAssembly::_ISegmentRadiusRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2263)
inline HRESULT TGAssembly::_ISegmentRadiusRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2264)
inline enum TGAssembly::SegmentRelation3dStatusConstants TGAssembly::_ISegmentRadiusRelation3dAuto::GetStatus ( ) {
    enum SegmentRelation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2265)
inline double TGAssembly::_ISegmentRadiusRelation3dAuto::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2266)
inline void TGAssembly::_ISegmentRadiusRelation3dAuto::PutRadius ( double Radius ) {
    HRESULT _hr = put_Radius(Radius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2267)
inline TGAssembly::ArcSegmentPtr TGAssembly::_ISegmentRadiusRelation3dAuto::GetArcSegment ( ) {
    struct ArcSegment * _result = 0;
    HRESULT _hr = get_ArcSegment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ArcSegmentPtr(_result, false);
}

#pragma implementation_key(2268)
inline IDispatchPtr TGAssembly::_ISegmentRadiusRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2269)
inline VARIANT_BOOL TGAssembly::_ISegmentRadiusRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2270)
inline HRESULT TGAssembly::_ISegmentRadiusRelation3dAuto::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    HRESULT _hr = raw_GetElement1(Element1, Type, GeometryType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2271)
inline IDispatchPtr TGAssembly::_ISegmentRadiusRelation3dAuto::GetDimension ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Dimension(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// dispinterface SegmentAngularRelation3d wrapper method implementations
//

#pragma implementation_key(2272)
inline IDispatchPtr TGAssembly::SegmentAngularRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2273)
inline IDispatchPtr TGAssembly::SegmentAngularRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2274)
inline HRESULT TGAssembly::SegmentAngularRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2275)
inline long TGAssembly::SegmentAngularRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2276)
inline enum TGFramework::ObjectType TGAssembly::SegmentAngularRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2277)
inline HRESULT TGAssembly::SegmentAngularRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(2278)
inline enum TGAssembly::SegmentRelation3dStatusConstants TGAssembly::SegmentAngularRelation3d::GetStatus ( ) {
    enum SegmentRelation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2279)
inline double TGAssembly::SegmentAngularRelation3d::GetAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2280)
inline void TGAssembly::SegmentAngularRelation3d::PutAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2281)
inline IDispatchPtr TGAssembly::SegmentAngularRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2282)
inline VARIANT_BOOL TGAssembly::SegmentAngularRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2283)
inline HRESULT TGAssembly::SegmentAngularRelation3d::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4003", Element1, Type, GeometryType);
}

#pragma implementation_key(2284)
inline HRESULT TGAssembly::SegmentAngularRelation3d::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4003", Element2, Type, GeometryType);
}

#pragma implementation_key(2285)
inline VARIANT_BOOL TGAssembly::SegmentAngularRelation3d::GetAngleFromPositiveDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2286)
inline VARIANT_BOOL TGAssembly::SegmentAngularRelation3d::GetAngleToPositiveDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2287)
inline VARIANT_BOOL TGAssembly::SegmentAngularRelation3d::GetAngleCounterclockwise ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2288)
inline IDispatchPtr TGAssembly::SegmentAngularRelation3d::GetDimension ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// interface _ISegmentAngularRelation3dAuto wrapper method implementations
//

#pragma implementation_key(2289)
inline IDispatchPtr TGAssembly::_ISegmentAngularRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2290)
inline IDispatchPtr TGAssembly::_ISegmentAngularRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2291)
inline HRESULT TGAssembly::_ISegmentAngularRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2292)
inline long TGAssembly::_ISegmentAngularRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2293)
inline enum TGFramework::ObjectType TGAssembly::_ISegmentAngularRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2294)
inline HRESULT TGAssembly::_ISegmentAngularRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2295)
inline enum TGAssembly::SegmentRelation3dStatusConstants TGAssembly::_ISegmentAngularRelation3dAuto::GetStatus ( ) {
    enum SegmentRelation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2296)
inline double TGAssembly::_ISegmentAngularRelation3dAuto::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2297)
inline void TGAssembly::_ISegmentAngularRelation3dAuto::PutAngle ( double Angle ) {
    HRESULT _hr = put_Angle(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2298)
inline IDispatchPtr TGAssembly::_ISegmentAngularRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2299)
inline VARIANT_BOOL TGAssembly::_ISegmentAngularRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2300)
inline HRESULT TGAssembly::_ISegmentAngularRelation3dAuto::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    HRESULT _hr = raw_GetElement1(Element1, Type, GeometryType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2301)
inline HRESULT TGAssembly::_ISegmentAngularRelation3dAuto::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    HRESULT _hr = raw_GetElement2(Element2, Type, GeometryType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2302)
inline VARIANT_BOOL TGAssembly::_ISegmentAngularRelation3dAuto::GetAngleFromPositiveDirection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AngleFromPositiveDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2303)
inline VARIANT_BOOL TGAssembly::_ISegmentAngularRelation3dAuto::GetAngleToPositiveDirection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AngleToPositiveDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2304)
inline VARIANT_BOOL TGAssembly::_ISegmentAngularRelation3dAuto::GetAngleCounterclockwise ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AngleCounterclockwise(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2305)
inline IDispatchPtr TGAssembly::_ISegmentAngularRelation3dAuto::GetDimension ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Dimension(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// dispinterface SegmentPointRelation3d wrapper method implementations
//

#pragma implementation_key(2306)
inline IDispatchPtr TGAssembly::SegmentPointRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2307)
inline IDispatchPtr TGAssembly::SegmentPointRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2308)
inline HRESULT TGAssembly::SegmentPointRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2309)
inline long TGAssembly::SegmentPointRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2310)
inline enum TGFramework::ObjectType TGAssembly::SegmentPointRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2311)
inline HRESULT TGAssembly::SegmentPointRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(2312)
inline enum TGAssembly::SegmentRelation3dStatusConstants TGAssembly::SegmentPointRelation3d::GetStatus ( ) {
    enum SegmentRelation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2313)
inline IDispatchPtr TGAssembly::SegmentPointRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2314)
inline VARIANT_BOOL TGAssembly::SegmentPointRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2315)
inline HRESULT TGAssembly::SegmentPointRelation3d::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4003", Element1, Type, GeometryType);
}

#pragma implementation_key(2316)
inline HRESULT TGAssembly::SegmentPointRelation3d::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4003", Element2, Type, GeometryType);
}

//
// interface _ISegmentPointRelation3dAuto wrapper method implementations
//

#pragma implementation_key(2317)
inline IDispatchPtr TGAssembly::_ISegmentPointRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2318)
inline IDispatchPtr TGAssembly::_ISegmentPointRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2319)
inline HRESULT TGAssembly::_ISegmentPointRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2320)
inline long TGAssembly::_ISegmentPointRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2321)
inline enum TGFramework::ObjectType TGAssembly::_ISegmentPointRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2322)
inline HRESULT TGAssembly::_ISegmentPointRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2323)
inline enum TGAssembly::SegmentRelation3dStatusConstants TGAssembly::_ISegmentPointRelation3dAuto::GetStatus ( ) {
    enum SegmentRelation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2324)
inline IDispatchPtr TGAssembly::_ISegmentPointRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2325)
inline VARIANT_BOOL TGAssembly::_ISegmentPointRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2326)
inline HRESULT TGAssembly::_ISegmentPointRelation3dAuto::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    HRESULT _hr = raw_GetElement1(Element1, Type, GeometryType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2327)
inline HRESULT TGAssembly::_ISegmentPointRelation3dAuto::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    HRESULT _hr = raw_GetElement2(Element2, Type, GeometryType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface SegmentTangentRelation3d wrapper method implementations
//

#pragma implementation_key(2328)
inline IDispatchPtr TGAssembly::SegmentTangentRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2329)
inline IDispatchPtr TGAssembly::SegmentTangentRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2330)
inline HRESULT TGAssembly::SegmentTangentRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2331)
inline long TGAssembly::SegmentTangentRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2332)
inline enum TGFramework::ObjectType TGAssembly::SegmentTangentRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2333)
inline HRESULT TGAssembly::SegmentTangentRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(2334)
inline enum TGAssembly::SegmentRelation3dStatusConstants TGAssembly::SegmentTangentRelation3d::GetStatus ( ) {
    enum SegmentRelation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2335)
inline IDispatchPtr TGAssembly::SegmentTangentRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2336)
inline VARIANT_BOOL TGAssembly::SegmentTangentRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2337)
inline HRESULT TGAssembly::SegmentTangentRelation3d::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4003", Element1, Type, GeometryType);
}

#pragma implementation_key(2338)
inline HRESULT TGAssembly::SegmentTangentRelation3d::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4003", Element2, Type, GeometryType);
}

//
// interface _ISegmentRelations3dAuto wrapper method implementations
//

#pragma implementation_key(2339)
inline IDispatchPtr TGAssembly::_ISegmentRelations3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2340)
inline long TGAssembly::_ISegmentRelations3dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2341)
inline IDispatchPtr TGAssembly::_ISegmentRelations3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2342)
inline IDispatchPtr TGAssembly::_ISegmentRelations3dAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2343)
inline IUnknownPtr TGAssembly::_ISegmentRelations3dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2344)
inline TGAssembly::SegmentDirectionRelation3dPtr TGAssembly::_ISegmentRelations3dAuto::AddSegmentDirection ( IDispatch * Element1, enum SegmentRelation3dGeometryConstants SegmentGeometryType1, IDispatch * Element2, enum SegmentRelation3dGeometryConstants SegmentGeometryType2, enum SegmentRelation3dDirectionConstants SegmentDirectionType ) {
    struct SegmentDirectionRelation3d * _result = 0;
    HRESULT _hr = raw_AddSegmentDirection(Element1, SegmentGeometryType1, Element2, SegmentGeometryType2, SegmentDirectionType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SegmentDirectionRelation3dPtr(_result, false);
}

#pragma implementation_key(2345)
inline TGAssembly::SegmentDistanceRelation3dPtr TGAssembly::_ISegmentRelations3dAuto::AddSegmentDistance ( IDispatch * Element1, enum SegmentRelation3dGeometryConstants SegmentGeometryType1, IDispatch * Element2, enum SegmentRelation3dGeometryConstants SegmentGeometryType2, IDispatch * RefPlane, enum SegmentRelation3dDistanceConstants SegmentDistanceType, double Distance ) {
    struct SegmentDistanceRelation3d * _result = 0;
    HRESULT _hr = raw_AddSegmentDistance(Element1, SegmentGeometryType1, Element2, SegmentGeometryType2, RefPlane, SegmentDistanceType, Distance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SegmentDistanceRelation3dPtr(_result, false);
}

#pragma implementation_key(2346)
inline TGAssembly::SegmentRadiusRelation3dPtr TGAssembly::_ISegmentRelations3dAuto::AddSegmentRadius ( IDispatch * Element, double Radius ) {
    struct SegmentRadiusRelation3d * _result = 0;
    HRESULT _hr = raw_AddSegmentRadius(Element, Radius, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SegmentRadiusRelation3dPtr(_result, false);
}

#pragma implementation_key(2347)
inline TGAssembly::SegmentAngularRelation3dPtr TGAssembly::_ISegmentRelations3dAuto::AddSegmentAngular ( IDispatch * Element1, enum SegmentRelation3dGeometryConstants SegmentGeometryType1, IDispatch * Element2, enum SegmentRelation3dGeometryConstants SegmentGeometryType2, double Angle, VARIANT_BOOL vbSegAngleFromPositiveDir, VARIANT_BOOL vbSegAngleToPositiveDir, VARIANT_BOOL vbSegAngleCCW ) {
    struct SegmentAngularRelation3d * _result = 0;
    HRESULT _hr = raw_AddSegmentAngular(Element1, SegmentGeometryType1, Element2, SegmentGeometryType2, Angle, vbSegAngleFromPositiveDir, vbSegAngleToPositiveDir, vbSegAngleCCW, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SegmentAngularRelation3dPtr(_result, false);
}

#pragma implementation_key(2348)
inline TGAssembly::SegmentPointRelation3dPtr TGAssembly::_ISegmentRelations3dAuto::AddSegmentPoint ( IDispatch * Element1, enum SegmentRelation3dGeometryConstants SegmentGeometryType1, IDispatch * Element2, enum SegmentRelation3dGeometryConstants SegmentGeometryType2 ) {
    struct SegmentPointRelation3d * _result = 0;
    HRESULT _hr = raw_AddSegmentPoint(Element1, SegmentGeometryType1, Element2, SegmentGeometryType2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SegmentPointRelation3dPtr(_result, false);
}

#pragma implementation_key(2349)
inline TGAssembly::SegmentTangentRelation3dPtr TGAssembly::_ISegmentRelations3dAuto::AddSegmentTangent ( IDispatch * Element1, IDispatch * Element2 ) {
    struct SegmentTangentRelation3d * _result = 0;
    HRESULT _hr = raw_AddSegmentTangent(Element1, Element2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SegmentTangentRelation3dPtr(_result, false);
}

//
// interface _ISegmentTangentRelation3dAuto wrapper method implementations
//

#pragma implementation_key(2350)
inline IDispatchPtr TGAssembly::_ISegmentTangentRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2351)
inline IDispatchPtr TGAssembly::_ISegmentTangentRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2352)
inline HRESULT TGAssembly::_ISegmentTangentRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2353)
inline long TGAssembly::_ISegmentTangentRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2354)
inline enum TGFramework::ObjectType TGAssembly::_ISegmentTangentRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2355)
inline HRESULT TGAssembly::_ISegmentTangentRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2356)
inline enum TGAssembly::SegmentRelation3dStatusConstants TGAssembly::_ISegmentTangentRelation3dAuto::GetStatus ( ) {
    enum SegmentRelation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2357)
inline IDispatchPtr TGAssembly::_ISegmentTangentRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2358)
inline VARIANT_BOOL TGAssembly::_ISegmentTangentRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2359)
inline HRESULT TGAssembly::_ISegmentTangentRelation3dAuto::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    HRESULT _hr = raw_GetElement1(Element1, Type, GeometryType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2360)
inline HRESULT TGAssembly::_ISegmentTangentRelation3dAuto::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType ) {
    HRESULT _hr = raw_GetElement2(Element2, Type, GeometryType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Queries wrapper method implementations
//

#pragma implementation_key(2361)
inline TGFramework::ApplicationPtr TGAssembly::Queries::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2362)
inline IDispatchPtr TGAssembly::Queries::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2363)
inline long TGAssembly::Queries::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2364)
inline TGAssembly::QueryPtr TGAssembly::Queries::Item ( const _variant_t & Index ) {
    struct Query * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return QueryPtr(_result, false);
}

#pragma implementation_key(2365)
inline TGAssembly::QueryPtr TGAssembly::Queries::Add ( _bstr_t QueryName ) {
    struct Query * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)QueryName);
    return QueryPtr(_result, false);
}

#pragma implementation_key(2366)
inline HRESULT TGAssembly::Queries::Remove ( _bstr_t QueryName ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)QueryName);
}

#pragma implementation_key(2367)
inline HRESULT TGAssembly::Queries::Rename ( _bstr_t OldQueryName, _bstr_t NewQueryName ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)OldQueryName, (BSTR)NewQueryName);
}

#pragma implementation_key(2368)
inline HRESULT TGAssembly::Queries::Cut ( _bstr_t QueryName ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)QueryName);
}

#pragma implementation_key(2369)
inline TGAssembly::QueryPtr TGAssembly::Queries::Paste ( _bstr_t QueryName ) {
    struct Query * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)QueryName);
    return QueryPtr(_result, false);
}

#pragma implementation_key(2370)
inline _bstr_t TGAssembly::Queries::GetQueryName ( struct Query * Query ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x0009", Query);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2371)
inline TGAssembly::QueryPtr TGAssembly::Queries::GetQuickQuery ( ) {
    struct Query * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return QueryPtr(_result, false);
}

//
// dispinterface Query wrapper method implementations
//

#pragma implementation_key(2372)
inline TGFramework::ApplicationPtr TGAssembly::Query::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2373)
inline IDispatchPtr TGAssembly::Query::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2374)
inline enum TGAssembly::QueryScopeConstants TGAssembly::Query::GetScope ( ) {
    enum QueryScopeConstants _result;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2375)
inline void TGAssembly::Query::PutScope ( enum QueryScopeConstants _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2376)
inline VARIANT_BOOL TGAssembly::Query::GetSearchSubassemblies ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2377)
inline void TGAssembly::Query::PutSearchSubassemblies ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2378)
inline VARIANT_BOOL TGAssembly::Query::GetLoadSubassemblies ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2379)
inline void TGAssembly::Query::PutLoadSubassemblies ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2380)
inline long TGAssembly::Query::GetCriteriaCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2381)
inline _variant_t TGAssembly::Query::GetCriteria ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(2382)
inline HRESULT TGAssembly::Query::AddCriteria ( enum QueryPropertyConstants QueryProperty, _bstr_t CustomPropertyName, enum QueryConditionConstants QueryCondition, const _variant_t & Value ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008\x0003\x000c", QueryProperty, (BSTR)CustomPropertyName, QueryCondition, &Value);
}

#pragma implementation_key(2383)
inline HRESULT TGAssembly::Query::RemoveCriteria ( enum QueryPropertyConstants QueryProperty, _bstr_t CustomPropertyName, enum QueryConditionConstants QueryCondition, const _variant_t & Value ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008\x0003\x000c", QueryProperty, (BSTR)CustomPropertyName, QueryCondition, &Value);
}

#pragma implementation_key(2384)
inline HRESULT TGAssembly::Query::RemoveAllCriteria ( ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2385)
inline long TGAssembly::Query::GetMatchesCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2386)
inline HRESULT TGAssembly::Query::CopyToClipboard ( ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2387)
inline HRESULT TGAssembly::Query::PopulateFromClipboard ( ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface _IQueriesAuto wrapper method implementations
//

#pragma implementation_key(2388)
inline TGFramework::ApplicationPtr TGAssembly::_IQueriesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2389)
inline IDispatchPtr TGAssembly::_IQueriesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2390)
inline long TGAssembly::_IQueriesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2391)
inline TGAssembly::QueryPtr TGAssembly::_IQueriesAuto::Item ( const _variant_t & Index ) {
    struct Query * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return QueryPtr(_result, false);
}

#pragma implementation_key(2392)
inline IUnknownPtr TGAssembly::_IQueriesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2393)
inline TGAssembly::QueryPtr TGAssembly::_IQueriesAuto::Add ( _bstr_t QueryName ) {
    struct Query * _result = 0;
    HRESULT _hr = raw_Add(QueryName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return QueryPtr(_result, false);
}

#pragma implementation_key(2394)
inline HRESULT TGAssembly::_IQueriesAuto::Remove ( _bstr_t QueryName ) {
    HRESULT _hr = raw_Remove(QueryName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2395)
inline HRESULT TGAssembly::_IQueriesAuto::Rename ( _bstr_t OldQueryName, _bstr_t NewQueryName ) {
    HRESULT _hr = raw_Rename(OldQueryName, NewQueryName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2396)
inline HRESULT TGAssembly::_IQueriesAuto::Cut ( _bstr_t QueryName ) {
    HRESULT _hr = raw_Cut(QueryName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2397)
inline TGAssembly::QueryPtr TGAssembly::_IQueriesAuto::Paste ( _bstr_t QueryName ) {
    struct Query * _result = 0;
    HRESULT _hr = raw_Paste(QueryName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return QueryPtr(_result, false);
}

#pragma implementation_key(2398)
inline _bstr_t TGAssembly::_IQueriesAuto::GetQueryName ( struct Query * Query ) {
    BSTR _result = 0;
    HRESULT _hr = get_QueryName(Query, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2399)
inline TGAssembly::QueryPtr TGAssembly::_IQueriesAuto::GetQuickQuery ( ) {
    struct Query * _result = 0;
    HRESULT _hr = get_QuickQuery(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return QueryPtr(_result, false);
}

//
// interface _IQueryAuto wrapper method implementations
//

#pragma implementation_key(2400)
inline TGFramework::ApplicationPtr TGAssembly::_IQueryAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2401)
inline IDispatchPtr TGAssembly::_IQueryAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2402)
inline enum TGAssembly::QueryScopeConstants TGAssembly::_IQueryAuto::GetScope ( ) {
    enum QueryScopeConstants _result;
    HRESULT _hr = get_Scope(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2403)
inline void TGAssembly::_IQueryAuto::PutScope ( enum QueryScopeConstants Scope ) {
    HRESULT _hr = put_Scope(Scope);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2404)
inline VARIANT_BOOL TGAssembly::_IQueryAuto::GetSearchSubassemblies ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SearchSubassemblies(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2405)
inline void TGAssembly::_IQueryAuto::PutSearchSubassemblies ( VARIANT_BOOL SearchSubassemblies ) {
    HRESULT _hr = put_SearchSubassemblies(SearchSubassemblies);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2406)
inline VARIANT_BOOL TGAssembly::_IQueryAuto::GetLoadSubassemblies ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LoadSubassemblies(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2407)
inline void TGAssembly::_IQueryAuto::PutLoadSubassemblies ( VARIANT_BOOL LoadSubassemblies ) {
    HRESULT _hr = put_LoadSubassemblies(LoadSubassemblies);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2408)
inline long TGAssembly::_IQueryAuto::GetCriteriaCount ( ) {
    long _result = 0;
    HRESULT _hr = get_CriteriaCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2409)
inline _variant_t TGAssembly::_IQueryAuto::GetCriteria ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_Criteria(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(2410)
inline HRESULT TGAssembly::_IQueryAuto::AddCriteria ( enum QueryPropertyConstants QueryProperty, _bstr_t CustomPropertyName, enum QueryConditionConstants QueryCondition, const _variant_t & Value ) {
    HRESULT _hr = raw_AddCriteria(QueryProperty, CustomPropertyName, QueryCondition, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2411)
inline HRESULT TGAssembly::_IQueryAuto::RemoveCriteria ( enum QueryPropertyConstants QueryProperty, _bstr_t CustomPropertyName, enum QueryConditionConstants QueryCondition, const _variant_t & Value ) {
    HRESULT _hr = raw_RemoveCriteria(QueryProperty, CustomPropertyName, QueryCondition, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2412)
inline HRESULT TGAssembly::_IQueryAuto::RemoveAllCriteria ( ) {
    HRESULT _hr = raw_RemoveAllCriteria();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2413)
inline long TGAssembly::_IQueryAuto::GetMatchesCount ( ) {
    long _result = 0;
    HRESULT _hr = get_MatchesCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2414)
inline HRESULT TGAssembly::_IQueryAuto::CopyToClipboard ( ) {
    HRESULT _hr = raw_CopyToClipboard();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2415)
inline HRESULT TGAssembly::_IQueryAuto::PopulateFromClipboard ( ) {
    HRESULT _hr = raw_PopulateFromClipboard();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface AssemblyFamilyMembers wrapper method implementations
//

#pragma implementation_key(2416)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFamilyMembers::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2417)
inline IDispatchPtr TGAssembly::AssemblyFamilyMembers::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2418)
inline TGAssembly::AssemblyFamilyMemberPtr TGAssembly::AssemblyFamilyMembers::Item ( const _variant_t & Index ) {
    struct AssemblyFamilyMember * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyFamilyMemberPtr(_result, false);
}

#pragma implementation_key(2419)
inline long TGAssembly::AssemblyFamilyMembers::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2420)
inline TGAssembly::AssemblyFamilyMemberPtr TGAssembly::AssemblyFamilyMembers::NewMember ( _bstr_t MemberName ) {
    struct AssemblyFamilyMember * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)MemberName);
    return AssemblyFamilyMemberPtr(_result, false);
}

#pragma implementation_key(2421)
inline HRESULT TGAssembly::AssemblyFamilyMembers::DeleteMember ( _bstr_t MemberName ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)MemberName);
}

#pragma implementation_key(2422)
inline HRESULT TGAssembly::AssemblyFamilyMembers::ActivateMember ( _bstr_t MemberName ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)MemberName);
}

#pragma implementation_key(2423)
inline HRESULT TGAssembly::AssemblyFamilyMembers::SaveMember ( _bstr_t MemberName, _bstr_t FileNameWithPath ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)MemberName, (BSTR)FileNameWithPath);
}

#pragma implementation_key(2424)
inline void TGAssembly::AssemblyFamilyMembers::PutGlobalEditMode ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2425)
inline VARIANT_BOOL TGAssembly::AssemblyFamilyMembers::GetGlobalEditMode ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2426)
inline HRESULT TGAssembly::AssemblyFamilyMembers::AddVariable ( IDispatch * Variable ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Variable);
}

#pragma implementation_key(2427)
inline HRESULT TGAssembly::AssemblyFamilyMembers::RemoveVariable ( IDispatch * Variable ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Variable);
}

#pragma implementation_key(2428)
inline IDispatchPtr TGAssembly::AssemblyFamilyMembers::GetVariable ( int Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2429)
inline long TGAssembly::AssemblyFamilyMembers::GetVariableCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2430)
inline HRESULT TGAssembly::AssemblyFamilyMembers::SaveAllMembers ( VARIANT_BOOL ChangeGeometricVersion ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", ChangeGeometricVersion);
}

#pragma implementation_key(2431)
inline _bstr_t TGAssembly::AssemblyFamilyMembers::GetActiveMember ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2432)
inline enum TGAssembly::AlternateAssemblyTypeConstants TGAssembly::AssemblyFamilyMembers::GetAlternateAssemblyType ( ) {
    enum AlternateAssemblyTypeConstants _result;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2433)
inline HRESULT TGAssembly::AssemblyFamilyMembers::RenameMember ( _bstr_t CurrentMemberName, _bstr_t NewMemberName ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)CurrentMemberName, (BSTR)NewMemberName);
}

#pragma implementation_key(2434)
inline _bstr_t TGAssembly::AssemblyFamilyMembers::SaveMemberBiDM ( _bstr_t MemberName, _bstr_t FileNameWithPath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008\x0008\x0008", (BSTR)MemberName, (BSTR)FileNameWithPath, (BSTR)DocumentNumber, (BSTR)Revision, (BSTR)Title);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2435)
inline HRESULT TGAssembly::AssemblyFamilyMembers::SetMembersToPopulate ( long NumMembers, SAFEARRAY * pMembersToPopulate ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumMembers, pMembersToPopulate);
}

#pragma implementation_key(2436)
inline HRESULT TGAssembly::AssemblyFamilyMembers::SavePopulatedMembers ( ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface AssemblyFamilyMember wrapper method implementations
//

#pragma implementation_key(2437)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFamilyMember::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2438)
inline IDispatchPtr TGAssembly::AssemblyFamilyMember::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2439)
inline HRESULT TGAssembly::AssemblyFamilyMember::RemoveExcludedAttachment ( IDispatch * AttachmentToRemove ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", AttachmentToRemove);
}

#pragma implementation_key(2440)
inline HRESULT TGAssembly::AssemblyFamilyMember::RemoveExcludedRelationship ( IDispatch * ConstraintToRemove ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", ConstraintToRemove);
}

#pragma implementation_key(2441)
inline HRESULT TGAssembly::AssemblyFamilyMember::AddOccurrence ( IDispatch * Occurrence, _bstr_t MemberName ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", Occurrence, (BSTR)MemberName);
}

#pragma implementation_key(2442)
inline HRESULT TGAssembly::AssemblyFamilyMember::SetVariableValue ( IDispatch * Variable, double ValueToSet ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005", Variable, ValueToSet);
}

#pragma implementation_key(2443)
inline _bstr_t TGAssembly::AssemblyFamilyMember::GetMemberProperties ( enum AssemblyFamilyMemberPropertyConstants PropertyID ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x0003", PropertyID);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2444)
inline HRESULT TGAssembly::AssemblyFamilyMember::SetMemberProperties ( enum AssemblyFamilyMemberPropertyConstants PropertyID, _bstr_t PropertyString ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008", PropertyID, (BSTR)PropertyString);
}

#pragma implementation_key(2445)
inline _bstr_t TGAssembly::AssemblyFamilyMember::GetMemberName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2446)
inline HRESULT TGAssembly::AssemblyFamilyMember::IncludeObject ( IDispatch * ObjectToInclude ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", ObjectToInclude);
}

#pragma implementation_key(2447)
inline HRESULT TGAssembly::AssemblyFamilyMember::ExcludeObject ( IDispatch * ObjectToExclude ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", ObjectToExclude);
}

#pragma implementation_key(2448)
inline IDispatchPtr TGAssembly::AssemblyFamilyMember::GetProperties ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2449)
inline VARIANT_BOOL TGAssembly::AssemblyFamilyMember::GetEnablePopulate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2450)
inline void TGAssembly::AssemblyFamilyMember::PutEnablePopulate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2451)
inline enum TGAssembly::AssemblyFamilyMemberStatusConstants TGAssembly::AssemblyFamilyMember::GetMemberStatus ( ) {
    enum AssemblyFamilyMemberStatusConstants _result;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2452)
inline VARIANT_BOOL TGAssembly::AssemblyFamilyMember::GetSkipUpdateDuringSave ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2453)
inline void TGAssembly::AssemblyFamilyMember::PutSkipUpdateDuringSave ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2454)
inline HRESULT TGAssembly::AssemblyFamilyMember::GetSuppressedComponentsOfMember ( enum AssemblyComponentTypeConstants ComponentType, long * SuppressedComponentCount, SAFEARRAY * * SuppressedComponents ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003\x6009", ComponentType, SuppressedComponentCount, SuppressedComponents);
}

//
// interface _IAssemblyFamilyMemberAuto wrapper method implementations
//

#pragma implementation_key(2455)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFamilyMemberAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2456)
inline IDispatchPtr TGAssembly::_IAssemblyFamilyMemberAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2457)
inline HRESULT TGAssembly::_IAssemblyFamilyMemberAuto::RemoveExcludedAttachment ( IDispatch * AttachmentToRemove ) {
    HRESULT _hr = raw_RemoveExcludedAttachment(AttachmentToRemove);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2458)
inline HRESULT TGAssembly::_IAssemblyFamilyMemberAuto::RemoveExcludedRelationship ( IDispatch * ConstraintToRemove ) {
    HRESULT _hr = raw_RemoveExcludedRelationship(ConstraintToRemove);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2459)
inline HRESULT TGAssembly::_IAssemblyFamilyMemberAuto::AddOccurrence ( IDispatch * Occurrence, _bstr_t MemberName ) {
    HRESULT _hr = raw_AddOccurrence(Occurrence, MemberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2460)
inline HRESULT TGAssembly::_IAssemblyFamilyMemberAuto::SetVariableValue ( IDispatch * Variable, double ValueToSet ) {
    HRESULT _hr = raw_SetVariableValue(Variable, ValueToSet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2461)
inline _bstr_t TGAssembly::_IAssemblyFamilyMemberAuto::GetMemberProperties ( enum AssemblyFamilyMemberPropertyConstants PropertyID ) {
    BSTR _result = 0;
    HRESULT _hr = get_MemberProperties(PropertyID, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2462)
inline HRESULT TGAssembly::_IAssemblyFamilyMemberAuto::SetMemberProperties ( enum AssemblyFamilyMemberPropertyConstants PropertyID, _bstr_t PropertyString ) {
    HRESULT _hr = raw_SetMemberProperties(PropertyID, PropertyString);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2463)
inline _bstr_t TGAssembly::_IAssemblyFamilyMemberAuto::GetMemberName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MemberName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2464)
inline HRESULT TGAssembly::_IAssemblyFamilyMemberAuto::IncludeObject ( IDispatch * ObjectToInclude ) {
    HRESULT _hr = raw_IncludeObject(ObjectToInclude);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2465)
inline HRESULT TGAssembly::_IAssemblyFamilyMemberAuto::ExcludeObject ( IDispatch * ObjectToExclude ) {
    HRESULT _hr = raw_ExcludeObject(ObjectToExclude);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2466)
inline IDispatchPtr TGAssembly::_IAssemblyFamilyMemberAuto::GetProperties ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Properties(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2467)
inline VARIANT_BOOL TGAssembly::_IAssemblyFamilyMemberAuto::GetEnablePopulate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnablePopulate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2468)
inline void TGAssembly::_IAssemblyFamilyMemberAuto::PutEnablePopulate ( VARIANT_BOOL EnablePopulate ) {
    HRESULT _hr = put_EnablePopulate(EnablePopulate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2469)
inline enum TGAssembly::AssemblyFamilyMemberStatusConstants TGAssembly::_IAssemblyFamilyMemberAuto::GetMemberStatus ( ) {
    enum AssemblyFamilyMemberStatusConstants _result;
    HRESULT _hr = get_MemberStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2470)
inline VARIANT_BOOL TGAssembly::_IAssemblyFamilyMemberAuto::GetSkipUpdateDuringSave ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SkipUpdateDuringSave(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2471)
inline void TGAssembly::_IAssemblyFamilyMemberAuto::PutSkipUpdateDuringSave ( VARIANT_BOOL SkipUpdate ) {
    HRESULT _hr = put_SkipUpdateDuringSave(SkipUpdate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2472)
inline HRESULT TGAssembly::_IAssemblyFamilyMemberAuto::GetSuppressedComponentsOfMember ( enum AssemblyComponentTypeConstants ComponentType, long * SuppressedComponentCount, SAFEARRAY * * SuppressedComponents ) {
    HRESULT _hr = raw_GetSuppressedComponentsOfMember(ComponentType, SuppressedComponentCount, SuppressedComponents);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IAssemblyFamilyMembersAuto wrapper method implementations
//

#pragma implementation_key(2473)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFamilyMembersAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2474)
inline IDispatchPtr TGAssembly::_IAssemblyFamilyMembersAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2475)
inline TGAssembly::AssemblyFamilyMemberPtr TGAssembly::_IAssemblyFamilyMembersAuto::Item ( const _variant_t & Index ) {
    struct AssemblyFamilyMember * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFamilyMemberPtr(_result, false);
}

#pragma implementation_key(2476)
inline long TGAssembly::_IAssemblyFamilyMembersAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2477)
inline IUnknownPtr TGAssembly::_IAssemblyFamilyMembersAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2478)
inline TGAssembly::AssemblyFamilyMemberPtr TGAssembly::_IAssemblyFamilyMembersAuto::NewMember ( _bstr_t MemberName ) {
    struct AssemblyFamilyMember * _result = 0;
    HRESULT _hr = raw_NewMember(MemberName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFamilyMemberPtr(_result, false);
}

#pragma implementation_key(2479)
inline HRESULT TGAssembly::_IAssemblyFamilyMembersAuto::DeleteMember ( _bstr_t MemberName ) {
    HRESULT _hr = raw_DeleteMember(MemberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2480)
inline HRESULT TGAssembly::_IAssemblyFamilyMembersAuto::ActivateMember ( _bstr_t MemberName ) {
    HRESULT _hr = raw_ActivateMember(MemberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2481)
inline HRESULT TGAssembly::_IAssemblyFamilyMembersAuto::SaveMember ( _bstr_t MemberName, _bstr_t FileNameWithPath ) {
    HRESULT _hr = raw_SaveMember(MemberName, FileNameWithPath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2482)
inline void TGAssembly::_IAssemblyFamilyMembersAuto::PutGlobalEditMode ( VARIANT_BOOL GlobalEdit ) {
    HRESULT _hr = put_GlobalEditMode(GlobalEdit);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2483)
inline VARIANT_BOOL TGAssembly::_IAssemblyFamilyMembersAuto::GetGlobalEditMode ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GlobalEditMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2484)
inline HRESULT TGAssembly::_IAssemblyFamilyMembersAuto::AddVariable ( IDispatch * Variable ) {
    HRESULT _hr = raw_AddVariable(Variable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2485)
inline HRESULT TGAssembly::_IAssemblyFamilyMembersAuto::RemoveVariable ( IDispatch * Variable ) {
    HRESULT _hr = raw_RemoveVariable(Variable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2486)
inline IDispatchPtr TGAssembly::_IAssemblyFamilyMembersAuto::GetVariable ( int Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Variable(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2487)
inline long TGAssembly::_IAssemblyFamilyMembersAuto::GetVariableCount ( ) {
    long _result = 0;
    HRESULT _hr = get_VariableCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2488)
inline HRESULT TGAssembly::_IAssemblyFamilyMembersAuto::SaveAllMembers ( VARIANT_BOOL ChangeGeometricVersion ) {
    HRESULT _hr = raw_SaveAllMembers(ChangeGeometricVersion);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2489)
inline _bstr_t TGAssembly::_IAssemblyFamilyMembersAuto::GetActiveMember ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ActiveMember(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2490)
inline enum TGAssembly::AlternateAssemblyTypeConstants TGAssembly::_IAssemblyFamilyMembersAuto::GetAlternateAssemblyType ( ) {
    enum AlternateAssemblyTypeConstants _result;
    HRESULT _hr = get_AlternateAssemblyType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2491)
inline HRESULT TGAssembly::_IAssemblyFamilyMembersAuto::RenameMember ( _bstr_t CurrentMemberName, _bstr_t NewMemberName ) {
    HRESULT _hr = raw_RenameMember(CurrentMemberName, NewMemberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2492)
inline _bstr_t TGAssembly::_IAssemblyFamilyMembersAuto::SaveMemberBiDM ( _bstr_t MemberName, _bstr_t FileNameWithPath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    HRESULT _hr = raw_SaveMemberBiDM(MemberName, FileNameWithPath, DocumentNumber, Revision, Title, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2493)
inline HRESULT TGAssembly::_IAssemblyFamilyMembersAuto::SetMembersToPopulate ( long NumMembers, SAFEARRAY * pMembersToPopulate ) {
    HRESULT _hr = raw_SetMembersToPopulate(NumMembers, pMembersToPopulate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2494)
inline HRESULT TGAssembly::_IAssemblyFamilyMembersAuto::SavePopulatedMembers ( ) {
    HRESULT _hr = raw_SavePopulatedMembers();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface AssemblyPatterns wrapper method implementations
//

#pragma implementation_key(2495)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyPatterns::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2496)
inline IDispatchPtr TGAssembly::AssemblyPatterns::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2497)
inline TGAssembly::AssemblyPatternPtr TGAssembly::AssemblyPatterns::Item ( const _variant_t & Index ) {
    struct AssemblyPattern * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2498)
inline long TGAssembly::AssemblyPatterns::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2499)
inline TGAssembly::AssemblyPatternPtr TGAssembly::AssemblyPatterns::Find ( _bstr_t PatternName ) {
    struct AssemblyPattern * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)PatternName);
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2500)
inline HRESULT TGAssembly::AssemblyPatterns::Delete ( _bstr_t PatternName ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)PatternName);
}

#pragma implementation_key(2501)
inline HRESULT TGAssembly::AssemblyPatterns::Drop ( _bstr_t PatternName ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)PatternName);
}

#pragma implementation_key(2502)
inline TGAssembly::AssemblyPatternPtr TGAssembly::AssemblyPatterns::Create ( _bstr_t PatternName, SAFEARRAY * * MasterOccurrences, IDispatch * FeaturePattern, IDispatch * ReferenceFeature ) {
    struct AssemblyPattern * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x6009\x0009\x0009", (BSTR)PatternName, MasterOccurrences, FeaturePattern, ReferenceFeature);
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2503)
inline TGAssembly::AssemblyPatternPtr TGAssembly::AssemblyPatterns::CreateAlongCurve ( long NumberOfMasters, SAFEARRAY * * MasterOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t bstrName, const _variant_t & FutureUse1, const _variant_t & FutureUse2, const _variant_t & FutureUse3 ) {
    struct AssemblyPattern * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x0003\x6009\x0009\x0003\x0005\x0003\x0003\x0005\x0003\x6009\x0009\x0003\x0005\x0003\x0003\x0005\x0003\x0003\x0009\x0008\x080c\x080c\x080c", NumberOfMasters, MasterOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, (BSTR)bstrName, &FutureUse1, &FutureUse2, &FutureUse3);
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2504)
inline TGAssembly::AssemblyPatternPtr TGAssembly::AssemblyPatterns::CreateDuplicate ( _bstr_t PatternName, long NumberOfMasters, SAFEARRAY * * MasterOccurrences, IDispatch * FromOccurrence, long NumberOfToOccurrences, SAFEARRAY * * ToOccurrences ) {
    struct AssemblyPattern * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003\x6009\x0009\x0003\x6009", (BSTR)PatternName, NumberOfMasters, MasterOccurrences, FromOccurrence, NumberOfToOccurrences, ToOccurrences);
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2505)
inline TGAssembly::AssemblyPatternPtr TGAssembly::AssemblyPatterns::CreateAlongCurveEx ( long NumberOfMasters, SAFEARRAY * * MasterOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t bstrName, long lSkipCount, const _variant_t & FutureUse2, const _variant_t & FutureUse3 ) {
    struct AssemblyPattern * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x0003\x6009\x0009\x0003\x0005\x0003\x0003\x0005\x0003\x6009\x0009\x0003\x0005\x0003\x0003\x0005\x0003\x0003\x0009\x0008\x0003\x080c\x080c", NumberOfMasters, MasterOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, (BSTR)bstrName, lSkipCount, &FutureUse2, &FutureUse3);
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2506)
inline TGAssembly::AssemblyPatternPtr TGAssembly::AssemblyPatterns::CreateEx ( _bstr_t PatternName, SAFEARRAY * * SourceOccurrences, IDispatch * FeaturePattern, IDispatch * ReferenceFeature ) {
    struct AssemblyPattern * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x6009\x0009\x0009", (BSTR)PatternName, SourceOccurrences, FeaturePattern, ReferenceFeature);
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2507)
inline TGAssembly::AssemblyPatternPtr TGAssembly::AssemblyPatterns::CreateAlongCurveEx2 ( long NumberOfSources, SAFEARRAY * * SourceOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t bstrName, const _variant_t & FutureUse1, const _variant_t & FutureUse2, const _variant_t & FutureUse3 ) {
    struct AssemblyPattern * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x0003\x6009\x0009\x0003\x0005\x0003\x0003\x0005\x0003\x6009\x0009\x0003\x0005\x0003\x0003\x0005\x0003\x0003\x0009\x0008\x080c\x080c\x080c", NumberOfSources, SourceOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, (BSTR)bstrName, &FutureUse1, &FutureUse2, &FutureUse3);
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2508)
inline TGAssembly::AssemblyPatternPtr TGAssembly::AssemblyPatterns::CreateDuplicateEx ( _bstr_t PatternName, long NumberOfSources, SAFEARRAY * * SourceOccurrences, IDispatch * FromOccurrence, long NumberOfToOccurrences, SAFEARRAY * * ToOccurrences ) {
    struct AssemblyPattern * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003\x6009\x0009\x0003\x6009", (BSTR)PatternName, NumberOfSources, SourceOccurrences, FromOccurrence, NumberOfToOccurrences, ToOccurrences);
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2509)
inline TGAssembly::AssemblyPatternPtr TGAssembly::AssemblyPatterns::CreateAlongCurveEx3 ( long NumberOfSources, SAFEARRAY * * SourceOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t bstrName, long lSkipCount, const _variant_t & FutureUse2, const _variant_t & FutureUse3 ) {
    struct AssemblyPattern * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x0003\x6009\x0009\x0003\x0005\x0003\x0003\x0005\x0003\x6009\x0009\x0003\x0005\x0003\x0003\x0005\x0003\x0003\x0009\x0008\x0003\x080c\x080c", NumberOfSources, SourceOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, (BSTR)bstrName, lSkipCount, &FutureUse2, &FutureUse3);
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2510)
inline TGAssembly::AssemblyPatternPtr TGAssembly::AssemblyPatterns::CreateAlongCircleWithOccurrences ( long lNumberOfSources, SAFEARRAY * * SourceOccs, IDispatch * Axis, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCircle, enum PatternOffsetTypeConstants PatternOffsetTypeForCircle, VARIANT_BOOL bIsFullCircle, double dSweep, long lNumberOfOccurrencesForCircle, double dSpacing, enum TGPart::PatternTransformTypeConstants TransformType, long lNumberOfSuppressIDs, SAFEARRAY * * SuppressIDs, _bstr_t bstrName, const _variant_t & FutureUse1, const _variant_t & FutureUse2 ) {
    struct AssemblyPattern * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x0009\x0003\x0003\x000b\x0005\x0003\x0005\x0003\x0003\x6003\x0008\x080c\x080c", lNumberOfSources, SourceOccs, Axis, AnchorSideForCircle, PatternOffsetTypeForCircle, bIsFullCircle, dSweep, lNumberOfOccurrencesForCircle, dSpacing, TransformType, lNumberOfSuppressIDs, SuppressIDs, (BSTR)bstrName, &FutureUse1, &FutureUse2);
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2511)
inline TGAssembly::AssemblyPatternPtr TGAssembly::AssemblyPatterns::CreateAlongLineWithOccurrences ( long lNumberOfSources, SAFEARRAY * * SourceOccs, IDispatch * DirectionElement1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine1, enum TGPart::LinearPatternMethodConstants DirectionMethod1, long lCount1, double dDistance1, IDispatch * DirectionElement2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine2, enum TGPart::LinearPatternMethodConstants DirectionMethod2, long lCount2, double dDistance2, long lNumberOfSuppressIDs, SAFEARRAY * * SuppressIDs, _bstr_t bstrName ) {
    struct AssemblyPattern * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x0009\x0003\x0003\x0003\x0005\x0009\x0003\x0003\x0003\x0005\x0003\x6003\x0008", lNumberOfSources, SourceOccs, DirectionElement1, AnchorSideForLine1, DirectionMethod1, lCount1, dDistance1, DirectionElement2, AnchorSideForLine2, DirectionMethod2, lCount2, dDistance2, lNumberOfSuppressIDs, SuppressIDs, (BSTR)bstrName);
    return AssemblyPatternPtr(_result, false);
}

//
// dispinterface AssemblyPattern wrapper method implementations
//

#pragma implementation_key(2512)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyPattern::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2513)
inline IDispatchPtr TGAssembly::AssemblyPattern::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2514)
inline TGAssembly::AssemblyPatternOccurrencePtr TGAssembly::AssemblyPattern::Item ( const _variant_t & Index ) {
    struct AssemblyPatternOccurrence * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyPatternOccurrencePtr(_result, false);
}

#pragma implementation_key(2515)
inline long TGAssembly::AssemblyPattern::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2516)
inline _bstr_t TGAssembly::AssemblyPattern::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2517)
inline void TGAssembly::AssemblyPattern::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2518)
inline VARIANT_BOOL TGAssembly::AssemblyPattern::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2519)
inline void TGAssembly::AssemblyPattern::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2520)
inline HRESULT TGAssembly::AssemblyPattern::GetInputs ( SAFEARRAY * * MasterOccurrences, IDispatch * * FeaturePattern, SAFEARRAY * * ReferenceFeatures ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009\x4009\x6009", MasterOccurrences, FeaturePattern, ReferenceFeatures);
}

#pragma implementation_key(2521)
inline HRESULT TGAssembly::AssemblyPattern::Edit ( SAFEARRAY * * MasterOccurrences, IDispatch * FeaturePattern, IDispatch * ReferenceFeature, _bstr_t Name ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009\x0009\x0009\x0008", MasterOccurrences, FeaturePattern, ReferenceFeature, (BSTR)Name);
}

#pragma implementation_key(2522)
inline HRESULT TGAssembly::AssemblyPattern::GetOccurrences ( SAFEARRAY * * Occurrences ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", Occurrences);
}

#pragma implementation_key(2523)
inline enum TGAssembly::AssemblyPatternTypeConstants TGAssembly::AssemblyPattern::PatternType ( ) {
    enum AssemblyPatternTypeConstants _result;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2524)
inline HRESULT TGAssembly::AssemblyPattern::EditDuplicate ( long NumberOfMasters, SAFEARRAY * * MasterOccurrences, IDispatch * FromOccurrence, long NumberOfToOccurrences, SAFEARRAY * * ToOccurrences, _bstr_t Name ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x0009\x0003\x6009\x0008", NumberOfMasters, MasterOccurrences, FromOccurrence, NumberOfToOccurrences, ToOccurrences, (BSTR)Name);
}

#pragma implementation_key(2525)
inline HRESULT TGAssembly::AssemblyPattern::EditAlongCurve ( long NumberOfMasters, SAFEARRAY * * MasterOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t Name, const _variant_t & FutureUse1, const _variant_t & FutureUse2, const _variant_t & FutureUse3 ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x0003\x6009\x0009\x0003\x0005\x0003\x0003\x0005\x0003\x6009\x0009\x0003\x0005\x0003\x0003\x0005\x0003\x0003\x0009\x0008\x080c\x080c\x080c", NumberOfMasters, MasterOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, (BSTR)Name, &FutureUse1, &FutureUse2, &FutureUse3);
}

#pragma implementation_key(2526)
inline HRESULT TGAssembly::AssemblyPattern::EditAlongCurveEx ( long NumberOfMasters, SAFEARRAY * * MasterOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t Name, long lSkipCount, const _variant_t & FutureUse2, const _variant_t & FutureUse3 ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x0003\x6009\x0009\x0003\x0005\x0003\x0003\x0005\x0003\x6009\x0009\x0003\x0005\x0003\x0003\x0005\x0003\x0003\x0009\x0008\x0003\x080c\x080c", NumberOfMasters, MasterOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, (BSTR)Name, lSkipCount, &FutureUse2, &FutureUse3);
}

#pragma implementation_key(2527)
inline HRESULT TGAssembly::AssemblyPattern::GetPatternData ( long * NumberOfMasters, SAFEARRAY * * MasterOccs, long * NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves1, double * AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves1, long * NumberOfOccurrencesForCurves1, double * OccurrenceSpacingForCurves1, long * NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves2, double * AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves2, long * NumberOfOccurrencesForCurves2, double * OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants * TransformType, enum TGPart::PatternTransformRotateTypeConstants * TransformRotateType, IDispatch * * TransformPlaneOrSurface, BSTR * Name, long * SkipCount ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009\x4003\x6009\x4009\x4003\x4005\x4003\x4003\x4005\x4003\x6009\x4009\x4003\x4005\x4003\x4003\x4005\x4003\x4003\x4009\x4008\x4003", NumberOfMasters, MasterOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, Name, SkipCount);
}

#pragma implementation_key(2528)
inline HRESULT TGAssembly::AssemblyPattern::GetInputsEx ( SAFEARRAY * * SourceOccurrences, IDispatch * * FeaturePattern, SAFEARRAY * * ReferenceFeatures ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009\x4009\x6009", SourceOccurrences, FeaturePattern, ReferenceFeatures);
}

#pragma implementation_key(2529)
inline HRESULT TGAssembly::AssemblyPattern::EditEx ( SAFEARRAY * * SourceOccurrences, IDispatch * FeaturePattern, IDispatch * ReferenceFeature, _bstr_t Name ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009\x0009\x0009\x0008", SourceOccurrences, FeaturePattern, ReferenceFeature, (BSTR)Name);
}

#pragma implementation_key(2530)
inline HRESULT TGAssembly::AssemblyPattern::EditDuplicateEx ( long NumberOfSources, SAFEARRAY * * SourceOccurrences, IDispatch * FromOccurrence, long NumberOfToOccurrences, SAFEARRAY * * ToOccurrences, _bstr_t Name ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x0009\x0003\x6009\x0008", NumberOfSources, SourceOccurrences, FromOccurrence, NumberOfToOccurrences, ToOccurrences, (BSTR)Name);
}

#pragma implementation_key(2531)
inline HRESULT TGAssembly::AssemblyPattern::EditAlongCurveEx2 ( long NumberOfSources, SAFEARRAY * * SourceOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t Name, const _variant_t & FutureUse1, const _variant_t & FutureUse2, const _variant_t & FutureUse3 ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x0003\x6009\x0009\x0003\x0005\x0003\x0003\x0005\x0003\x6009\x0009\x0003\x0005\x0003\x0003\x0005\x0003\x0003\x0009\x0008\x080c\x080c\x080c", NumberOfSources, SourceOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, (BSTR)Name, &FutureUse1, &FutureUse2, &FutureUse3);
}

#pragma implementation_key(2532)
inline HRESULT TGAssembly::AssemblyPattern::EditAlongCurveEx3 ( long NumberOfSources, SAFEARRAY * * SourceOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t Name, long lSkipCount, const _variant_t & FutureUse2, const _variant_t & FutureUse3 ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x0003\x6009\x0009\x0003\x0005\x0003\x0003\x0005\x0003\x6009\x0009\x0003\x0005\x0003\x0003\x0005\x0003\x0003\x0009\x0008\x0003\x080c\x080c", NumberOfSources, SourceOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, (BSTR)Name, lSkipCount, &FutureUse2, &FutureUse3);
}

#pragma implementation_key(2533)
inline HRESULT TGAssembly::AssemblyPattern::GetPatternDataEx ( long * NumberOfSources, SAFEARRAY * * SourceOccs, long * NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves1, double * AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves1, long * NumberOfOccurrencesForCurves1, double * OccurrenceSpacingForCurves1, long * NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves2, double * AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves2, long * NumberOfOccurrencesForCurves2, double * OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants * TransformType, enum TGPart::PatternTransformRotateTypeConstants * TransformRotateType, IDispatch * * TransformPlaneOrSurface, BSTR * Name, long * SkipCount ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009\x4003\x6009\x4009\x4003\x4005\x4003\x4003\x4005\x4003\x6009\x4009\x4003\x4005\x4003\x4003\x4005\x4003\x4003\x4009\x4008\x4003", NumberOfSources, SourceOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, Name, SkipCount);
}

#pragma implementation_key(2534)
inline HRESULT TGAssembly::AssemblyPattern::EditAlongCircleWithOccurrences ( long lNumberOfSources, SAFEARRAY * * SourceOccs, IDispatch * Axis, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCircle, enum PatternOffsetTypeConstants PatternOffsetTypeForCircle, VARIANT_BOOL bIsFullCircle, double dSweep, long lNumberOfOccurrencesForCircle, double dSpacing, enum TGPart::PatternTransformTypeConstants TransformType, long lNumberOfSuppressIDs, SAFEARRAY * * SuppressIDs, _bstr_t bstrName, const _variant_t & FutureUse1, const _variant_t & FutureUse2 ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x0009\x0003\x0003\x000b\x0005\x0003\x0005\x0003\x0003\x6003\x0008\x080c\x080c", lNumberOfSources, SourceOccs, Axis, AnchorSideForCircle, PatternOffsetTypeForCircle, bIsFullCircle, dSweep, lNumberOfOccurrencesForCircle, dSpacing, TransformType, lNumberOfSuppressIDs, SuppressIDs, (BSTR)bstrName, &FutureUse1, &FutureUse2);
}

#pragma implementation_key(2535)
inline HRESULT TGAssembly::AssemblyPattern::EditAlongLineWithOccurrences ( long lNumberOfSources, SAFEARRAY * * SourceOccs, IDispatch * DirectionElement1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine1, enum TGPart::LinearPatternMethodConstants DirectionMethod1, long lCount1, double dDistance1, IDispatch * DirectionElement2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine2, enum TGPart::LinearPatternMethodConstants DirectionMethod2, long lCount2, double dDistance2, long lNumberOfSuppressIDs, SAFEARRAY * * SuppressIDs, _bstr_t bstrName ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x0009\x0003\x0003\x0003\x0005\x0009\x0003\x0003\x0003\x0005\x0003\x6003\x0008", lNumberOfSources, SourceOccs, DirectionElement1, AnchorSideForLine1, DirectionMethod1, lCount1, dDistance1, DirectionElement2, AnchorSideForLine2, DirectionMethod2, lCount2, dDistance2, lNumberOfSuppressIDs, SuppressIDs, (BSTR)bstrName);
}

//
// dispinterface AssemblyPatternOccurrence wrapper method implementations
//

#pragma implementation_key(2536)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyPatternOccurrence::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2537)
inline IDispatchPtr TGAssembly::AssemblyPatternOccurrence::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2538)
inline _bstr_t TGAssembly::AssemblyPatternOccurrence::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2539)
inline void TGAssembly::AssemblyPatternOccurrence::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2540)
inline VARIANT_BOOL TGAssembly::AssemblyPatternOccurrence::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2541)
inline void TGAssembly::AssemblyPatternOccurrence::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2542)
inline HRESULT TGAssembly::AssemblyPatternOccurrence::GetOccurrences ( SAFEARRAY * * Occurrences ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", Occurrences);
}

#pragma implementation_key(2543)
inline HRESULT TGAssembly::AssemblyPatternOccurrence::GetPosition ( long * Row, long * Col ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4003", Row, Col);
}

#pragma implementation_key(2544)
inline VARIANT_BOOL TGAssembly::AssemblyPatternOccurrence::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2545)
inline void TGAssembly::AssemblyPatternOccurrence::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

//
// interface _IAssemblyPatternOccurrenceAuto wrapper method implementations
//

#pragma implementation_key(2546)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyPatternOccurrenceAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2547)
inline IDispatchPtr TGAssembly::_IAssemblyPatternOccurrenceAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2548)
inline _bstr_t TGAssembly::_IAssemblyPatternOccurrenceAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2549)
inline void TGAssembly::_IAssemblyPatternOccurrenceAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2550)
inline VARIANT_BOOL TGAssembly::_IAssemblyPatternOccurrenceAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2551)
inline void TGAssembly::_IAssemblyPatternOccurrenceAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2552)
inline HRESULT TGAssembly::_IAssemblyPatternOccurrenceAuto::GetOccurrences ( SAFEARRAY * * Occurrences ) {
    HRESULT _hr = raw_GetOccurrences(Occurrences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2553)
inline HRESULT TGAssembly::_IAssemblyPatternOccurrenceAuto::GetPosition ( long * Row, long * Col ) {
    HRESULT _hr = raw_GetPosition(Row, Col);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2554)
inline VARIANT_BOOL TGAssembly::_IAssemblyPatternOccurrenceAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2555)
inline void TGAssembly::_IAssemblyPatternOccurrenceAuto::PutSuppress ( VARIANT_BOOL Suppress ) {
    HRESULT _hr = put_Suppress(Suppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface _IAssemblyPatternsAuto wrapper method implementations
//

#pragma implementation_key(2556)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyPatternsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2557)
inline IDispatchPtr TGAssembly::_IAssemblyPatternsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2558)
inline TGAssembly::AssemblyPatternPtr TGAssembly::_IAssemblyPatternsAuto::Item ( const _variant_t & Index ) {
    struct AssemblyPattern * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2559)
inline long TGAssembly::_IAssemblyPatternsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2560)
inline IUnknownPtr TGAssembly::_IAssemblyPatternsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2561)
inline TGAssembly::AssemblyPatternPtr TGAssembly::_IAssemblyPatternsAuto::Find ( _bstr_t PatternName ) {
    struct AssemblyPattern * _result = 0;
    HRESULT _hr = raw_Find(PatternName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2562)
inline HRESULT TGAssembly::_IAssemblyPatternsAuto::Delete ( _bstr_t PatternName ) {
    HRESULT _hr = raw_Delete(PatternName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2563)
inline HRESULT TGAssembly::_IAssemblyPatternsAuto::Drop ( _bstr_t PatternName ) {
    HRESULT _hr = raw_Drop(PatternName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2564)
inline TGAssembly::AssemblyPatternPtr TGAssembly::_IAssemblyPatternsAuto::Create ( _bstr_t PatternName, SAFEARRAY * * MasterOccurrences, IDispatch * FeaturePattern, IDispatch * ReferenceFeature ) {
    struct AssemblyPattern * _result = 0;
    HRESULT _hr = raw_Create(PatternName, MasterOccurrences, FeaturePattern, ReferenceFeature, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2565)
inline TGAssembly::AssemblyPatternPtr TGAssembly::_IAssemblyPatternsAuto::CreateAlongCurve ( long NumberOfMasters, SAFEARRAY * * MasterOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t bstrName, const _variant_t & FutureUse1, const _variant_t & FutureUse2, const _variant_t & FutureUse3 ) {
    struct AssemblyPattern * _result = 0;
    HRESULT _hr = raw_CreateAlongCurve(NumberOfMasters, MasterOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, bstrName, FutureUse1, FutureUse2, FutureUse3, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2566)
inline TGAssembly::AssemblyPatternPtr TGAssembly::_IAssemblyPatternsAuto::CreateDuplicate ( _bstr_t PatternName, long NumberOfMasters, SAFEARRAY * * MasterOccurrences, IDispatch * FromOccurrence, long NumberOfToOccurrences, SAFEARRAY * * ToOccurrences ) {
    struct AssemblyPattern * _result = 0;
    HRESULT _hr = raw_CreateDuplicate(PatternName, NumberOfMasters, MasterOccurrences, FromOccurrence, NumberOfToOccurrences, ToOccurrences, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2567)
inline TGAssembly::AssemblyPatternPtr TGAssembly::_IAssemblyPatternsAuto::CreateAlongCurveEx ( long NumberOfMasters, SAFEARRAY * * MasterOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t bstrName, long lSkipCount, const _variant_t & FutureUse2, const _variant_t & FutureUse3 ) {
    struct AssemblyPattern * _result = 0;
    HRESULT _hr = raw_CreateAlongCurveEx(NumberOfMasters, MasterOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, bstrName, lSkipCount, FutureUse2, FutureUse3, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2568)
inline TGAssembly::AssemblyPatternPtr TGAssembly::_IAssemblyPatternsAuto::CreateEx ( _bstr_t PatternName, SAFEARRAY * * SourceOccurrences, IDispatch * FeaturePattern, IDispatch * ReferenceFeature ) {
    struct AssemblyPattern * _result = 0;
    HRESULT _hr = raw_CreateEx(PatternName, SourceOccurrences, FeaturePattern, ReferenceFeature, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2569)
inline TGAssembly::AssemblyPatternPtr TGAssembly::_IAssemblyPatternsAuto::CreateAlongCurveEx2 ( long NumberOfSources, SAFEARRAY * * SourceOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t bstrName, const _variant_t & FutureUse1, const _variant_t & FutureUse2, const _variant_t & FutureUse3 ) {
    struct AssemblyPattern * _result = 0;
    HRESULT _hr = raw_CreateAlongCurveEx2(NumberOfSources, SourceOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, bstrName, FutureUse1, FutureUse2, FutureUse3, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2570)
inline TGAssembly::AssemblyPatternPtr TGAssembly::_IAssemblyPatternsAuto::CreateDuplicateEx ( _bstr_t PatternName, long NumberOfSources, SAFEARRAY * * SourceOccurrences, IDispatch * FromOccurrence, long NumberOfToOccurrences, SAFEARRAY * * ToOccurrences ) {
    struct AssemblyPattern * _result = 0;
    HRESULT _hr = raw_CreateDuplicateEx(PatternName, NumberOfSources, SourceOccurrences, FromOccurrence, NumberOfToOccurrences, ToOccurrences, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2571)
inline TGAssembly::AssemblyPatternPtr TGAssembly::_IAssemblyPatternsAuto::CreateAlongCurveEx3 ( long NumberOfSources, SAFEARRAY * * SourceOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t bstrName, long lSkipCount, const _variant_t & FutureUse2, const _variant_t & FutureUse3 ) {
    struct AssemblyPattern * _result = 0;
    HRESULT _hr = raw_CreateAlongCurveEx3(NumberOfSources, SourceOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, bstrName, lSkipCount, FutureUse2, FutureUse3, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2572)
inline TGAssembly::AssemblyPatternPtr TGAssembly::_IAssemblyPatternsAuto::CreateAlongCircleWithOccurrences ( long lNumberOfSources, SAFEARRAY * * SourceOccs, IDispatch * Axis, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCircle, enum PatternOffsetTypeConstants PatternOffsetTypeForCircle, VARIANT_BOOL bIsFullCircle, double dSweep, long lNumberOfOccurrencesForCircle, double dSpacing, enum TGPart::PatternTransformTypeConstants TransformType, long lNumberOfSuppressIDs, SAFEARRAY * * SuppressIDs, _bstr_t bstrName, const _variant_t & FutureUse1, const _variant_t & FutureUse2 ) {
    struct AssemblyPattern * _result = 0;
    HRESULT _hr = raw_CreateAlongCircleWithOccurrences(lNumberOfSources, SourceOccs, Axis, AnchorSideForCircle, PatternOffsetTypeForCircle, bIsFullCircle, dSweep, lNumberOfOccurrencesForCircle, dSpacing, TransformType, lNumberOfSuppressIDs, SuppressIDs, bstrName, FutureUse1, FutureUse2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPatternPtr(_result, false);
}

#pragma implementation_key(2573)
inline TGAssembly::AssemblyPatternPtr TGAssembly::_IAssemblyPatternsAuto::CreateAlongLineWithOccurrences ( long lNumberOfSources, SAFEARRAY * * SourceOccs, IDispatch * DirectionElement1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine1, enum TGPart::LinearPatternMethodConstants DirectionMethod1, long lCount1, double dDistance1, IDispatch * DirectionElement2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine2, enum TGPart::LinearPatternMethodConstants DirectionMethod2, long lCount2, double dDistance2, long lNumberOfSuppressIDs, SAFEARRAY * * SuppressIDs, _bstr_t bstrName ) {
    struct AssemblyPattern * _result = 0;
    HRESULT _hr = raw_CreateAlongLineWithOccurrences(lNumberOfSources, SourceOccs, DirectionElement1, AnchorSideForLine1, DirectionMethod1, lCount1, dDistance1, DirectionElement2, AnchorSideForLine2, DirectionMethod2, lCount2, dDistance2, lNumberOfSuppressIDs, SuppressIDs, bstrName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPatternPtr(_result, false);
}

//
// interface _IAssemblyPatternAuto wrapper method implementations
//

#pragma implementation_key(2574)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyPatternAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2575)
inline IDispatchPtr TGAssembly::_IAssemblyPatternAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2576)
inline TGAssembly::AssemblyPatternOccurrencePtr TGAssembly::_IAssemblyPatternAuto::Item ( const _variant_t & Index ) {
    struct AssemblyPatternOccurrence * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPatternOccurrencePtr(_result, false);
}

#pragma implementation_key(2577)
inline long TGAssembly::_IAssemblyPatternAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2578)
inline IUnknownPtr TGAssembly::_IAssemblyPatternAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2579)
inline _bstr_t TGAssembly::_IAssemblyPatternAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2580)
inline void TGAssembly::_IAssemblyPatternAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2581)
inline VARIANT_BOOL TGAssembly::_IAssemblyPatternAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2582)
inline void TGAssembly::_IAssemblyPatternAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2583)
inline HRESULT TGAssembly::_IAssemblyPatternAuto::GetInputs ( SAFEARRAY * * MasterOccurrences, IDispatch * * FeaturePattern, SAFEARRAY * * ReferenceFeatures ) {
    HRESULT _hr = raw_GetInputs(MasterOccurrences, FeaturePattern, ReferenceFeatures);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2584)
inline HRESULT TGAssembly::_IAssemblyPatternAuto::Edit ( SAFEARRAY * * MasterOccurrences, IDispatch * FeaturePattern, IDispatch * ReferenceFeature, _bstr_t Name ) {
    HRESULT _hr = raw_Edit(MasterOccurrences, FeaturePattern, ReferenceFeature, Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2585)
inline HRESULT TGAssembly::_IAssemblyPatternAuto::GetOccurrences ( SAFEARRAY * * Occurrences ) {
    HRESULT _hr = raw_GetOccurrences(Occurrences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2586)
inline enum TGAssembly::AssemblyPatternTypeConstants TGAssembly::_IAssemblyPatternAuto::PatternType ( ) {
    enum AssemblyPatternTypeConstants _result;
    HRESULT _hr = raw_PatternType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2587)
inline HRESULT TGAssembly::_IAssemblyPatternAuto::EditDuplicate ( long NumberOfMasters, SAFEARRAY * * MasterOccurrences, IDispatch * FromOccurrence, long NumberOfToOccurrences, SAFEARRAY * * ToOccurrences, _bstr_t Name ) {
    HRESULT _hr = raw_EditDuplicate(NumberOfMasters, MasterOccurrences, FromOccurrence, NumberOfToOccurrences, ToOccurrences, Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2588)
inline HRESULT TGAssembly::_IAssemblyPatternAuto::EditAlongCurve ( long NumberOfMasters, SAFEARRAY * * MasterOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t Name, const _variant_t & FutureUse1, const _variant_t & FutureUse2, const _variant_t & FutureUse3 ) {
    HRESULT _hr = raw_EditAlongCurve(NumberOfMasters, MasterOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, Name, FutureUse1, FutureUse2, FutureUse3);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2589)
inline HRESULT TGAssembly::_IAssemblyPatternAuto::EditAlongCurveEx ( long NumberOfMasters, SAFEARRAY * * MasterOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t Name, long lSkipCount, const _variant_t & FutureUse2, const _variant_t & FutureUse3 ) {
    HRESULT _hr = raw_EditAlongCurveEx(NumberOfMasters, MasterOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, Name, lSkipCount, FutureUse2, FutureUse3);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2590)
inline HRESULT TGAssembly::_IAssemblyPatternAuto::GetPatternData ( long * NumberOfMasters, SAFEARRAY * * MasterOccs, long * NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves1, double * AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves1, long * NumberOfOccurrencesForCurves1, double * OccurrenceSpacingForCurves1, long * NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves2, double * AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves2, long * NumberOfOccurrencesForCurves2, double * OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants * TransformType, enum TGPart::PatternTransformRotateTypeConstants * TransformRotateType, IDispatch * * TransformPlaneOrSurface, BSTR * Name, long * SkipCount ) {
    HRESULT _hr = raw_GetPatternData(NumberOfMasters, MasterOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, Name, SkipCount);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2591)
inline HRESULT TGAssembly::_IAssemblyPatternAuto::GetInputsEx ( SAFEARRAY * * SourceOccurrences, IDispatch * * FeaturePattern, SAFEARRAY * * ReferenceFeatures ) {
    HRESULT _hr = raw_GetInputsEx(SourceOccurrences, FeaturePattern, ReferenceFeatures);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2592)
inline HRESULT TGAssembly::_IAssemblyPatternAuto::EditEx ( SAFEARRAY * * SourceOccurrences, IDispatch * FeaturePattern, IDispatch * ReferenceFeature, _bstr_t Name ) {
    HRESULT _hr = raw_EditEx(SourceOccurrences, FeaturePattern, ReferenceFeature, Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2593)
inline HRESULT TGAssembly::_IAssemblyPatternAuto::EditDuplicateEx ( long NumberOfSources, SAFEARRAY * * SourceOccurrences, IDispatch * FromOccurrence, long NumberOfToOccurrences, SAFEARRAY * * ToOccurrences, _bstr_t Name ) {
    HRESULT _hr = raw_EditDuplicateEx(NumberOfSources, SourceOccurrences, FromOccurrence, NumberOfToOccurrences, ToOccurrences, Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2594)
inline HRESULT TGAssembly::_IAssemblyPatternAuto::EditAlongCurveEx2 ( long NumberOfSources, SAFEARRAY * * SourceOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t Name, const _variant_t & FutureUse1, const _variant_t & FutureUse2, const _variant_t & FutureUse3 ) {
    HRESULT _hr = raw_EditAlongCurveEx2(NumberOfSources, SourceOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, Name, FutureUse1, FutureUse2, FutureUse3);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2595)
inline HRESULT TGAssembly::_IAssemblyPatternAuto::EditAlongCurveEx3 ( long NumberOfSources, SAFEARRAY * * SourceOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t Name, long lSkipCount, const _variant_t & FutureUse2, const _variant_t & FutureUse3 ) {
    HRESULT _hr = raw_EditAlongCurveEx3(NumberOfSources, SourceOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, Name, lSkipCount, FutureUse2, FutureUse3);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2596)
inline HRESULT TGAssembly::_IAssemblyPatternAuto::GetPatternDataEx ( long * NumberOfSources, SAFEARRAY * * SourceOccs, long * NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves1, double * AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves1, long * NumberOfOccurrencesForCurves1, double * OccurrenceSpacingForCurves1, long * NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves2, double * AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves2, long * NumberOfOccurrencesForCurves2, double * OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants * TransformType, enum TGPart::PatternTransformRotateTypeConstants * TransformRotateType, IDispatch * * TransformPlaneOrSurface, BSTR * Name, long * SkipCount ) {
    HRESULT _hr = raw_GetPatternDataEx(NumberOfSources, SourceOccs, NumberOfCurves1, Curves1, AnchorPointForCurves1, AnchorSideForCurves1, AnchorAtDistanceForCurves1, PatternOffsetTypeForCurves1, NumberOfOccurrencesForCurves1, OccurrenceSpacingForCurves1, NumberOfCurves2, Curves2, AnchorPointForCurves2, AnchorSideForCurves2, AnchorAtDistanceForCurves2, PatternOffsetTypeForCurves2, NumberOfOccurrencesForCurves2, OccurrenceSpacingForCurves2, TransformType, TransformRotateType, TransformPlaneOrSurface, Name, SkipCount);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2597)
inline HRESULT TGAssembly::_IAssemblyPatternAuto::EditAlongCircleWithOccurrences ( long lNumberOfSources, SAFEARRAY * * SourceOccs, IDispatch * Axis, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCircle, enum PatternOffsetTypeConstants PatternOffsetTypeForCircle, VARIANT_BOOL bIsFullCircle, double dSweep, long lNumberOfOccurrencesForCircle, double dSpacing, enum TGPart::PatternTransformTypeConstants TransformType, long lNumberOfSuppressIDs, SAFEARRAY * * SuppressIDs, _bstr_t bstrName, const _variant_t & FutureUse1, const _variant_t & FutureUse2 ) {
    HRESULT _hr = raw_EditAlongCircleWithOccurrences(lNumberOfSources, SourceOccs, Axis, AnchorSideForCircle, PatternOffsetTypeForCircle, bIsFullCircle, dSweep, lNumberOfOccurrencesForCircle, dSpacing, TransformType, lNumberOfSuppressIDs, SuppressIDs, bstrName, FutureUse1, FutureUse2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2598)
inline HRESULT TGAssembly::_IAssemblyPatternAuto::EditAlongLineWithOccurrences ( long lNumberOfSources, SAFEARRAY * * SourceOccs, IDispatch * DirectionElement1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine1, enum TGPart::LinearPatternMethodConstants DirectionMethod1, long lCount1, double dDistance1, IDispatch * DirectionElement2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine2, enum TGPart::LinearPatternMethodConstants DirectionMethod2, long lCount2, double dDistance2, long lNumberOfSuppressIDs, SAFEARRAY * * SuppressIDs, _bstr_t bstrName ) {
    HRESULT _hr = raw_EditAlongLineWithOccurrences(lNumberOfSources, SourceOccs, DirectionElement1, AnchorSideForLine1, DirectionMethod1, lCount1, dDistance1, DirectionElement2, AnchorSideForLine2, DirectionMethod2, lCount2, dDistance2, lNumberOfSuppressIDs, SuppressIDs, bstrName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Configurations wrapper method implementations
//

#pragma implementation_key(2599)
inline TGFramework::ApplicationPtr TGAssembly::Configurations::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2600)
inline IDispatchPtr TGAssembly::Configurations::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2601)
inline long TGAssembly::Configurations::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2602)
inline TGAssembly::ConfigurationPtr TGAssembly::Configurations::Item ( const _variant_t & Index ) {
    struct Configuration * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ConfigurationPtr(_result, false);
}

#pragma implementation_key(2603)
inline HRESULT TGAssembly::Configurations::Apply ( const _variant_t & Index, const _variant_t & ActivationOverride, const _variant_t & SimplifyOverride ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c\x080c\x080c", &Index, &ActivationOverride, &SimplifyOverride);
}

#pragma implementation_key(2604)
inline TGAssembly::ConfigurationPtr TGAssembly::Configurations::Add ( _bstr_t Name ) {
    struct Configuration * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return ConfigurationPtr(_result, false);
}

#pragma implementation_key(2605)
inline TGAssembly::ConfigurationPtr TGAssembly::Configurations::AddDerivedConfig ( int nConfig, int nZones, int nQueries, VARIANT * ppsaConfigList, VARIANT * ppsaZoneList, VARIANT * ppsaQueryList, _bstr_t bstrNewConfigName ) {
    struct Configuration * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0003\x0003\x400c\x400c\x400c\x0008", nConfig, nZones, nQueries, ppsaConfigList, ppsaZoneList, ppsaQueryList, (BSTR)bstrNewConfigName);
    return ConfigurationPtr(_result, false);
}

#pragma implementation_key(2606)
inline VARIANT_BOOL TGAssembly::Configurations::GetDirty ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2607)
inline HRESULT TGAssembly::Configurations::Save ( ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2608)
inline HRESULT TGAssembly::Configurations::GetConfigComponentList ( _bstr_t bstrConfigName, SAFEARRAY * * bstrActiveComponentList ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x6008", (BSTR)bstrConfigName, bstrActiveComponentList);
}

//
// dispinterface Configuration wrapper method implementations
//

#pragma implementation_key(2609)
inline TGFramework::ApplicationPtr TGAssembly::Configuration::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2610)
inline IDispatchPtr TGAssembly::Configuration::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2611)
inline HRESULT TGAssembly::Configuration::Apply ( const _variant_t & ActivationOverride, const _variant_t & SimplifyOverride ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &ActivationOverride, &SimplifyOverride);
}

#pragma implementation_key(2612)
inline _bstr_t TGAssembly::Configuration::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2613)
inline enum TGFramework::ObjectType TGAssembly::Configuration::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2614)
inline enum TGAssembly::ConfigurationTypeConstants TGAssembly::Configuration::GetConfigurationType ( ) {
    enum ConfigurationTypeConstants _result;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2615)
inline HRESULT TGAssembly::Configuration::Delete ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2616)
inline HRESULT TGAssembly::Configuration::Update ( ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2617)
inline HRESULT TGAssembly::Configuration::Save ( ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface _IConfigurationsAuto wrapper method implementations
//

#pragma implementation_key(2618)
inline TGFramework::ApplicationPtr TGAssembly::_IConfigurationsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2619)
inline IDispatchPtr TGAssembly::_IConfigurationsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2620)
inline long TGAssembly::_IConfigurationsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2621)
inline TGAssembly::ConfigurationPtr TGAssembly::_IConfigurationsAuto::Item ( const _variant_t & Index ) {
    struct Configuration * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ConfigurationPtr(_result, false);
}

#pragma implementation_key(2622)
inline IUnknownPtr TGAssembly::_IConfigurationsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2623)
inline HRESULT TGAssembly::_IConfigurationsAuto::Apply ( const _variant_t & Index, const _variant_t & ActivationOverride, const _variant_t & SimplifyOverride ) {
    HRESULT _hr = raw_Apply(Index, ActivationOverride, SimplifyOverride);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2624)
inline TGAssembly::ConfigurationPtr TGAssembly::_IConfigurationsAuto::Add ( _bstr_t Name ) {
    struct Configuration * _result = 0;
    HRESULT _hr = raw_Add(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ConfigurationPtr(_result, false);
}

#pragma implementation_key(2625)
inline TGAssembly::ConfigurationPtr TGAssembly::_IConfigurationsAuto::AddDerivedConfig ( int nConfig, int nZones, int nQueries, VARIANT * ppsaConfigList, VARIANT * ppsaZoneList, VARIANT * ppsaQueryList, _bstr_t bstrNewConfigName ) {
    struct Configuration * _result = 0;
    HRESULT _hr = raw_AddDerivedConfig(nConfig, nZones, nQueries, ppsaConfigList, ppsaZoneList, ppsaQueryList, bstrNewConfigName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ConfigurationPtr(_result, false);
}

#pragma implementation_key(2626)
inline VARIANT_BOOL TGAssembly::_IConfigurationsAuto::GetDirty ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Dirty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2627)
inline HRESULT TGAssembly::_IConfigurationsAuto::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2628)
inline HRESULT TGAssembly::_IConfigurationsAuto::GetConfigComponentList ( _bstr_t bstrConfigName, SAFEARRAY * * bstrActiveComponentList ) {
    HRESULT _hr = raw_GetConfigComponentList(bstrConfigName, bstrActiveComponentList);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IConfigurationAuto wrapper method implementations
//

#pragma implementation_key(2629)
inline TGFramework::ApplicationPtr TGAssembly::_IConfigurationAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2630)
inline IDispatchPtr TGAssembly::_IConfigurationAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2631)
inline HRESULT TGAssembly::_IConfigurationAuto::Apply ( const _variant_t & ActivationOverride, const _variant_t & SimplifyOverride ) {
    HRESULT _hr = raw_Apply(ActivationOverride, SimplifyOverride);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2632)
inline _bstr_t TGAssembly::_IConfigurationAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2633)
inline enum TGFramework::ObjectType TGAssembly::_IConfigurationAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2634)
inline enum TGAssembly::ConfigurationTypeConstants TGAssembly::_IConfigurationAuto::GetConfigurationType ( ) {
    enum ConfigurationTypeConstants _result;
    HRESULT _hr = get_ConfigurationType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2635)
inline HRESULT TGAssembly::_IConfigurationAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2636)
inline HRESULT TGAssembly::_IConfigurationAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2637)
inline HRESULT TGAssembly::_IConfigurationAuto::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface WireRuns wrapper method implementations
//

#pragma implementation_key(2638)
inline TGFramework::ApplicationPtr TGAssembly::WireRuns::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2639)
inline IDispatchPtr TGAssembly::WireRuns::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2640)
inline TGAssembly::WireRunPtr TGAssembly::WireRuns::Item ( const _variant_t & Index ) {
    struct WireRun * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return WireRunPtr(_result, false);
}

#pragma implementation_key(2641)
inline long TGAssembly::WireRuns::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2642)
inline TGAssembly::WireRunPtr TGAssembly::WireRuns::Add ( _bstr_t PartFileName, const _variant_t & PartTemplateFileName, const _variant_t & PartFileDirectory ) {
    struct WireRun * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x080c\x080c", (BSTR)PartFileName, &PartTemplateFileName, &PartFileDirectory);
    return WireRunPtr(_result, false);
}

#pragma implementation_key(2643)
inline HRESULT TGAssembly::WireRuns::Delete ( struct WireRun * WireRun ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", WireRun);
}

//
// dispinterface WireRun wrapper method implementations
//

#pragma implementation_key(2644)
inline TGFramework::ApplicationPtr TGAssembly::WireRun::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2645)
inline IDispatchPtr TGAssembly::WireRun::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2646)
inline HRESULT TGAssembly::WireRun::AddWirePath ( struct WirePath * WirePath ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", WirePath);
}

#pragma implementation_key(2647)
inline HRESULT TGAssembly::WireRun::RemoveWirePath ( struct WirePath * WirePath ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", WirePath);
}

#pragma implementation_key(2648)
inline TGAssembly::WireRunPathsPtr TGAssembly::WireRun::GetWirePaths ( ) {
    struct WireRunPaths * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return WireRunPathsPtr(_result, false);
}

#pragma implementation_key(2649)
inline void TGAssembly::WireRun::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2650)
inline _bstr_t TGAssembly::WireRun::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2651)
inline void TGAssembly::WireRun::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2652)
inline VARIANT_BOOL TGAssembly::WireRun::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2653)
inline TGAssembly::OccurrencePtr TGAssembly::WireRun::GetOccurrence ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(2654)
inline HRESULT TGAssembly::WireRun::IsFrozen ( VARIANT_BOOL * bFrozen ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", bFrozen);
}

#pragma implementation_key(2655)
inline HRESULT TGAssembly::WireRun::IsLinked ( VARIANT_BOOL * bLinked ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", bLinked);
}

#pragma implementation_key(2656)
inline HRESULT TGAssembly::WireRun::Freeze ( ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2657)
inline HRESULT TGAssembly::WireRun::Thaw ( ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2658)
inline HRESULT TGAssembly::WireRun::BreakLink ( ) {
    return _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface _IWireRunsAuto wrapper method implementations
//

#pragma implementation_key(2659)
inline TGFramework::ApplicationPtr TGAssembly::_IWireRunsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2660)
inline IDispatchPtr TGAssembly::_IWireRunsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2661)
inline TGAssembly::WireRunPtr TGAssembly::_IWireRunsAuto::Item ( const _variant_t & Index ) {
    struct WireRun * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WireRunPtr(_result, false);
}

#pragma implementation_key(2662)
inline long TGAssembly::_IWireRunsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2663)
inline IUnknownPtr TGAssembly::_IWireRunsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2664)
inline TGAssembly::WireRunPtr TGAssembly::_IWireRunsAuto::Add ( _bstr_t PartFileName, const _variant_t & PartTemplateFileName, const _variant_t & PartFileDirectory ) {
    struct WireRun * _result = 0;
    HRESULT _hr = raw_Add(PartFileName, PartTemplateFileName, PartFileDirectory, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WireRunPtr(_result, false);
}

#pragma implementation_key(2665)
inline HRESULT TGAssembly::_IWireRunsAuto::Delete ( struct WireRun * WireRun ) {
    HRESULT _hr = raw_Delete(WireRun);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface WirePath wrapper method implementations
//

#pragma implementation_key(2666)
inline TGFramework::ApplicationPtr TGAssembly::WirePath::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2667)
inline IDispatchPtr TGAssembly::WirePath::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2668)
inline HRESULT TGAssembly::WirePath::AddSegment ( IDispatch * Segment, enum TubeSegmentAdditionStatusConstants * Status ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4003", Segment, Status);
}

#pragma implementation_key(2669)
inline HRESULT TGAssembly::WirePath::RemoveSegment ( IDispatch * Segment, enum TubeSegmentRemovalStatusConstants * Status ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4003", Segment, Status);
}

#pragma implementation_key(2670)
inline TGAssembly::WirePathSegmentsPtr TGAssembly::WirePath::GetSegments ( ) {
    struct WirePathSegments * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return WirePathSegmentsPtr(_result, false);
}

#pragma implementation_key(2671)
inline void TGAssembly::WirePath::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2672)
inline _bstr_t TGAssembly::WirePath::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2673)
inline void TGAssembly::WirePath::PutColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2674)
inline long TGAssembly::WirePath::GetColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2675)
inline void TGAssembly::WirePath::PutColorName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2676)
inline _bstr_t TGAssembly::WirePath::GetColorName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2677)
inline void TGAssembly::WirePath::PutMaterial ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2678)
inline _bstr_t TGAssembly::WirePath::GetMaterial ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2679)
inline void TGAssembly::WirePath::PutDiameter ( double _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2680)
inline double TGAssembly::WirePath::GetDiameter ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2681)
inline void TGAssembly::WirePath::PutLength ( double _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2682)
inline double TGAssembly::WirePath::GetLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2683)
inline void TGAssembly::WirePath::PutStartConnector ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2684)
inline _bstr_t TGAssembly::WirePath::GetStartConnector ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2685)
inline void TGAssembly::WirePath::PutEndConnector ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2686)
inline _bstr_t TGAssembly::WirePath::GetEndConnector ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2687)
inline void TGAssembly::WirePath::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2688)
inline VARIANT_BOOL TGAssembly::WirePath::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2689)
inline TGAssembly::AssemblyPropertyPtr TGAssembly::WirePath::GetAssemblyProperty ( ) {
    struct AssemblyProperty * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyPropertyPtr(_result, false);
}

#pragma implementation_key(2690)
inline enum TGAssembly::WirePathConstants TGAssembly::WirePath::GetType ( ) {
    enum WirePathConstants _result;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2691)
inline void TGAssembly::WirePath::PutType ( enum WirePathConstants _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2692)
inline TGAssembly::WirePathPtr TGAssembly::WirePath::GetCableMaster ( ) {
    struct WirePath * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return WirePathPtr(_result, false);
}

#pragma implementation_key(2693)
inline HRESULT TGAssembly::WirePath::AddCableMember ( struct WirePath * WirePath ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", WirePath);
}

#pragma implementation_key(2694)
inline HRESULT TGAssembly::WirePath::RemoveCableMember ( struct WirePath * WirePath ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", WirePath);
}

#pragma implementation_key(2695)
inline HRESULT TGAssembly::WirePath::SetCableMemberIndex ( struct WirePath * WirePath, long Index ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003", WirePath, Index);
}

#pragma implementation_key(2696)
inline HRESULT TGAssembly::WirePath::GetCableMemberIndex ( struct WirePath * WirePath, long * Index ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4003", WirePath, Index);
}

#pragma implementation_key(2697)
inline TGAssembly::WirePathCableMembersPtr TGAssembly::WirePath::GetCableMembers ( ) {
    struct WirePathCableMembers * _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return WirePathCableMembersPtr(_result, false);
}

#pragma implementation_key(2698)
inline TGAssembly::WirePathPtr TGAssembly::WirePath::GetCableSource ( ) {
    struct WirePath * _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return WirePathPtr(_result, false);
}

#pragma implementation_key(2699)
inline enum TGAssembly::WirePathConstantsEx TGAssembly::WirePath::GetTypeEx ( ) {
    enum WirePathConstantsEx _result;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2700)
inline void TGAssembly::WirePath::PutTypeEx ( enum WirePathConstantsEx _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

//
// dispinterface WirePathSegments wrapper method implementations
//

#pragma implementation_key(2701)
inline TGFramework::ApplicationPtr TGAssembly::WirePathSegments::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2702)
inline IDispatchPtr TGAssembly::WirePathSegments::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2703)
inline IDispatchPtr TGAssembly::WirePathSegments::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2704)
inline long TGAssembly::WirePathSegments::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IWirePathSegmentsAuto wrapper method implementations
//

#pragma implementation_key(2705)
inline TGFramework::ApplicationPtr TGAssembly::_IWirePathSegmentsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2706)
inline IDispatchPtr TGAssembly::_IWirePathSegmentsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2707)
inline IDispatchPtr TGAssembly::_IWirePathSegmentsAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2708)
inline long TGAssembly::_IWirePathSegmentsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2709)
inline IUnknownPtr TGAssembly::_IWirePathSegmentsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface AssemblyProperty wrapper method implementations
//

#pragma implementation_key(2710)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyProperty::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2711)
inline IDispatchPtr TGAssembly::AssemblyProperty::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2712)
inline _bstr_t TGAssembly::AssemblyProperty::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2713)
inline void TGAssembly::AssemblyProperty::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2714)
inline HRESULT TGAssembly::AssemblyProperty::AddPropertyItem ( _bstr_t ItemName, enum TGPart::PropertyTypeConstants ItemType, const _variant_t & ItemValue ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x000c", (BSTR)ItemName, ItemType, &ItemValue);
}

#pragma implementation_key(2715)
inline HRESULT TGAssembly::AssemblyProperty::DeletePropertyItem ( _bstr_t ItemName ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)ItemName);
}

#pragma implementation_key(2716)
inline HRESULT TGAssembly::AssemblyProperty::DeleteAllItems ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2717)
inline long TGAssembly::AssemblyProperty::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2718)
inline _bstr_t TGAssembly::AssemblyProperty::GetNameByIndex ( long IndexOfItem ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0003", IndexOfItem);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2719)
inline _variant_t TGAssembly::AssemblyProperty::GetItemValue ( _bstr_t ItemName ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x0008", (BSTR)ItemName);
    return _variant_t(_result, false);
}

#pragma implementation_key(2720)
inline enum TGPart::PropertyTypeConstants TGAssembly::AssemblyProperty::GetItemType ( _bstr_t ItemName ) {
    enum TGPart::PropertyTypeConstants _result;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)ItemName);
    return _result;
}

#pragma implementation_key(2721)
inline HRESULT TGAssembly::AssemblyProperty::UpdateItemValue ( _bstr_t CurrentItemName, enum TGPart::PropertyTypeConstants CurrentItemType, const _variant_t & NewItemValue ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x000c", (BSTR)CurrentItemName, CurrentItemType, &NewItemValue);
}

#pragma implementation_key(2722)
inline HRESULT TGAssembly::AssemblyProperty::GetDefaultValues ( long * NumberOfEntries, SAFEARRAY * * DefaultValues ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600c", NumberOfEntries, DefaultValues);
}

//
// interface _IAssemblyPropertyAuto wrapper method implementations
//

#pragma implementation_key(2723)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyPropertyAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2724)
inline IDispatchPtr TGAssembly::_IAssemblyPropertyAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2725)
inline _bstr_t TGAssembly::_IAssemblyPropertyAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2726)
inline void TGAssembly::_IAssemblyPropertyAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2727)
inline HRESULT TGAssembly::_IAssemblyPropertyAuto::AddPropertyItem ( _bstr_t ItemName, enum TGPart::PropertyTypeConstants ItemType, const _variant_t & ItemValue ) {
    HRESULT _hr = raw_AddPropertyItem(ItemName, ItemType, ItemValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2728)
inline HRESULT TGAssembly::_IAssemblyPropertyAuto::DeletePropertyItem ( _bstr_t ItemName ) {
    HRESULT _hr = raw_DeletePropertyItem(ItemName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2729)
inline HRESULT TGAssembly::_IAssemblyPropertyAuto::DeleteAllItems ( ) {
    HRESULT _hr = raw_DeleteAllItems();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2730)
inline long TGAssembly::_IAssemblyPropertyAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2731)
inline _bstr_t TGAssembly::_IAssemblyPropertyAuto::GetNameByIndex ( long IndexOfItem ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetNameByIndex(IndexOfItem, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2732)
inline _variant_t TGAssembly::_IAssemblyPropertyAuto::GetItemValue ( _bstr_t ItemName ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_GetItemValue(ItemName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(2733)
inline enum TGPart::PropertyTypeConstants TGAssembly::_IAssemblyPropertyAuto::GetItemType ( _bstr_t ItemName ) {
    enum TGPart::PropertyTypeConstants _result;
    HRESULT _hr = raw_GetItemType(ItemName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2734)
inline HRESULT TGAssembly::_IAssemblyPropertyAuto::UpdateItemValue ( _bstr_t CurrentItemName, enum TGPart::PropertyTypeConstants CurrentItemType, const _variant_t & NewItemValue ) {
    HRESULT _hr = raw_UpdateItemValue(CurrentItemName, CurrentItemType, NewItemValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2735)
inline HRESULT TGAssembly::_IAssemblyPropertyAuto::GetDefaultValues ( long * NumberOfEntries, SAFEARRAY * * DefaultValues ) {
    HRESULT _hr = raw_GetDefaultValues(NumberOfEntries, DefaultValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface WirePathCableMembers wrapper method implementations
//

#pragma implementation_key(2736)
inline TGFramework::ApplicationPtr TGAssembly::WirePathCableMembers::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2737)
inline IDispatchPtr TGAssembly::WirePathCableMembers::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2738)
inline TGAssembly::WirePathPtr TGAssembly::WirePathCableMembers::Item ( const _variant_t & Index ) {
    struct WirePath * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return WirePathPtr(_result, false);
}

#pragma implementation_key(2739)
inline long TGAssembly::WirePathCableMembers::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IWirePathCableMembersAuto wrapper method implementations
//

#pragma implementation_key(2740)
inline TGFramework::ApplicationPtr TGAssembly::_IWirePathCableMembersAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2741)
inline IDispatchPtr TGAssembly::_IWirePathCableMembersAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2742)
inline TGAssembly::WirePathPtr TGAssembly::_IWirePathCableMembersAuto::Item ( const _variant_t & Index ) {
    struct WirePath * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WirePathPtr(_result, false);
}

#pragma implementation_key(2743)
inline long TGAssembly::_IWirePathCableMembersAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2744)
inline IUnknownPtr TGAssembly::_IWirePathCableMembersAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface _IWirePathAuto wrapper method implementations
//

#pragma implementation_key(2745)
inline TGFramework::ApplicationPtr TGAssembly::_IWirePathAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2746)
inline IDispatchPtr TGAssembly::_IWirePathAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2747)
inline HRESULT TGAssembly::_IWirePathAuto::AddSegment ( IDispatch * Segment, enum TubeSegmentAdditionStatusConstants * Status ) {
    HRESULT _hr = raw_AddSegment(Segment, Status);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2748)
inline HRESULT TGAssembly::_IWirePathAuto::RemoveSegment ( IDispatch * Segment, enum TubeSegmentRemovalStatusConstants * Status ) {
    HRESULT _hr = raw_RemoveSegment(Segment, Status);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2749)
inline TGAssembly::WirePathSegmentsPtr TGAssembly::_IWirePathAuto::GetSegments ( ) {
    struct WirePathSegments * _result = 0;
    HRESULT _hr = get_Segments(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WirePathSegmentsPtr(_result, false);
}

#pragma implementation_key(2750)
inline void TGAssembly::_IWirePathAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2751)
inline _bstr_t TGAssembly::_IWirePathAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2752)
inline void TGAssembly::_IWirePathAuto::PutColor ( long Color ) {
    HRESULT _hr = put_Color(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2753)
inline long TGAssembly::_IWirePathAuto::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2754)
inline void TGAssembly::_IWirePathAuto::PutColorName ( _bstr_t ColorName ) {
    HRESULT _hr = put_ColorName(ColorName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2755)
inline _bstr_t TGAssembly::_IWirePathAuto::GetColorName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColorName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2756)
inline void TGAssembly::_IWirePathAuto::PutMaterial ( _bstr_t Material ) {
    HRESULT _hr = put_Material(Material);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2757)
inline _bstr_t TGAssembly::_IWirePathAuto::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2758)
inline void TGAssembly::_IWirePathAuto::PutDiameter ( double Diameter ) {
    HRESULT _hr = put_Diameter(Diameter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2759)
inline double TGAssembly::_IWirePathAuto::GetDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2760)
inline void TGAssembly::_IWirePathAuto::PutLength ( double Length ) {
    HRESULT _hr = put_Length(Length);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2761)
inline double TGAssembly::_IWirePathAuto::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2762)
inline void TGAssembly::_IWirePathAuto::PutStartConnector ( _bstr_t StartConnector ) {
    HRESULT _hr = put_StartConnector(StartConnector);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2763)
inline _bstr_t TGAssembly::_IWirePathAuto::GetStartConnector ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StartConnector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2764)
inline void TGAssembly::_IWirePathAuto::PutEndConnector ( _bstr_t EndConnector ) {
    HRESULT _hr = put_EndConnector(EndConnector);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2765)
inline _bstr_t TGAssembly::_IWirePathAuto::GetEndConnector ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_EndConnector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2766)
inline void TGAssembly::_IWirePathAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2767)
inline VARIANT_BOOL TGAssembly::_IWirePathAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2768)
inline TGAssembly::AssemblyPropertyPtr TGAssembly::_IWirePathAuto::GetAssemblyProperty ( ) {
    struct AssemblyProperty * _result = 0;
    HRESULT _hr = get_AssemblyProperty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPropertyPtr(_result, false);
}

#pragma implementation_key(2769)
inline enum TGAssembly::WirePathConstants TGAssembly::_IWirePathAuto::GetType ( ) {
    enum WirePathConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2770)
inline void TGAssembly::_IWirePathAuto::PutType ( enum WirePathConstants Type ) {
    HRESULT _hr = put_Type(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2771)
inline TGAssembly::WirePathPtr TGAssembly::_IWirePathAuto::GetCableMaster ( ) {
    struct WirePath * _result = 0;
    HRESULT _hr = get_CableMaster(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WirePathPtr(_result, false);
}

#pragma implementation_key(2772)
inline HRESULT TGAssembly::_IWirePathAuto::AddCableMember ( struct WirePath * WirePath ) {
    HRESULT _hr = raw_AddCableMember(WirePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2773)
inline HRESULT TGAssembly::_IWirePathAuto::RemoveCableMember ( struct WirePath * WirePath ) {
    HRESULT _hr = raw_RemoveCableMember(WirePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2774)
inline HRESULT TGAssembly::_IWirePathAuto::SetCableMemberIndex ( struct WirePath * WirePath, long Index ) {
    HRESULT _hr = raw_SetCableMemberIndex(WirePath, Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2775)
inline HRESULT TGAssembly::_IWirePathAuto::GetCableMemberIndex ( struct WirePath * WirePath, long * Index ) {
    HRESULT _hr = raw_GetCableMemberIndex(WirePath, Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2776)
inline TGAssembly::WirePathCableMembersPtr TGAssembly::_IWirePathAuto::GetCableMembers ( ) {
    struct WirePathCableMembers * _result = 0;
    HRESULT _hr = get_CableMembers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WirePathCableMembersPtr(_result, false);
}

#pragma implementation_key(2777)
inline TGAssembly::WirePathPtr TGAssembly::_IWirePathAuto::GetCableSource ( ) {
    struct WirePath * _result = 0;
    HRESULT _hr = get_CableSource(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WirePathPtr(_result, false);
}

#pragma implementation_key(2778)
inline enum TGAssembly::WirePathConstantsEx TGAssembly::_IWirePathAuto::GetTypeEx ( ) {
    enum WirePathConstantsEx _result;
    HRESULT _hr = get_TypeEx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2779)
inline void TGAssembly::_IWirePathAuto::PutTypeEx ( enum WirePathConstantsEx TypeEx ) {
    HRESULT _hr = put_TypeEx(TypeEx);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface WireRunPaths wrapper method implementations
//

#pragma implementation_key(2780)
inline TGFramework::ApplicationPtr TGAssembly::WireRunPaths::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2781)
inline IDispatchPtr TGAssembly::WireRunPaths::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2782)
inline TGAssembly::WirePathPtr TGAssembly::WireRunPaths::Item ( const _variant_t & Index ) {
    struct WirePath * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return WirePathPtr(_result, false);
}

#pragma implementation_key(2783)
inline long TGAssembly::WireRunPaths::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IWireRunAuto wrapper method implementations
//

#pragma implementation_key(2784)
inline TGFramework::ApplicationPtr TGAssembly::_IWireRunAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2785)
inline IDispatchPtr TGAssembly::_IWireRunAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2786)
inline HRESULT TGAssembly::_IWireRunAuto::AddWirePath ( struct WirePath * WirePath ) {
    HRESULT _hr = raw_AddWirePath(WirePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2787)
inline HRESULT TGAssembly::_IWireRunAuto::RemoveWirePath ( struct WirePath * WirePath ) {
    HRESULT _hr = raw_RemoveWirePath(WirePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2788)
inline TGAssembly::WireRunPathsPtr TGAssembly::_IWireRunAuto::GetWirePaths ( ) {
    struct WireRunPaths * _result = 0;
    HRESULT _hr = get_WirePaths(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WireRunPathsPtr(_result, false);
}

#pragma implementation_key(2789)
inline void TGAssembly::_IWireRunAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2790)
inline _bstr_t TGAssembly::_IWireRunAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2791)
inline void TGAssembly::_IWireRunAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2792)
inline VARIANT_BOOL TGAssembly::_IWireRunAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2793)
inline TGAssembly::OccurrencePtr TGAssembly::_IWireRunAuto::GetOccurrence ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(2794)
inline HRESULT TGAssembly::_IWireRunAuto::IsFrozen ( VARIANT_BOOL * bFrozen ) {
    HRESULT _hr = raw_IsFrozen(bFrozen);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2795)
inline HRESULT TGAssembly::_IWireRunAuto::IsLinked ( VARIANT_BOOL * bLinked ) {
    HRESULT _hr = raw_IsLinked(bLinked);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2796)
inline HRESULT TGAssembly::_IWireRunAuto::Freeze ( ) {
    HRESULT _hr = raw_Freeze();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2797)
inline HRESULT TGAssembly::_IWireRunAuto::Thaw ( ) {
    HRESULT _hr = raw_Thaw();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2798)
inline HRESULT TGAssembly::_IWireRunAuto::BreakLink ( ) {
    HRESULT _hr = raw_BreakLink();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IWireRunPathsAuto wrapper method implementations
//

#pragma implementation_key(2799)
inline TGFramework::ApplicationPtr TGAssembly::_IWireRunPathsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2800)
inline IDispatchPtr TGAssembly::_IWireRunPathsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2801)
inline TGAssembly::WirePathPtr TGAssembly::_IWireRunPathsAuto::Item ( const _variant_t & Index ) {
    struct WirePath * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WirePathPtr(_result, false);
}

#pragma implementation_key(2802)
inline long TGAssembly::_IWireRunPathsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2803)
inline IUnknownPtr TGAssembly::_IWireRunPathsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface WirePaths wrapper method implementations
//

#pragma implementation_key(2804)
inline TGFramework::ApplicationPtr TGAssembly::WirePaths::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2805)
inline IDispatchPtr TGAssembly::WirePaths::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2806)
inline TGAssembly::WirePathPtr TGAssembly::WirePaths::Item ( const _variant_t & Index ) {
    struct WirePath * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return WirePathPtr(_result, false);
}

#pragma implementation_key(2807)
inline long TGAssembly::WirePaths::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2808)
inline TGAssembly::WirePathPtr TGAssembly::WirePaths::Add ( _bstr_t Name ) {
    struct WirePath * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return WirePathPtr(_result, false);
}

#pragma implementation_key(2809)
inline HRESULT TGAssembly::WirePaths::Delete ( struct WirePath * WirePath ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", WirePath);
}

//
// interface _IWirePathsAuto wrapper method implementations
//

#pragma implementation_key(2810)
inline TGFramework::ApplicationPtr TGAssembly::_IWirePathsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2811)
inline IDispatchPtr TGAssembly::_IWirePathsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2812)
inline TGAssembly::WirePathPtr TGAssembly::_IWirePathsAuto::Item ( const _variant_t & Index ) {
    struct WirePath * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WirePathPtr(_result, false);
}

#pragma implementation_key(2813)
inline long TGAssembly::_IWirePathsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2814)
inline IUnknownPtr TGAssembly::_IWirePathsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2815)
inline TGAssembly::WirePathPtr TGAssembly::_IWirePathsAuto::Add ( _bstr_t Name ) {
    struct WirePath * _result = 0;
    HRESULT _hr = raw_Add(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WirePathPtr(_result, false);
}

#pragma implementation_key(2816)
inline HRESULT TGAssembly::_IWirePathsAuto::Delete ( struct WirePath * WirePath ) {
    HRESULT _hr = raw_Delete(WirePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface AssemblyProperties wrapper method implementations
//

#pragma implementation_key(2817)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyProperties::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2818)
inline IDispatchPtr TGAssembly::AssemblyProperties::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2819)
inline TGAssembly::AssemblyPropertyPtr TGAssembly::AssemblyProperties::Item ( const _variant_t & Index ) {
    struct AssemblyProperty * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyPropertyPtr(_result, false);
}

#pragma implementation_key(2820)
inline long TGAssembly::AssemblyProperties::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2821)
inline TGAssembly::AssemblyPropertyPtr TGAssembly::AssemblyProperties::AddProperty ( _bstr_t MemberName ) {
    struct AssemblyProperty * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)MemberName);
    return AssemblyPropertyPtr(_result, false);
}

#pragma implementation_key(2822)
inline TGAssembly::DefaultCustomOccurrencePropertiesPtr TGAssembly::AssemblyProperties::GetDefaultCustomOccurrenceProperties ( ) {
    struct DefaultCustomOccurrenceProperties * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DefaultCustomOccurrencePropertiesPtr(_result, false);
}

#pragma implementation_key(2823)
inline HRESULT TGAssembly::AssemblyProperties::LoadCustomOccurrenceProperties ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2824)
inline HRESULT TGAssembly::AssemblyProperties::DeleteCustomOccurrenceProperties ( SAFEARRAY * * CustomOccurrencePropertyNames ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6008", CustomOccurrencePropertyNames);
}

//
// dispinterface DefaultCustomOccurrenceProperties wrapper method implementations
//

#pragma implementation_key(2825)
inline TGFramework::ApplicationPtr TGAssembly::DefaultCustomOccurrenceProperties::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2826)
inline IDispatchPtr TGAssembly::DefaultCustomOccurrenceProperties::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2827)
inline TGAssembly::AssemblyPropertyPtr TGAssembly::DefaultCustomOccurrenceProperties::Item ( const _variant_t & Index ) {
    struct AssemblyProperty * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyPropertyPtr(_result, false);
}

#pragma implementation_key(2828)
inline long TGAssembly::DefaultCustomOccurrenceProperties::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IAssemblyPropertiesAuto wrapper method implementations
//

#pragma implementation_key(2829)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyPropertiesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2830)
inline IDispatchPtr TGAssembly::_IAssemblyPropertiesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2831)
inline TGAssembly::AssemblyPropertyPtr TGAssembly::_IAssemblyPropertiesAuto::Item ( const _variant_t & Index ) {
    struct AssemblyProperty * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPropertyPtr(_result, false);
}

#pragma implementation_key(2832)
inline long TGAssembly::_IAssemblyPropertiesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2833)
inline IUnknownPtr TGAssembly::_IAssemblyPropertiesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2834)
inline TGAssembly::AssemblyPropertyPtr TGAssembly::_IAssemblyPropertiesAuto::AddProperty ( _bstr_t MemberName ) {
    struct AssemblyProperty * _result = 0;
    HRESULT _hr = raw_AddProperty(MemberName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPropertyPtr(_result, false);
}

#pragma implementation_key(2835)
inline TGAssembly::DefaultCustomOccurrencePropertiesPtr TGAssembly::_IAssemblyPropertiesAuto::GetDefaultCustomOccurrenceProperties ( ) {
    struct DefaultCustomOccurrenceProperties * _result = 0;
    HRESULT _hr = get_DefaultCustomOccurrenceProperties(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DefaultCustomOccurrencePropertiesPtr(_result, false);
}

#pragma implementation_key(2836)
inline HRESULT TGAssembly::_IAssemblyPropertiesAuto::LoadCustomOccurrenceProperties ( ) {
    HRESULT _hr = raw_LoadCustomOccurrenceProperties();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2837)
inline HRESULT TGAssembly::_IAssemblyPropertiesAuto::DeleteCustomOccurrenceProperties ( SAFEARRAY * * CustomOccurrencePropertyNames ) {
    HRESULT _hr = raw_DeleteCustomOccurrenceProperties(CustomOccurrencePropertyNames);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IDefaultCustomOccurrencePropertiesAuto wrapper method implementations
//

#pragma implementation_key(2838)
inline TGFramework::ApplicationPtr TGAssembly::_IDefaultCustomOccurrencePropertiesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2839)
inline IDispatchPtr TGAssembly::_IDefaultCustomOccurrencePropertiesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2840)
inline TGAssembly::AssemblyPropertyPtr TGAssembly::_IDefaultCustomOccurrencePropertiesAuto::Item ( const _variant_t & Index ) {
    struct AssemblyProperty * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPropertyPtr(_result, false);
}

#pragma implementation_key(2841)
inline long TGAssembly::_IDefaultCustomOccurrencePropertiesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2842)
inline IUnknownPtr TGAssembly::_IDefaultCustomOccurrencePropertiesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface CurveSegments wrapper method implementations
//

#pragma implementation_key(2843)
inline TGFramework::ApplicationPtr TGAssembly::CurveSegments::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2844)
inline IDispatchPtr TGAssembly::CurveSegments::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2845)
inline TGAssembly::CurveSegmentPtr TGAssembly::CurveSegments::Item ( const _variant_t & Index ) {
    struct CurveSegment * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return CurveSegmentPtr(_result, false);
}

#pragma implementation_key(2846)
inline long TGAssembly::CurveSegments::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2847)
inline TGAssembly::CurveSegmentPtr TGAssembly::CurveSegments::Add ( long PathSegmentsCount, SAFEARRAY * * PathSegments, enum CurveSegmentValidationConstants * Validation ) {
    struct CurveSegment * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x4003", PathSegmentsCount, PathSegments, Validation);
    return CurveSegmentPtr(_result, false);
}

//
// dispinterface CurveSegment wrapper method implementations
//

#pragma implementation_key(2848)
inline TGFramework::ApplicationPtr TGAssembly::CurveSegment::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2849)
inline IDispatchPtr TGAssembly::CurveSegment::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2850)
inline IDispatchPtr TGAssembly::CurveSegment::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2851)
inline VARIANT_BOOL TGAssembly::CurveSegment::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2852)
inline enum TGFramework::ObjectType TGAssembly::CurveSegment::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2853)
inline enum TGAssembly::CurveSegmentValidationConstants TGAssembly::CurveSegment::GetValidation ( ) {
    enum CurveSegmentValidationConstants _result;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2854)
inline enum TGAssembly::CurveSegmentWhichKeypointsConstants TGAssembly::CurveSegment::GetWhichKeypoints ( ) {
    enum CurveSegmentWhichKeypointsConstants _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2855)
inline void TGAssembly::CurveSegment::PutWhichKeypoints ( enum CurveSegmentWhichKeypointsConstants _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2856)
inline double TGAssembly::CurveSegment::GetStartDerivativeMagnitude ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2857)
inline void TGAssembly::CurveSegment::PutStartDerivativeMagnitude ( double _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2858)
inline double TGAssembly::CurveSegment::GetEndDerivativeMagnitude ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2859)
inline void TGAssembly::CurveSegment::PutEndDerivativeMagnitude ( double _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2860)
inline HRESULT TGAssembly::CurveSegment::AddPathSegment ( IDispatch * pPathSegment, enum CurveSegmentPathAdditionStatusConstants * AdditionStatus ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4003", pPathSegment, AdditionStatus);
}

#pragma implementation_key(2861)
inline HRESULT TGAssembly::CurveSegment::RemovePathSegment ( IDispatch * pPathSegment, enum CurveSegmentPathRemovalStatusConstants * RemovalStatus ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4003", pPathSegment, RemovalStatus);
}

#pragma implementation_key(2862)
inline HRESULT TGAssembly::CurveSegment::ShowPathSegments ( ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2863)
inline HRESULT TGAssembly::CurveSegment::HidePathSegments ( ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2864)
inline IDispatchPtr TGAssembly::CurveSegment::GetPathSegment ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2865)
inline long TGAssembly::CurveSegment::GetPathSegmentsCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2866)
inline HRESULT TGAssembly::CurveSegment::Delete ( ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface _ICurveSegmentsAuto wrapper method implementations
//

#pragma implementation_key(2867)
inline TGFramework::ApplicationPtr TGAssembly::_ICurveSegmentsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2868)
inline IDispatchPtr TGAssembly::_ICurveSegmentsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2869)
inline TGAssembly::CurveSegmentPtr TGAssembly::_ICurveSegmentsAuto::Item ( const _variant_t & Index ) {
    struct CurveSegment * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CurveSegmentPtr(_result, false);
}

#pragma implementation_key(2870)
inline IUnknownPtr TGAssembly::_ICurveSegmentsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2871)
inline long TGAssembly::_ICurveSegmentsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2872)
inline TGAssembly::CurveSegmentPtr TGAssembly::_ICurveSegmentsAuto::Add ( long PathSegmentsCount, SAFEARRAY * * PathSegments, enum CurveSegmentValidationConstants * Validation ) {
    struct CurveSegment * _result = 0;
    HRESULT _hr = raw_Add(PathSegmentsCount, PathSegments, Validation, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CurveSegmentPtr(_result, false);
}

//
// interface _ICurveSegmentAuto wrapper method implementations
//

#pragma implementation_key(2873)
inline TGFramework::ApplicationPtr TGAssembly::_ICurveSegmentAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2874)
inline IDispatchPtr TGAssembly::_ICurveSegmentAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2875)
inline IDispatchPtr TGAssembly::_ICurveSegmentAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2876)
inline VARIANT_BOOL TGAssembly::_ICurveSegmentAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2877)
inline enum TGFramework::ObjectType TGAssembly::_ICurveSegmentAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2878)
inline enum TGAssembly::CurveSegmentValidationConstants TGAssembly::_ICurveSegmentAuto::GetValidation ( ) {
    enum CurveSegmentValidationConstants _result;
    HRESULT _hr = get_Validation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2879)
inline enum TGAssembly::CurveSegmentWhichKeypointsConstants TGAssembly::_ICurveSegmentAuto::GetWhichKeypoints ( ) {
    enum CurveSegmentWhichKeypointsConstants _result;
    HRESULT _hr = get_WhichKeypoints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2880)
inline void TGAssembly::_ICurveSegmentAuto::PutWhichKeypoints ( enum CurveSegmentWhichKeypointsConstants WhichKeypoints ) {
    HRESULT _hr = put_WhichKeypoints(WhichKeypoints);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2881)
inline double TGAssembly::_ICurveSegmentAuto::GetStartDerivativeMagnitude ( ) {
    double _result = 0;
    HRESULT _hr = get_StartDerivativeMagnitude(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2882)
inline void TGAssembly::_ICurveSegmentAuto::PutStartDerivativeMagnitude ( double StartDerivativeMagnitude ) {
    HRESULT _hr = put_StartDerivativeMagnitude(StartDerivativeMagnitude);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2883)
inline double TGAssembly::_ICurveSegmentAuto::GetEndDerivativeMagnitude ( ) {
    double _result = 0;
    HRESULT _hr = get_EndDerivativeMagnitude(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2884)
inline void TGAssembly::_ICurveSegmentAuto::PutEndDerivativeMagnitude ( double EndDerivativeMagnitude ) {
    HRESULT _hr = put_EndDerivativeMagnitude(EndDerivativeMagnitude);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2885)
inline HRESULT TGAssembly::_ICurveSegmentAuto::AddPathSegment ( IDispatch * pPathSegment, enum CurveSegmentPathAdditionStatusConstants * AdditionStatus ) {
    HRESULT _hr = raw_AddPathSegment(pPathSegment, AdditionStatus);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2886)
inline HRESULT TGAssembly::_ICurveSegmentAuto::RemovePathSegment ( IDispatch * pPathSegment, enum CurveSegmentPathRemovalStatusConstants * RemovalStatus ) {
    HRESULT _hr = raw_RemovePathSegment(pPathSegment, RemovalStatus);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2887)
inline HRESULT TGAssembly::_ICurveSegmentAuto::ShowPathSegments ( ) {
    HRESULT _hr = raw_ShowPathSegments();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2888)
inline HRESULT TGAssembly::_ICurveSegmentAuto::HidePathSegments ( ) {
    HRESULT _hr = raw_HidePathSegments();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2889)
inline IDispatchPtr TGAssembly::_ICurveSegmentAuto::GetPathSegment ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetPathSegment(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2890)
inline long TGAssembly::_ICurveSegmentAuto::GetPathSegmentsCount ( ) {
    long _result = 0;
    HRESULT _hr = get_PathSegmentsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2891)
inline HRESULT TGAssembly::_ICurveSegmentAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface VirtualComponentOccurrences wrapper method implementations
//

#pragma implementation_key(2892)
inline TGFramework::ApplicationPtr TGAssembly::VirtualComponentOccurrences::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2893)
inline IDispatchPtr TGAssembly::VirtualComponentOccurrences::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2894)
inline TGAssembly::VirtualComponentOccurrencePtr TGAssembly::VirtualComponentOccurrences::Item ( const _variant_t & Index ) {
    struct VirtualComponentOccurrence * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return VirtualComponentOccurrencePtr(_result, false);
}

#pragma implementation_key(2895)
inline long TGAssembly::VirtualComponentOccurrences::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2896)
inline TGAssembly::VirtualComponentOccurrencePtr TGAssembly::VirtualComponentOccurrences::Add ( _bstr_t VirtualComponentName, enum VirtualComponentTypeConstants VirtualComponentType, enum VirtualComponentStatusConstants * ComponentStatusConstants ) {
    struct VirtualComponentOccurrence * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003\x4003", (BSTR)VirtualComponentName, VirtualComponentType, ComponentStatusConstants);
    return VirtualComponentOccurrencePtr(_result, false);
}

#pragma implementation_key(2897)
inline TGAssembly::VirtualComponentOccurrencePtr TGAssembly::VirtualComponentOccurrences::AddAsPreDefined ( _bstr_t FileName, enum VirtualComponentStatusConstants * ComponentStatusConstants ) {
    struct VirtualComponentOccurrence * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x4003", (BSTR)FileName, ComponentStatusConstants);
    return VirtualComponentOccurrencePtr(_result, false);
}

#pragma implementation_key(2898)
inline TGAssembly::VirtualComponentOccurrencePtr TGAssembly::VirtualComponentOccurrences::AddBIDM ( _bstr_t bstrDocumentNumber, _bstr_t bstrRevisionID, enum VirtualComponentTypeConstants VirtualComponentType, enum VirtualComponentStatusConstants * ComponentStatusConstants ) {
    struct VirtualComponentOccurrence * _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008\x0003\x4003", (BSTR)bstrDocumentNumber, (BSTR)bstrRevisionID, VirtualComponentType, ComponentStatusConstants);
    return VirtualComponentOccurrencePtr(_result, false);
}

//
// dispinterface VirtualComponentOccurrence wrapper method implementations
//

#pragma implementation_key(2899)
inline TGFramework::ApplicationPtr TGAssembly::VirtualComponentOccurrence::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2900)
inline IDispatchPtr TGAssembly::VirtualComponentOccurrence::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2901)
inline IDispatchPtr TGAssembly::VirtualComponentOccurrence::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2902)
inline VARIANT_BOOL TGAssembly::VirtualComponentOccurrence::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2903)
inline enum TGFramework::ObjectType TGAssembly::VirtualComponentOccurrence::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2904)
inline HRESULT TGAssembly::VirtualComponentOccurrence::Delete ( ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2905)
inline _bstr_t TGAssembly::VirtualComponentOccurrence::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2906)
inline TGAssembly::VirtualComponentPtr TGAssembly::VirtualComponentOccurrence::GetVirtualComponent ( ) {
    struct VirtualComponent * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return VirtualComponentPtr(_result, false);
}

#pragma implementation_key(2907)
inline HRESULT TGAssembly::VirtualComponentOccurrence::MoveTo ( struct VirtualComponent * VirtualComponent ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", VirtualComponent);
}

#pragma implementation_key(2908)
inline VARIANT_BOOL TGAssembly::VirtualComponentOccurrence::GetIsPositioned ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2909)
inline HRESULT TGAssembly::VirtualComponentOccurrence::IsMaster ( VARIANT_BOOL * IsMaster, VARIANT * ppMasterOccurrence ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b\x480c", IsMaster, ppMasterOccurrence);
}

#pragma implementation_key(2910)
inline VARIANT_BOOL TGAssembly::VirtualComponentOccurrence::GetIsPreDefined ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2911)
inline HRESULT TGAssembly::VirtualComponentOccurrence::ReplaceComponent ( _bstr_t FileName, VARIANT_BOOL ReplaceAll, VARIANT * ComponentStatusConstants ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x000b\x480c", (BSTR)FileName, ReplaceAll, ComponentStatusConstants);
}

#pragma implementation_key(2912)
inline HRESULT TGAssembly::VirtualComponentOccurrence::PositionComponent ( IDispatch * pProfile, double x, double y, const _variant_t & Angle, VARIANT * ComponentStatusConstants ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x080c\x480c", pProfile, x, y, &Angle, ComponentStatusConstants);
}

#pragma implementation_key(2913)
inline HRESULT TGAssembly::VirtualComponentOccurrence::SetViewDefinition ( enum VirtualComponentPublishConstants PublishOn, const _variant_t & SketchName ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x080c", PublishOn, &SketchName);
}

#pragma implementation_key(2914)
inline HRESULT TGAssembly::VirtualComponentOccurrence::GetViewDefinition ( enum VirtualComponentPublishConstants * PublishOn, VARIANT * SketchName ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x480c", PublishOn, SketchName);
}

#pragma implementation_key(2915)
inline HRESULT TGAssembly::VirtualComponentOccurrence::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(2916)
inline HRESULT TGAssembly::VirtualComponentOccurrence::GetOrigin ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(2917)
inline HRESULT TGAssembly::VirtualComponentOccurrence::SetOriginByKeypoints ( IDispatch * Object1, enum TGFramework::KeyPointType KeyPointTypeConstant1, IDispatch * Object2, enum TGFramework::KeyPointType KeyPointTypeConstant2 ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003\x0009\x0003", Object1, KeyPointTypeConstant1, Object2, KeyPointTypeConstant2);
}

#pragma implementation_key(2918)
inline HRESULT TGAssembly::VirtualComponentOccurrence::GetOriginByKeypoints ( IDispatch * * Object1, enum TGFramework::KeyPointType * KeyPointTypeConstant1, IDispatch * * Object2, enum TGFramework::KeyPointType * KeyPointTypeConstant2 ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4009\x4003", Object1, KeyPointTypeConstant1, Object2, KeyPointTypeConstant2);
}

#pragma implementation_key(2919)
inline void TGAssembly::VirtualComponentOccurrence::PutAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2920)
inline double TGAssembly::VirtualComponentOccurrence::GetAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2921)
inline HRESULT TGAssembly::VirtualComponentOccurrence::Show ( ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2922)
inline HRESULT TGAssembly::VirtualComponentOccurrence::ShowAll ( ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2923)
inline HRESULT TGAssembly::VirtualComponentOccurrence::Hide ( ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2924)
inline HRESULT TGAssembly::VirtualComponentOccurrence::HideAll ( ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2925)
inline VARIANT_BOOL TGAssembly::VirtualComponentOccurrence::IsVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2926)
inline HRESULT TGAssembly::VirtualComponentOccurrence::IsSource ( VARIANT_BOOL * IsSource, VARIANT * ppSourceOccurrence ) {
    return _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b\x480c", IsSource, ppSourceOccurrence);
}

//
// dispinterface VirtualComponent wrapper method implementations
//

#pragma implementation_key(2927)
inline TGFramework::ApplicationPtr TGAssembly::VirtualComponent::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2928)
inline IDispatchPtr TGAssembly::VirtualComponent::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2929)
inline IDispatchPtr TGAssembly::VirtualComponent::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2930)
inline VARIANT_BOOL TGAssembly::VirtualComponent::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2931)
inline enum TGFramework::ObjectType TGAssembly::VirtualComponent::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2932)
inline HRESULT TGAssembly::VirtualComponent::Delete ( ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2933)
inline _bstr_t TGAssembly::VirtualComponent::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2934)
inline void TGAssembly::VirtualComponent::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2935)
inline enum TGAssembly::VirtualComponentTypeConstants TGAssembly::VirtualComponent::GetVirtualComponentType ( ) {
    enum VirtualComponentTypeConstants _result;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2936)
inline IDispatchPtr TGAssembly::VirtualComponent::GetProperties ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2937)
inline TGAssembly::VirtualComponentOccurrencesPtr TGAssembly::VirtualComponent::GetVirtualComponentOccurrences ( ) {
    struct VirtualComponentOccurrences * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return VirtualComponentOccurrencesPtr(_result, false);
}

#pragma implementation_key(2938)
inline _bstr_t TGAssembly::VirtualComponent::GetPublishPath ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2939)
inline void TGAssembly::VirtualComponent::PutPublishPath ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2940)
inline _bstr_t TGAssembly::VirtualComponent::GetTemplateName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2941)
inline void TGAssembly::VirtualComponent::PutTemplateName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2942)
inline HRESULT TGAssembly::VirtualComponent::SetGeometry ( long NumElements, SAFEARRAY * * GeomElements ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009", NumElements, GeomElements);
}

#pragma implementation_key(2943)
inline HRESULT TGAssembly::VirtualComponent::GetGeometry ( long * NumElements, SAFEARRAY * * GeomElements ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumElements, GeomElements);
}

#pragma implementation_key(2944)
inline HRESULT TGAssembly::VirtualComponent::RemoveGeometry ( long NumElements, SAFEARRAY * * GeomElements ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009", NumElements, GeomElements);
}

#pragma implementation_key(2945)
inline HRESULT TGAssembly::VirtualComponent::UpdateComponent ( VARIANT * ComponentStatusConstants ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x480c", ComponentStatusConstants);
}

//
// interface _IVirtualComponentAuto wrapper method implementations
//

#pragma implementation_key(2946)
inline TGFramework::ApplicationPtr TGAssembly::_IVirtualComponentAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2947)
inline IDispatchPtr TGAssembly::_IVirtualComponentAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2948)
inline IDispatchPtr TGAssembly::_IVirtualComponentAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2949)
inline VARIANT_BOOL TGAssembly::_IVirtualComponentAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2950)
inline enum TGFramework::ObjectType TGAssembly::_IVirtualComponentAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2951)
inline HRESULT TGAssembly::_IVirtualComponentAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2952)
inline _bstr_t TGAssembly::_IVirtualComponentAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2953)
inline void TGAssembly::_IVirtualComponentAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2954)
inline enum TGAssembly::VirtualComponentTypeConstants TGAssembly::_IVirtualComponentAuto::GetVirtualComponentType ( ) {
    enum VirtualComponentTypeConstants _result;
    HRESULT _hr = get_VirtualComponentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2955)
inline IDispatchPtr TGAssembly::_IVirtualComponentAuto::GetProperties ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Properties(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2956)
inline TGAssembly::VirtualComponentOccurrencesPtr TGAssembly::_IVirtualComponentAuto::GetVirtualComponentOccurrences ( ) {
    struct VirtualComponentOccurrences * _result = 0;
    HRESULT _hr = get_VirtualComponentOccurrences(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return VirtualComponentOccurrencesPtr(_result, false);
}

#pragma implementation_key(2957)
inline _bstr_t TGAssembly::_IVirtualComponentAuto::GetPublishPath ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PublishPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2958)
inline void TGAssembly::_IVirtualComponentAuto::PutPublishPath ( _bstr_t PublishPath ) {
    HRESULT _hr = put_PublishPath(PublishPath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2959)
inline _bstr_t TGAssembly::_IVirtualComponentAuto::GetTemplateName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TemplateName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2960)
inline void TGAssembly::_IVirtualComponentAuto::PutTemplateName ( _bstr_t TemplateName ) {
    HRESULT _hr = put_TemplateName(TemplateName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2961)
inline HRESULT TGAssembly::_IVirtualComponentAuto::SetGeometry ( long NumElements, SAFEARRAY * * GeomElements ) {
    HRESULT _hr = raw_SetGeometry(NumElements, GeomElements);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2962)
inline HRESULT TGAssembly::_IVirtualComponentAuto::GetGeometry ( long * NumElements, SAFEARRAY * * GeomElements ) {
    HRESULT _hr = raw_GetGeometry(NumElements, GeomElements);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2963)
inline HRESULT TGAssembly::_IVirtualComponentAuto::RemoveGeometry ( long NumElements, SAFEARRAY * * GeomElements ) {
    HRESULT _hr = raw_RemoveGeometry(NumElements, GeomElements);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2964)
inline HRESULT TGAssembly::_IVirtualComponentAuto::UpdateComponent ( VARIANT * ComponentStatusConstants ) {
    HRESULT _hr = raw_UpdateComponent(ComponentStatusConstants);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IVirtualComponentOccurrenceAuto wrapper method implementations
//

#pragma implementation_key(2965)
inline TGFramework::ApplicationPtr TGAssembly::_IVirtualComponentOccurrenceAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2966)
inline IDispatchPtr TGAssembly::_IVirtualComponentOccurrenceAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2967)
inline IDispatchPtr TGAssembly::_IVirtualComponentOccurrenceAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2968)
inline VARIANT_BOOL TGAssembly::_IVirtualComponentOccurrenceAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2969)
inline enum TGFramework::ObjectType TGAssembly::_IVirtualComponentOccurrenceAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2970)
inline HRESULT TGAssembly::_IVirtualComponentOccurrenceAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2971)
inline _bstr_t TGAssembly::_IVirtualComponentOccurrenceAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2972)
inline TGAssembly::VirtualComponentPtr TGAssembly::_IVirtualComponentOccurrenceAuto::GetVirtualComponent ( ) {
    struct VirtualComponent * _result = 0;
    HRESULT _hr = get_VirtualComponent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return VirtualComponentPtr(_result, false);
}

#pragma implementation_key(2973)
inline HRESULT TGAssembly::_IVirtualComponentOccurrenceAuto::MoveTo ( struct VirtualComponent * VirtualComponent ) {
    HRESULT _hr = raw_MoveTo(VirtualComponent);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2974)
inline VARIANT_BOOL TGAssembly::_IVirtualComponentOccurrenceAuto::GetIsPositioned ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsPositioned(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2975)
inline HRESULT TGAssembly::_IVirtualComponentOccurrenceAuto::IsMaster ( VARIANT_BOOL * IsMaster, VARIANT * ppMasterOccurrence ) {
    HRESULT _hr = raw_IsMaster(IsMaster, ppMasterOccurrence);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2976)
inline VARIANT_BOOL TGAssembly::_IVirtualComponentOccurrenceAuto::GetIsPreDefined ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsPreDefined(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2977)
inline HRESULT TGAssembly::_IVirtualComponentOccurrenceAuto::ReplaceComponent ( _bstr_t FileName, VARIANT_BOOL ReplaceAll, VARIANT * ComponentStatusConstants ) {
    HRESULT _hr = raw_ReplaceComponent(FileName, ReplaceAll, ComponentStatusConstants);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2978)
inline HRESULT TGAssembly::_IVirtualComponentOccurrenceAuto::PositionComponent ( IDispatch * pProfile, double x, double y, const _variant_t & Angle, VARIANT * ComponentStatusConstants ) {
    HRESULT _hr = raw_PositionComponent(pProfile, x, y, Angle, ComponentStatusConstants);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2979)
inline HRESULT TGAssembly::_IVirtualComponentOccurrenceAuto::SetViewDefinition ( enum VirtualComponentPublishConstants PublishOn, const _variant_t & SketchName ) {
    HRESULT _hr = raw_SetViewDefinition(PublishOn, SketchName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2980)
inline HRESULT TGAssembly::_IVirtualComponentOccurrenceAuto::GetViewDefinition ( enum VirtualComponentPublishConstants * PublishOn, VARIANT * SketchName ) {
    HRESULT _hr = raw_GetViewDefinition(PublishOn, SketchName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2981)
inline HRESULT TGAssembly::_IVirtualComponentOccurrenceAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2982)
inline HRESULT TGAssembly::_IVirtualComponentOccurrenceAuto::GetOrigin ( double * x, double * y ) {
    HRESULT _hr = raw_GetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2983)
inline HRESULT TGAssembly::_IVirtualComponentOccurrenceAuto::SetOriginByKeypoints ( IDispatch * Object1, enum TGFramework::KeyPointType KeyPointTypeConstant1, IDispatch * Object2, enum TGFramework::KeyPointType KeyPointTypeConstant2 ) {
    HRESULT _hr = raw_SetOriginByKeypoints(Object1, KeyPointTypeConstant1, Object2, KeyPointTypeConstant2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2984)
inline HRESULT TGAssembly::_IVirtualComponentOccurrenceAuto::GetOriginByKeypoints ( IDispatch * * Object1, enum TGFramework::KeyPointType * KeyPointTypeConstant1, IDispatch * * Object2, enum TGFramework::KeyPointType * KeyPointTypeConstant2 ) {
    HRESULT _hr = raw_GetOriginByKeypoints(Object1, KeyPointTypeConstant1, Object2, KeyPointTypeConstant2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2985)
inline void TGAssembly::_IVirtualComponentOccurrenceAuto::PutAngle ( double dAngle ) {
    HRESULT _hr = put_Angle(dAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2986)
inline double TGAssembly::_IVirtualComponentOccurrenceAuto::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2987)
inline HRESULT TGAssembly::_IVirtualComponentOccurrenceAuto::Show ( ) {
    HRESULT _hr = raw_Show();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2988)
inline HRESULT TGAssembly::_IVirtualComponentOccurrenceAuto::ShowAll ( ) {
    HRESULT _hr = raw_ShowAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2989)
inline HRESULT TGAssembly::_IVirtualComponentOccurrenceAuto::Hide ( ) {
    HRESULT _hr = raw_Hide();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2990)
inline HRESULT TGAssembly::_IVirtualComponentOccurrenceAuto::HideAll ( ) {
    HRESULT _hr = raw_HideAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2991)
inline VARIANT_BOOL TGAssembly::_IVirtualComponentOccurrenceAuto::IsVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2992)
inline HRESULT TGAssembly::_IVirtualComponentOccurrenceAuto::IsSource ( VARIANT_BOOL * IsSource, VARIANT * ppSourceOccurrence ) {
    HRESULT _hr = raw_IsSource(IsSource, ppSourceOccurrence);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IVirtualComponentOccurrencesAuto wrapper method implementations
//

#pragma implementation_key(2993)
inline TGFramework::ApplicationPtr TGAssembly::_IVirtualComponentOccurrencesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2994)
inline IDispatchPtr TGAssembly::_IVirtualComponentOccurrencesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2995)
inline TGAssembly::VirtualComponentOccurrencePtr TGAssembly::_IVirtualComponentOccurrencesAuto::Item ( const _variant_t & Index ) {
    struct VirtualComponentOccurrence * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return VirtualComponentOccurrencePtr(_result, false);
}

#pragma implementation_key(2996)
inline IUnknownPtr TGAssembly::_IVirtualComponentOccurrencesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2997)
inline long TGAssembly::_IVirtualComponentOccurrencesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2998)
inline TGAssembly::VirtualComponentOccurrencePtr TGAssembly::_IVirtualComponentOccurrencesAuto::Add ( _bstr_t VirtualComponentName, enum VirtualComponentTypeConstants VirtualComponentType, enum VirtualComponentStatusConstants * ComponentStatusConstants ) {
    struct VirtualComponentOccurrence * _result = 0;
    HRESULT _hr = raw_Add(VirtualComponentName, VirtualComponentType, ComponentStatusConstants, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return VirtualComponentOccurrencePtr(_result, false);
}

#pragma implementation_key(2999)
inline TGAssembly::VirtualComponentOccurrencePtr TGAssembly::_IVirtualComponentOccurrencesAuto::AddAsPreDefined ( _bstr_t FileName, enum VirtualComponentStatusConstants * ComponentStatusConstants ) {
    struct VirtualComponentOccurrence * _result = 0;
    HRESULT _hr = raw_AddAsPreDefined(FileName, ComponentStatusConstants, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return VirtualComponentOccurrencePtr(_result, false);
}

#pragma implementation_key(3000)
inline TGAssembly::VirtualComponentOccurrencePtr TGAssembly::_IVirtualComponentOccurrencesAuto::AddBIDM ( _bstr_t bstrDocumentNumber, _bstr_t bstrRevisionID, enum VirtualComponentTypeConstants VirtualComponentType, enum VirtualComponentStatusConstants * ComponentStatusConstants ) {
    struct VirtualComponentOccurrence * _result = 0;
    HRESULT _hr = raw_AddBIDM(bstrDocumentNumber, bstrRevisionID, VirtualComponentType, ComponentStatusConstants, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return VirtualComponentOccurrencePtr(_result, false);
}

//
// dispinterface StructuralFrames wrapper method implementations
//

#pragma implementation_key(3001)
inline TGFramework::ApplicationPtr TGAssembly::StructuralFrames::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3002)
inline IDispatchPtr TGAssembly::StructuralFrames::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3003)
inline TGAssembly::StructuralFramePtr TGAssembly::StructuralFrames::Item ( const _variant_t & Index ) {
    struct StructuralFrame * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return StructuralFramePtr(_result, false);
}

#pragma implementation_key(3004)
inline long TGAssembly::StructuralFrames::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3005)
inline TGAssembly::StructuralFramePtr TGAssembly::StructuralFrames::Add ( _bstr_t PartFileName, long NumPaths, SAFEARRAY * * Path, const _variant_t & GlobalEndConditions, const _variant_t & GlobalEndConditionValue, const _variant_t & AutoPosition ) {
    struct StructuralFrame * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003\x6009\x080c\x080c\x080c", (BSTR)PartFileName, NumPaths, Path, &GlobalEndConditions, &GlobalEndConditionValue, &AutoPosition);
    return StructuralFramePtr(_result, false);
}

#pragma implementation_key(3006)
inline TGAssembly::StructuralFramePtr TGAssembly::StructuralFrames::AddByOrientation ( _bstr_t PartFileName, _bstr_t CoOrdinateSystemName, long NumPaths, SAFEARRAY * * Path, const _variant_t & PreferredOrientationPlane, const _variant_t & GlobalEndConditions, const _variant_t & GlobalEndConditionValue, const _variant_t & AutoPosition ) {
    struct StructuralFrame * _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008\x0003\x6009\x080c\x080c\x080c\x080c", (BSTR)PartFileName, (BSTR)CoOrdinateSystemName, NumPaths, Path, &PreferredOrientationPlane, &GlobalEndConditions, &GlobalEndConditionValue, &AutoPosition);
    return StructuralFramePtr(_result, false);
}

#pragma implementation_key(3007)
inline HRESULT TGAssembly::StructuralFrames::Delete ( struct StructuralFrame * StructuralFrame ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", StructuralFrame);
}

#pragma implementation_key(3008)
inline HRESULT TGAssembly::StructuralFrames::FrameSaveAs ( _bstr_t FileName ) {
    return _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)FileName);
}

#pragma implementation_key(3009)
inline HRESULT TGAssembly::StructuralFrames::FrameSaveAsTranslated ( _bstr_t FileName ) {
    return _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)FileName);
}

#pragma implementation_key(3010)
inline _bstr_t TGAssembly::StructuralFrames::FrameSaveAsBiDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008\x0008", (BSTR)FilePath, (BSTR)DocumentNumber, (BSTR)Revision, (BSTR)Title);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3011)
inline TGAssembly::StructuralFramePtr TGAssembly::StructuralFrames::GetStructuralFrameByOccurrence ( IDispatch * Occurrence ) {
    struct StructuralFrame * _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", Occurrence);
    return StructuralFramePtr(_result, false);
}

#pragma implementation_key(3012)
inline TGAssembly::StructuralFramePtr TGAssembly::StructuralFrames::AddWithSplitOnIntersection ( _bstr_t PartFileName, long NumPaths, SAFEARRAY * * Path, const _variant_t & PreferredOrientationPlane, const _variant_t & GlobalEndConditions, const _variant_t & GlobalEndConditionValue, const _variant_t & AutoPosition, _bstr_t CoOrdinateSystemName ) {
    struct StructuralFrame * _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003\x6009\x000c\x000c\x000c\x000c\x0008", (BSTR)PartFileName, NumPaths, Path, &PreferredOrientationPlane, &GlobalEndConditions, &GlobalEndConditionValue, &AutoPosition, (BSTR)CoOrdinateSystemName);
    return StructuralFramePtr(_result, false);
}

//
// dispinterface StructuralFrame wrapper method implementations
//

#pragma implementation_key(3013)
inline TGFramework::ApplicationPtr TGAssembly::StructuralFrame::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3014)
inline IDispatchPtr TGAssembly::StructuralFrame::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3015)
inline void TGAssembly::StructuralFrame::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3016)
inline _bstr_t TGAssembly::StructuralFrame::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3017)
inline HRESULT TGAssembly::StructuralFrame::GetGlobalEndCondition ( enum StructuralFrameEndConditionConstants * EndCondition, VARIANT * dValue ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x480c", EndCondition, dValue);
}

#pragma implementation_key(3018)
inline HRESULT TGAssembly::StructuralFrame::SetGlobalEndCondition ( enum StructuralFrameEndConditionConstants EndCondition, const _variant_t & dValue ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x080c", EndCondition, &dValue);
}

#pragma implementation_key(3019)
inline VARIANT_BOOL TGAssembly::StructuralFrame::GetAutoPosition ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3020)
inline void TGAssembly::StructuralFrame::PutAutoPosition ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3021)
inline _bstr_t TGAssembly::StructuralFrame::GetGlobalDocument ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3022)
inline void TGAssembly::StructuralFrame::PutGlobalDocument ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3023)
inline HRESULT TGAssembly::StructuralFrame::SetFramePath ( long NumPathSegments, SAFEARRAY * * PathSegments ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6003", NumPathSegments, PathSegments);
}

#pragma implementation_key(3024)
inline HRESULT TGAssembly::StructuralFrame::GetFramePath ( long * NumPathSegments, SAFEARRAY * * PathSegments ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6003", NumPathSegments, PathSegments);
}

#pragma implementation_key(3025)
inline HRESULT TGAssembly::StructuralFrame::GetSections ( long * NumSections, SAFEARRAY * * Sections ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6003", NumSections, Sections);
}

#pragma implementation_key(3026)
inline HRESULT TGAssembly::StructuralFrame::GetRedefineSectionPlacement ( long SectionId, VARIANT * Rotation, VARIANT * XDistance, VARIANT * YDistance ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x480c\x480c\x480c", SectionId, Rotation, XDistance, YDistance);
}

#pragma implementation_key(3027)
inline HRESULT TGAssembly::StructuralFrame::SetRedefineSectionPlacement ( long SectionId, const _variant_t & Rotation, const _variant_t & XDistance, const _variant_t & YDistance ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x080c\x080c\x080c", SectionId, &Rotation, &XDistance, &YDistance);
}

#pragma implementation_key(3028)
inline HRESULT TGAssembly::StructuralFrame::GetRedefineSectionDocument ( long SectionId, BSTR * PartFileDocument ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4008", SectionId, PartFileDocument);
}

#pragma implementation_key(3029)
inline HRESULT TGAssembly::StructuralFrame::SetRedefineSectionDocument ( long SectionId, _bstr_t PartFileDocument ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008", SectionId, (BSTR)PartFileDocument);
}

#pragma implementation_key(3030)
inline HRESULT TGAssembly::StructuralFrame::GetOverrideEndCondition ( long NumSegments, SAFEARRAY * SegmentIds, enum StructuralFrameEndConditionConstants * EndCondition, VARIANT * dValue ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x2003\x4003\x480c", NumSegments, SegmentIds, EndCondition, dValue);
}

#pragma implementation_key(3031)
inline HRESULT TGAssembly::StructuralFrame::SetOverrideEndCondition ( long NumSegments, SAFEARRAY * SegmentIds, enum StructuralFrameEndConditionConstants EndCondition, const _variant_t & dValue ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x2003\x0003\x080c", NumSegments, SegmentIds, EndCondition, &dValue);
}

#pragma implementation_key(3032)
inline VARIANT_BOOL TGAssembly::StructuralFrame::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3033)
inline void TGAssembly::StructuralFrame::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3034)
inline HRESULT TGAssembly::StructuralFrame::CutLength ( double * dCutLength, VARIANT * bExactLength ) {
    return _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x480c", dCutLength, bExactLength);
}

#pragma implementation_key(3035)
inline HRESULT TGAssembly::StructuralFrame::SegmentCutLength ( long SectionId, double * dCutLength, VARIANT * bExactLength ) {
    return _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x480c", SectionId, dCutLength, bExactLength);
}

#pragma implementation_key(3036)
inline HRESULT TGAssembly::StructuralFrame::GetFramePathObjects ( long * NumPathSegments, SAFEARRAY * * PathSegments ) {
    return _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumPathSegments, PathSegments);
}

#pragma implementation_key(3037)
inline HRESULT TGAssembly::StructuralFrame::ReturnPathForGivenSectionID ( long SectionId, VARIANT * PathId, VARIANT * PathAsObject ) {
    return _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x480c\x480c", SectionId, PathId, PathAsObject);
}

#pragma implementation_key(3038)
inline HRESULT TGAssembly::StructuralFrame::ReturnOccurrenceForGivenSectionID ( long SectionId, VARIANT * OccurrenceID, VARIANT * OccurrenceAsObject ) {
    return _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x480c\x480c", SectionId, OccurrenceID, OccurrenceAsObject);
}

#pragma implementation_key(3039)
inline HRESULT TGAssembly::StructuralFrame::GetPlaneOrientationForGivenSectionID ( long SectionId, VARIANT * XOffset, VARIANT * YOffset, VARIANT * ZOffset, VARIANT * XRotation, VARIANT * YRotation, VARIANT * ZRotation ) {
    return _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x480c\x480c\x480c\x480c\x480c\x480c", SectionId, XOffset, YOffset, ZOffset, XRotation, YRotation, ZRotation);
}

#pragma implementation_key(3040)
inline HRESULT TGAssembly::StructuralFrame::GetSetionIDObject ( long SectionId, IDispatch * * ProfileObject ) {
    return _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4009", SectionId, ProfileObject);
}

#pragma implementation_key(3041)
inline HRESULT TGAssembly::StructuralFrame::RetrieveHoleLocation ( ) {
    return _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3042)
inline HRESULT TGAssembly::StructuralFrame::DeleteHoleLocation ( ) {
    return _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3043)
inline VARIANT_BOOL TGAssembly::StructuralFrame::GetSingleFrameForCollinearPaths ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3044)
inline void TGAssembly::StructuralFrame::PutSingleFrameForCollinearPaths ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3045)
inline VARIANT_BOOL TGAssembly::StructuralFrame::GetSingleFrameForTangentialPaths ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3046)
inline void TGAssembly::StructuralFrame::PutSingleFrameForTangentialPaths ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3047)
inline HRESULT TGAssembly::StructuralFrame::AssociateLegacyFrameToCrossSection ( ) {
    return _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3048)
inline HRESULT TGAssembly::StructuralFrame::MiterCut ( long SectionId, double * MiterCut1, double * MiterCut2 ) {
    return _com_dispatch_method(this, 0x25, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005", SectionId, MiterCut1, MiterCut2);
}

#pragma implementation_key(3049)
inline HRESULT TGAssembly::StructuralFrame::FrameSaveAs ( _bstr_t FileName ) {
    return _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)FileName);
}

#pragma implementation_key(3050)
inline HRESULT TGAssembly::StructuralFrame::FrameSaveAsTranslated ( _bstr_t FileName ) {
    return _com_dispatch_method(this, 0x29, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)FileName);
}

#pragma implementation_key(3051)
inline _bstr_t TGAssembly::StructuralFrame::FrameSaveAsBiDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008\x0008", (BSTR)FilePath, (BSTR)DocumentNumber, (BSTR)Revision, (BSTR)Title);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3052)
inline double TGAssembly::StructuralFrame::GetWeldGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3053)
inline void TGAssembly::StructuralFrame::PutWeldGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3054)
inline HRESULT TGAssembly::StructuralFrame::SideFaceEndAngle ( long SectionId, double * SideFaceEndAngle1, double * SideFaceEndAngle2 ) {
    return _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005", SectionId, SideFaceEndAngle1, SideFaceEndAngle2);
}

#pragma implementation_key(3055)
inline HRESULT TGAssembly::StructuralFrame::EndFaceEndAngle ( long SectionId, double * EndFaceEndAngle1, double * EndFaceEndAngle2 ) {
    return _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005", SectionId, EndFaceEndAngle1, EndFaceEndAngle2);
}

#pragma implementation_key(3056)
inline HRESULT TGAssembly::StructuralFrame::GetOverrideEndConditionEx ( long NumSegments, SAFEARRAY * SegmentIds, enum StructuralFrameEndConditionConstants * EndCondition, VARIANT * dValueEndConditionOrWeldGap, VARIANT_BOOL * bApplyWeldGap ) {
    return _com_dispatch_method(this, 0x30, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x2003\x4003\x400c\x400b", NumSegments, SegmentIds, EndCondition, dValueEndConditionOrWeldGap, bApplyWeldGap);
}

#pragma implementation_key(3057)
inline HRESULT TGAssembly::StructuralFrame::SetOverrideEndConditionEx ( long NumSegments, SAFEARRAY * SegmentIds, enum StructuralFrameEndConditionConstants EndCondition, const _variant_t & dValueEndConditionOrWeldGap, VARIANT_BOOL bApplyWeldGap ) {
    return _com_dispatch_method(this, 0x31, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x2003\x0003\x000c\x000b", NumSegments, SegmentIds, EndCondition, &dValueEndConditionOrWeldGap, bApplyWeldGap);
}

#pragma implementation_key(3058)
inline VARIANT_BOOL TGAssembly::StructuralFrame::GetSplitPath ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3059)
inline HRESULT TGAssembly::StructuralFrame::ApplyExtendTrimToTools ( long NumTargetSegments, SAFEARRAY * TargetSegmentIds, enum StructuralFrameExtendTrimPositionConstants Position, long NumTools, SAFEARRAY * * Tools ) {
    return _com_dispatch_method(this, 0x34, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x2003\x0003\x0003\x6009", NumTargetSegments, TargetSegmentIds, Position, NumTools, Tools);
}

#pragma implementation_key(3060)
inline TGPart::SuppressVariablePtr TGAssembly::StructuralFrame::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3061)
inline TGPart::SuppressVariablePtr TGAssembly::StructuralFrame::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3062)
inline HRESULT TGAssembly::StructuralFrame::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3063)
inline VARIANT_BOOL TGAssembly::StructuralFrame::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IStructuralFramesAuto wrapper method implementations
//

#pragma implementation_key(3064)
inline TGFramework::ApplicationPtr TGAssembly::_IStructuralFramesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3065)
inline IDispatchPtr TGAssembly::_IStructuralFramesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3066)
inline TGAssembly::StructuralFramePtr TGAssembly::_IStructuralFramesAuto::Item ( const _variant_t & Index ) {
    struct StructuralFrame * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return StructuralFramePtr(_result, false);
}

#pragma implementation_key(3067)
inline long TGAssembly::_IStructuralFramesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3068)
inline IUnknownPtr TGAssembly::_IStructuralFramesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3069)
inline TGAssembly::StructuralFramePtr TGAssembly::_IStructuralFramesAuto::Add ( _bstr_t PartFileName, long NumPaths, SAFEARRAY * * Path, const _variant_t & GlobalEndConditions, const _variant_t & GlobalEndConditionValue, const _variant_t & AutoPosition ) {
    struct StructuralFrame * _result = 0;
    HRESULT _hr = raw_Add(PartFileName, NumPaths, Path, GlobalEndConditions, GlobalEndConditionValue, AutoPosition, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return StructuralFramePtr(_result, false);
}

#pragma implementation_key(3070)
inline TGAssembly::StructuralFramePtr TGAssembly::_IStructuralFramesAuto::AddByOrientation ( _bstr_t PartFileName, _bstr_t CoOrdinateSystemName, long NumPaths, SAFEARRAY * * Path, const _variant_t & PreferredOrientationPlane, const _variant_t & GlobalEndConditions, const _variant_t & GlobalEndConditionValue, const _variant_t & AutoPosition ) {
    struct StructuralFrame * _result = 0;
    HRESULT _hr = raw_AddByOrientation(PartFileName, CoOrdinateSystemName, NumPaths, Path, PreferredOrientationPlane, GlobalEndConditions, GlobalEndConditionValue, AutoPosition, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return StructuralFramePtr(_result, false);
}

#pragma implementation_key(3071)
inline HRESULT TGAssembly::_IStructuralFramesAuto::Delete ( struct StructuralFrame * StructuralFrame ) {
    HRESULT _hr = raw_Delete(StructuralFrame);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3072)
inline HRESULT TGAssembly::_IStructuralFramesAuto::FrameSaveAs ( _bstr_t FileName ) {
    HRESULT _hr = raw_FrameSaveAs(FileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3073)
inline HRESULT TGAssembly::_IStructuralFramesAuto::FrameSaveAsTranslated ( _bstr_t FileName ) {
    HRESULT _hr = raw_FrameSaveAsTranslated(FileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3074)
inline _bstr_t TGAssembly::_IStructuralFramesAuto::FrameSaveAsBiDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    HRESULT _hr = raw_FrameSaveAsBiDM(FilePath, DocumentNumber, Revision, Title, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3075)
inline TGAssembly::StructuralFramePtr TGAssembly::_IStructuralFramesAuto::GetStructuralFrameByOccurrence ( IDispatch * Occurrence ) {
    struct StructuralFrame * _result = 0;
    HRESULT _hr = raw_GetStructuralFrameByOccurrence(Occurrence, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return StructuralFramePtr(_result, false);
}

#pragma implementation_key(3076)
inline TGAssembly::StructuralFramePtr TGAssembly::_IStructuralFramesAuto::AddWithSplitOnIntersection ( _bstr_t PartFileName, long NumPaths, SAFEARRAY * * Path, const _variant_t & PreferredOrientationPlane, const _variant_t & GlobalEndConditions, const _variant_t & GlobalEndConditionValue, const _variant_t & AutoPosition, _bstr_t CoOrdinateSystemName ) {
    struct StructuralFrame * _result = 0;
    HRESULT _hr = raw_AddWithSplitOnIntersection(PartFileName, NumPaths, Path, PreferredOrientationPlane, GlobalEndConditions, GlobalEndConditionValue, AutoPosition, CoOrdinateSystemName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return StructuralFramePtr(_result, false);
}

//
// interface _IStructuralFrameAuto wrapper method implementations
//

#pragma implementation_key(3077)
inline TGFramework::ApplicationPtr TGAssembly::_IStructuralFrameAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3078)
inline IDispatchPtr TGAssembly::_IStructuralFrameAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3079)
inline void TGAssembly::_IStructuralFrameAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3080)
inline _bstr_t TGAssembly::_IStructuralFrameAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3081)
inline HRESULT TGAssembly::_IStructuralFrameAuto::GetGlobalEndCondition ( enum StructuralFrameEndConditionConstants * EndCondition, VARIANT * dValue ) {
    HRESULT _hr = raw_GetGlobalEndCondition(EndCondition, dValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3082)
inline HRESULT TGAssembly::_IStructuralFrameAuto::SetGlobalEndCondition ( enum StructuralFrameEndConditionConstants EndCondition, const _variant_t & dValue ) {
    HRESULT _hr = raw_SetGlobalEndCondition(EndCondition, dValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3083)
inline VARIANT_BOOL TGAssembly::_IStructuralFrameAuto::GetAutoPosition ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3084)
inline void TGAssembly::_IStructuralFrameAuto::PutAutoPosition ( VARIANT_BOOL bAutoPosition ) {
    HRESULT _hr = put_AutoPosition(bAutoPosition);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3085)
inline _bstr_t TGAssembly::_IStructuralFrameAuto::GetGlobalDocument ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_GlobalDocument(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3086)
inline void TGAssembly::_IStructuralFrameAuto::PutGlobalDocument ( _bstr_t PartFileDocument ) {
    HRESULT _hr = put_GlobalDocument(PartFileDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3087)
inline HRESULT TGAssembly::_IStructuralFrameAuto::SetFramePath ( long NumPathSegments, SAFEARRAY * * PathSegments ) {
    HRESULT _hr = raw_SetFramePath(NumPathSegments, PathSegments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3088)
inline HRESULT TGAssembly::_IStructuralFrameAuto::GetFramePath ( long * NumPathSegments, SAFEARRAY * * PathSegments ) {
    HRESULT _hr = raw_GetFramePath(NumPathSegments, PathSegments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3089)
inline HRESULT TGAssembly::_IStructuralFrameAuto::GetSections ( long * NumSections, SAFEARRAY * * Sections ) {
    HRESULT _hr = raw_GetSections(NumSections, Sections);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3090)
inline HRESULT TGAssembly::_IStructuralFrameAuto::GetRedefineSectionPlacement ( long SectionId, VARIANT * Rotation, VARIANT * XDistance, VARIANT * YDistance ) {
    HRESULT _hr = raw_GetRedefineSectionPlacement(SectionId, Rotation, XDistance, YDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3091)
inline HRESULT TGAssembly::_IStructuralFrameAuto::SetRedefineSectionPlacement ( long SectionId, const _variant_t & Rotation, const _variant_t & XDistance, const _variant_t & YDistance ) {
    HRESULT _hr = raw_SetRedefineSectionPlacement(SectionId, Rotation, XDistance, YDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3092)
inline HRESULT TGAssembly::_IStructuralFrameAuto::GetRedefineSectionDocument ( long SectionId, BSTR * PartFileDocument ) {
    HRESULT _hr = raw_GetRedefineSectionDocument(SectionId, PartFileDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3093)
inline HRESULT TGAssembly::_IStructuralFrameAuto::SetRedefineSectionDocument ( long SectionId, _bstr_t PartFileDocument ) {
    HRESULT _hr = raw_SetRedefineSectionDocument(SectionId, PartFileDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3094)
inline HRESULT TGAssembly::_IStructuralFrameAuto::GetOverrideEndCondition ( long NumSegments, SAFEARRAY * SegmentIds, enum StructuralFrameEndConditionConstants * EndCondition, VARIANT * dValue ) {
    HRESULT _hr = raw_GetOverrideEndCondition(NumSegments, SegmentIds, EndCondition, dValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3095)
inline HRESULT TGAssembly::_IStructuralFrameAuto::SetOverrideEndCondition ( long NumSegments, SAFEARRAY * SegmentIds, enum StructuralFrameEndConditionConstants EndCondition, const _variant_t & dValue ) {
    HRESULT _hr = raw_SetOverrideEndCondition(NumSegments, SegmentIds, EndCondition, dValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3096)
inline VARIANT_BOOL TGAssembly::_IStructuralFrameAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3097)
inline void TGAssembly::_IStructuralFrameAuto::PutVisible ( VARIANT_BOOL bVisible ) {
    HRESULT _hr = put_Visible(bVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3098)
inline HRESULT TGAssembly::_IStructuralFrameAuto::CutLength ( double * dCutLength, VARIANT * bExactLength ) {
    HRESULT _hr = raw_CutLength(dCutLength, bExactLength);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3099)
inline HRESULT TGAssembly::_IStructuralFrameAuto::SegmentCutLength ( long SectionId, double * dCutLength, VARIANT * bExactLength ) {
    HRESULT _hr = raw_SegmentCutLength(SectionId, dCutLength, bExactLength);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3100)
inline HRESULT TGAssembly::_IStructuralFrameAuto::GetFramePathObjects ( long * NumPathSegments, SAFEARRAY * * PathSegments ) {
    HRESULT _hr = raw_GetFramePathObjects(NumPathSegments, PathSegments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3101)
inline HRESULT TGAssembly::_IStructuralFrameAuto::ReturnPathForGivenSectionID ( long SectionId, VARIANT * PathId, VARIANT * PathAsObject ) {
    HRESULT _hr = raw_ReturnPathForGivenSectionID(SectionId, PathId, PathAsObject);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3102)
inline HRESULT TGAssembly::_IStructuralFrameAuto::ReturnOccurrenceForGivenSectionID ( long SectionId, VARIANT * OccurrenceID, VARIANT * OccurrenceAsObject ) {
    HRESULT _hr = raw_ReturnOccurrenceForGivenSectionID(SectionId, OccurrenceID, OccurrenceAsObject);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3103)
inline HRESULT TGAssembly::_IStructuralFrameAuto::GetPlaneOrientationForGivenSectionID ( long SectionId, VARIANT * XOffset, VARIANT * YOffset, VARIANT * ZOffset, VARIANT * XRotation, VARIANT * YRotation, VARIANT * ZRotation ) {
    HRESULT _hr = raw_GetPlaneOrientationForGivenSectionID(SectionId, XOffset, YOffset, ZOffset, XRotation, YRotation, ZRotation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3104)
inline HRESULT TGAssembly::_IStructuralFrameAuto::GetSetionIDObject ( long SectionId, IDispatch * * ProfileObject ) {
    HRESULT _hr = raw_GetSetionIDObject(SectionId, ProfileObject);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3105)
inline HRESULT TGAssembly::_IStructuralFrameAuto::RetrieveHoleLocation ( ) {
    HRESULT _hr = raw_RetrieveHoleLocation();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3106)
inline HRESULT TGAssembly::_IStructuralFrameAuto::DeleteHoleLocation ( ) {
    HRESULT _hr = raw_DeleteHoleLocation();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3107)
inline VARIANT_BOOL TGAssembly::_IStructuralFrameAuto::GetSingleFrameForCollinearPaths ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SingleFrameForCollinearPaths(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3108)
inline void TGAssembly::_IStructuralFrameAuto::PutSingleFrameForCollinearPaths ( VARIANT_BOOL bSingleFrameForCollinearPaths ) {
    HRESULT _hr = put_SingleFrameForCollinearPaths(bSingleFrameForCollinearPaths);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3109)
inline VARIANT_BOOL TGAssembly::_IStructuralFrameAuto::GetSingleFrameForTangentialPaths ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SingleFrameForTangentialPaths(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3110)
inline void TGAssembly::_IStructuralFrameAuto::PutSingleFrameForTangentialPaths ( VARIANT_BOOL bSingleFrameForTangentialPaths ) {
    HRESULT _hr = put_SingleFrameForTangentialPaths(bSingleFrameForTangentialPaths);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3111)
inline HRESULT TGAssembly::_IStructuralFrameAuto::AssociateLegacyFrameToCrossSection ( ) {
    HRESULT _hr = raw_AssociateLegacyFrameToCrossSection();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3112)
inline HRESULT TGAssembly::_IStructuralFrameAuto::MiterCut ( long SectionId, double * MiterCut1, double * MiterCut2 ) {
    HRESULT _hr = raw_MiterCut(SectionId, MiterCut1, MiterCut2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3113)
inline HRESULT TGAssembly::_IStructuralFrameAuto::FrameSaveAs ( _bstr_t FileName ) {
    HRESULT _hr = raw_FrameSaveAs(FileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3114)
inline HRESULT TGAssembly::_IStructuralFrameAuto::FrameSaveAsTranslated ( _bstr_t FileName ) {
    HRESULT _hr = raw_FrameSaveAsTranslated(FileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3115)
inline _bstr_t TGAssembly::_IStructuralFrameAuto::FrameSaveAsBiDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    HRESULT _hr = raw_FrameSaveAsBiDM(FilePath, DocumentNumber, Revision, Title, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3116)
inline double TGAssembly::_IStructuralFrameAuto::GetWeldGap ( ) {
    double _result = 0;
    HRESULT _hr = get_WeldGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3117)
inline void TGAssembly::_IStructuralFrameAuto::PutWeldGap ( double dWeldGap ) {
    HRESULT _hr = put_WeldGap(dWeldGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3118)
inline HRESULT TGAssembly::_IStructuralFrameAuto::SideFaceEndAngle ( long SectionId, double * SideFaceEndAngle1, double * SideFaceEndAngle2 ) {
    HRESULT _hr = raw_SideFaceEndAngle(SectionId, SideFaceEndAngle1, SideFaceEndAngle2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3119)
inline HRESULT TGAssembly::_IStructuralFrameAuto::EndFaceEndAngle ( long SectionId, double * EndFaceEndAngle1, double * EndFaceEndAngle2 ) {
    HRESULT _hr = raw_EndFaceEndAngle(SectionId, EndFaceEndAngle1, EndFaceEndAngle2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3120)
inline HRESULT TGAssembly::_IStructuralFrameAuto::GetOverrideEndConditionEx ( long NumSegments, SAFEARRAY * SegmentIds, enum StructuralFrameEndConditionConstants * EndCondition, VARIANT * dValueEndConditionOrWeldGap, VARIANT_BOOL * bApplyWeldGap ) {
    HRESULT _hr = raw_GetOverrideEndConditionEx(NumSegments, SegmentIds, EndCondition, dValueEndConditionOrWeldGap, bApplyWeldGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3121)
inline HRESULT TGAssembly::_IStructuralFrameAuto::SetOverrideEndConditionEx ( long NumSegments, SAFEARRAY * SegmentIds, enum StructuralFrameEndConditionConstants EndCondition, const _variant_t & dValueEndConditionOrWeldGap, VARIANT_BOOL bApplyWeldGap ) {
    HRESULT _hr = raw_SetOverrideEndConditionEx(NumSegments, SegmentIds, EndCondition, dValueEndConditionOrWeldGap, bApplyWeldGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3122)
inline VARIANT_BOOL TGAssembly::_IStructuralFrameAuto::GetSplitPath ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetSplitPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3123)
inline HRESULT TGAssembly::_IStructuralFrameAuto::ApplyExtendTrimToTools ( long NumTargetSegments, SAFEARRAY * TargetSegmentIds, enum StructuralFrameExtendTrimPositionConstants Position, long NumTools, SAFEARRAY * * Tools ) {
    HRESULT _hr = raw_ApplyExtendTrimToTools(NumTargetSegments, TargetSegmentIds, Position, NumTools, Tools);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3124)
inline TGPart::SuppressVariablePtr TGAssembly::_IStructuralFrameAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3125)
inline TGPart::SuppressVariablePtr TGAssembly::_IStructuralFrameAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3126)
inline HRESULT TGAssembly::_IStructuralFrameAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3127)
inline VARIANT_BOOL TGAssembly::_IStructuralFrameAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AssemblyFeatures wrapper method implementations
//

#pragma implementation_key(3128)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeatures::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3129)
inline IDispatchPtr TGAssembly::AssemblyFeatures::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3130)
inline TGAssembly::AssemblyFeaturesExtrudedCutoutsPtr TGAssembly::AssemblyFeatures::GetAssemblyFeaturesExtrudedCutouts ( ) {
    struct AssemblyFeaturesExtrudedCutouts * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyFeaturesExtrudedCutoutsPtr(_result, false);
}

#pragma implementation_key(3131)
inline TGAssembly::AssemblyFeaturesRevolvedCutoutsPtr TGAssembly::AssemblyFeatures::GetAssemblyFeaturesRevolvedCutouts ( ) {
    struct AssemblyFeaturesRevolvedCutouts * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyFeaturesRevolvedCutoutsPtr(_result, false);
}

#pragma implementation_key(3132)
inline TGAssembly::AssemblyFeaturesHolesPtr TGAssembly::AssemblyFeatures::GetAssemblyFeaturesHoles ( ) {
    struct AssemblyFeaturesHoles * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyFeaturesHolesPtr(_result, false);
}

#pragma implementation_key(3133)
inline TGAssembly::AssemblyFeaturesMirrorsPtr TGAssembly::AssemblyFeatures::GetAssemblyFeaturesMirrors ( ) {
    struct AssemblyFeaturesMirrors * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyFeaturesMirrorsPtr(_result, false);
}

#pragma implementation_key(3134)
inline TGAssembly::AssemblyFeaturesPatternsPtr TGAssembly::AssemblyFeatures::GetAssemblyFeaturesPatterns ( ) {
    struct AssemblyFeaturesPatterns * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyFeaturesPatternsPtr(_result, false);
}

#pragma implementation_key(3135)
inline TGAssembly::AssemblyFilletWeldsPtr TGAssembly::AssemblyFeatures::GetFilletWelds ( ) {
    struct AssemblyFilletWelds * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyFilletWeldsPtr(_result, false);
}

#pragma implementation_key(3136)
inline TGAssembly::AFGrooveWeldsPtr TGAssembly::AssemblyFeatures::GetGrooveWelds ( ) {
    struct AFGrooveWelds * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AFGrooveWeldsPtr(_result, false);
}

#pragma implementation_key(3137)
inline TGAssembly::AssemblyFeaturesSweptProtrusionsPtr TGAssembly::AssemblyFeatures::GetAssemblyFeaturesSweptProtrusions ( ) {
    struct AssemblyFeaturesSweptProtrusions * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyFeaturesSweptProtrusionsPtr(_result, false);
}

#pragma implementation_key(3138)
inline TGAssembly::AssemblyStitchWeldsPtr TGAssembly::AssemblyFeatures::GetStitchWelds ( ) {
    struct AssemblyStitchWelds * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyStitchWeldsPtr(_result, false);
}

#pragma implementation_key(3139)
inline TGAssembly::AssemblyThreadsPtr TGAssembly::AssemblyFeatures::GetThreads ( ) {
    struct AssemblyThreads * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyThreadsPtr(_result, false);
}

#pragma implementation_key(3140)
inline TGAssembly::AssemblyFeaturesExtrudedProtrusionsPtr TGAssembly::AssemblyFeatures::GetExtrudedProtrusions ( ) {
    struct AssemblyFeaturesExtrudedProtrusions * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyFeaturesExtrudedProtrusionsPtr(_result, false);
}

#pragma implementation_key(3141)
inline TGAssembly::AssemblyFeaturesRevolvedProtrusionsPtr TGAssembly::AssemblyFeatures::GetRevolvedProtrusions ( ) {
    struct AssemblyFeaturesRevolvedProtrusions * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyFeaturesRevolvedProtrusionsPtr(_result, false);
}

#pragma implementation_key(3142)
inline HRESULT TGAssembly::AssemblyFeatures::Recompute ( long options ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", options);
}

#pragma implementation_key(3143)
inline TGAssembly::AssemblyLabelWeldsPtr TGAssembly::AssemblyFeatures::GetLabelWelds ( ) {
    struct AssemblyLabelWelds * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyLabelWeldsPtr(_result, false);
}

//
// dispinterface AssemblyFeaturesExtrudedCutouts wrapper method implementations
//

#pragma implementation_key(3144)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeaturesExtrudedCutouts::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3145)
inline IDispatchPtr TGAssembly::AssemblyFeaturesExtrudedCutouts::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3146)
inline TGAssembly::AssemblyFeaturesExtrudedCutoutPtr TGAssembly::AssemblyFeaturesExtrudedCutouts::Item ( const _variant_t & Index ) {
    struct AssemblyFeaturesExtrudedCutout * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyFeaturesExtrudedCutoutPtr(_result, false);
}

#pragma implementation_key(3147)
inline long TGAssembly::AssemblyFeaturesExtrudedCutouts::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3148)
inline TGAssembly::AssemblyFeaturesExtrudedCutoutPtr TGAssembly::AssemblyFeaturesExtrudedCutouts::Add ( long nNumScopeParts, SAFEARRAY * * pScopeParts, long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants * pExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdDistance, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane ) {
    struct AssemblyFeaturesExtrudedCutout * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x600d\x0003\x600d\x0003\x4003\x0003\x4005\x000d\x4003\x000d\x000d", nNumScopeParts, pScopeParts, nNumProfiles, pProfiles, ExtentType, pExtentSide, profileSide, pdDistance, pKeyPoint, pKeyPointFlags, pFromSurfOrPlane, pToSurfOrPlane);
    return AssemblyFeaturesExtrudedCutoutPtr(_result, false);
}

//
// dispinterface AssemblyFeaturesExtrudedCutout wrapper method implementations
//

#pragma implementation_key(3149)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeaturesExtrudedCutout::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3150)
inline IDispatchPtr TGAssembly::AssemblyFeaturesExtrudedCutout::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3151)
inline double TGAssembly::AssemblyFeaturesExtrudedCutout::GetDepth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3152)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedCutout::SetDepth ( double nDepth ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", nDepth);
}

#pragma implementation_key(3153)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyFeaturesExtrudedCutout::GetExtentSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3154)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedCutout::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ExtentSide);
}

#pragma implementation_key(3155)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyFeaturesExtrudedCutout::GetExtentType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3156)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedCutout::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ExtentType);
}

#pragma implementation_key(3157)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyFeaturesExtrudedCutout::GetProfileSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3158)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedCutout::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", profileSide);
}

#pragma implementation_key(3159)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedCutout::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumProfiles, ppProfiles);
}

#pragma implementation_key(3160)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedCutout::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumProfiles, pProfiles);
}

#pragma implementation_key(3161)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedCutout::SetFromPlane ( IUnknown * FromPlane ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", FromPlane);
}

#pragma implementation_key(3162)
inline IUnknownPtr TGAssembly::AssemblyFeaturesExtrudedCutout::GetFromPlane ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3163)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedCutout::SetToPlane ( IUnknown * ToPlane ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", ToPlane);
}

#pragma implementation_key(3164)
inline IUnknownPtr TGAssembly::AssemblyFeaturesExtrudedCutout::GetToPlane ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3165)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedCutout::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumScopeParts, pScopeParts);
}

#pragma implementation_key(3166)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedCutout::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumScopeParts, pScopeParts);
}

#pragma implementation_key(3167)
inline _bstr_t TGAssembly::AssemblyFeaturesExtrudedCutout::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3168)
inline void TGAssembly::AssemblyFeaturesExtrudedCutout::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3169)
inline IDispatchPtr TGAssembly::AssemblyFeaturesExtrudedCutout::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3170)
inline IDispatchPtr TGAssembly::AssemblyFeaturesExtrudedCutout::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3171)
inline IDispatchPtr TGAssembly::AssemblyFeaturesExtrudedCutout::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3172)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedCutout::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", X1, Y1, Z1, X2, Y2, Z2);
}

#pragma implementation_key(3173)
inline VARIANT_BOOL TGAssembly::AssemblyFeaturesExtrudedCutout::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3174)
inline void TGAssembly::AssemblyFeaturesExtrudedCutout::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3175)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedCutout::Delete ( ) {
    return _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3176)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedCutout::RollToFeature ( ) {
    return _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3177)
inline IDispatchPtr TGAssembly::AssemblyFeaturesExtrudedCutout::GetEdgesForScopePart ( IUnknown * pScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000d\x0003", pScopePart, EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3178)
inline IDispatchPtr TGAssembly::AssemblyFeaturesExtrudedCutout::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000d\x0003", ScopePart, FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3179)
inline IDispatchPtr TGAssembly::AssemblyFeaturesExtrudedCutout::GetFacesByRayForScopePart ( IUnknown * pScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000d\x0005\x0005\x0005\x0005\x0005\x0005", pScopePart, Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3180)
inline enum TGPart::FeatureStatusConstants TGAssembly::AssemblyFeaturesExtrudedCutout::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

#pragma implementation_key(3181)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFeaturesExtrudedCutout::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3182)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFeaturesExtrudedCutout::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3183)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedCutout::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3184)
inline VARIANT_BOOL TGAssembly::AssemblyFeaturesExtrudedCutout::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3185)
inline enum TGPart::FeatureTypeConstants TGAssembly::AssemblyFeaturesExtrudedCutout::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    _com_dispatch_method(this, 0x10001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IAssemblyFeaturesExtrudedCutoutsAuto wrapper method implementations
//

#pragma implementation_key(3186)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3187)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3188)
inline TGAssembly::AssemblyFeaturesExtrudedCutoutPtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutsAuto::Item ( const _variant_t & Index ) {
    struct AssemblyFeaturesExtrudedCutout * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesExtrudedCutoutPtr(_result, false);
}

#pragma implementation_key(3189)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3190)
inline long TGAssembly::_IAssemblyFeaturesExtrudedCutoutsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3191)
inline TGAssembly::AssemblyFeaturesExtrudedCutoutPtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutsAuto::Add ( long nNumScopeParts, SAFEARRAY * * pScopeParts, long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants * pExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdDistance, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane ) {
    struct AssemblyFeaturesExtrudedCutout * _result = 0;
    HRESULT _hr = raw_Add(nNumScopeParts, pScopeParts, nNumProfiles, pProfiles, ExtentType, pExtentSide, profileSide, pdDistance, pKeyPoint, pKeyPointFlags, pFromSurfOrPlane, pToSurfOrPlane, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesExtrudedCutoutPtr(_result, false);
}

//
// interface _IAssemblyFeaturesExtrudedCutoutAuto wrapper method implementations
//

#pragma implementation_key(3192)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3193)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3194)
inline double TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetDepth ( ) {
    double _result = 0;
    HRESULT _hr = raw_GetDepth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3195)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::SetDepth ( double nDepth ) {
    HRESULT _hr = raw_SetDepth(nDepth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3196)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetExtentSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetExtentSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3197)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide ) {
    HRESULT _hr = raw_SetExtentSide(ExtentSide);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3198)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetExtentType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetExtentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3199)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType ) {
    HRESULT _hr = raw_SetExtentType(ExtentType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3200)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetProfileSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetProfileSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3201)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide ) {
    HRESULT _hr = raw_SetProfileSide(profileSide);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3202)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles ) {
    HRESULT _hr = raw_GetProfiles(NumProfiles, ppProfiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3203)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles ) {
    HRESULT _hr = raw_SetProfiles(NumProfiles, pProfiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3204)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::SetFromPlane ( IUnknown * FromPlane ) {
    HRESULT _hr = raw_SetFromPlane(FromPlane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3205)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetFromPlane ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetFromPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3206)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::SetToPlane ( IUnknown * ToPlane ) {
    HRESULT _hr = raw_SetToPlane(ToPlane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3207)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetToPlane ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetToPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3208)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts ) {
    HRESULT _hr = raw_SetScopeParts(NumScopeParts, pScopeParts);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3209)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts ) {
    HRESULT _hr = raw_GetScopeParts(NumScopeParts, pScopeParts);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3210)
inline _bstr_t TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3211)
inline void TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::PutName ( _bstr_t featureName ) {
    HRESULT _hr = put_Name(featureName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3212)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Edges(EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3213)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Faces(FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3214)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRay(Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3215)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    HRESULT _hr = raw_Range(X1, Y1, Z1, X2, Y2, Z2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3216)
inline VARIANT_BOOL TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3217)
inline void TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::PutSuppress ( VARIANT_BOOL Suppress ) {
    HRESULT _hr = put_Suppress(Suppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3218)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3219)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::RollToFeature ( ) {
    HRESULT _hr = raw_RollToFeature();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3220)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetEdgesForScopePart ( IUnknown * pScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_EdgesForScopePart(pScopePart, EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3221)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesForScopePart(ScopePart, FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3222)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetFacesByRayForScopePart ( IUnknown * pScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRayForScopePart(pScopePart, Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3223)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3224)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3225)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3226)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3227)
inline VARIANT_BOOL TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3228)
inline enum TGPart::FeatureTypeConstants TGAssembly::_IAssemblyFeaturesExtrudedCutoutAuto::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    HRESULT _hr = get_FeatureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AssemblyFeaturesRevolvedCutouts wrapper method implementations
//

#pragma implementation_key(3229)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeaturesRevolvedCutouts::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3230)
inline IDispatchPtr TGAssembly::AssemblyFeaturesRevolvedCutouts::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3231)
inline TGAssembly::AssemblyFeaturesRevolvedCutoutPtr TGAssembly::AssemblyFeaturesRevolvedCutouts::Item ( const _variant_t & Index ) {
    struct AssemblyFeaturesRevolvedCutout * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyFeaturesRevolvedCutoutPtr(_result, false);
}

#pragma implementation_key(3232)
inline long TGAssembly::AssemblyFeaturesRevolvedCutouts::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3233)
inline TGAssembly::AssemblyFeaturesRevolvedCutoutPtr TGAssembly::AssemblyFeaturesRevolvedCutouts::Add ( long nNumScopeParts, SAFEARRAY * * pScopeParts, long nNumProfiles, SAFEARRAY * * pProfiles, IUnknown * pRefAxis, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdAngle, IUnknown * KeyPointOrTangentFace, enum TGPart::KeyPointExtentConstants * KeyPointFlags, IUnknown * pFromSurface, IUnknown * pToSurface ) {
    struct AssemblyFeaturesRevolvedCutout * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x600d\x0003\x600d\x000d\x0003\x0003\x0003\x4005\x000d\x4003\x000d\x000d", nNumScopeParts, pScopeParts, nNumProfiles, pProfiles, pRefAxis, ExtentType, ExtentSide, profileSide, pdAngle, KeyPointOrTangentFace, KeyPointFlags, pFromSurface, pToSurface);
    return AssemblyFeaturesRevolvedCutoutPtr(_result, false);
}

//
// dispinterface AssemblyFeaturesRevolvedCutout wrapper method implementations
//

#pragma implementation_key(3234)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeaturesRevolvedCutout::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3235)
inline IDispatchPtr TGAssembly::AssemblyFeaturesRevolvedCutout::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3236)
inline double TGAssembly::AssemblyFeaturesRevolvedCutout::GetAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3237)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedCutout::SetAngle ( double nAngle ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", nAngle);
}

#pragma implementation_key(3238)
inline IUnknownPtr TGAssembly::AssemblyFeaturesRevolvedCutout::GetReferenceAxis ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3239)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedCutout::SetReferenceAxis ( IUnknown * ReferenceAxis ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", ReferenceAxis);
}

#pragma implementation_key(3240)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyFeaturesRevolvedCutout::GetExtentSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3241)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedCutout::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ExtentSide);
}

#pragma implementation_key(3242)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyFeaturesRevolvedCutout::GetExtentType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3243)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedCutout::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ExtentType);
}

#pragma implementation_key(3244)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyFeaturesRevolvedCutout::GetProfileSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3245)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedCutout::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", profileSide);
}

#pragma implementation_key(3246)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedCutout::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumProfiles, ppProfiles);
}

#pragma implementation_key(3247)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedCutout::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumProfiles, pProfiles);
}

#pragma implementation_key(3248)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedCutout::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumScopeParts, pScopeParts);
}

#pragma implementation_key(3249)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedCutout::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumScopeParts, pScopeParts);
}

#pragma implementation_key(3250)
inline _bstr_t TGAssembly::AssemblyFeaturesRevolvedCutout::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3251)
inline void TGAssembly::AssemblyFeaturesRevolvedCutout::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3252)
inline IDispatchPtr TGAssembly::AssemblyFeaturesRevolvedCutout::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3253)
inline IDispatchPtr TGAssembly::AssemblyFeaturesRevolvedCutout::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3254)
inline IDispatchPtr TGAssembly::AssemblyFeaturesRevolvedCutout::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3255)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedCutout::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", X1, Y1, Z1, X2, Y2, Z2);
}

#pragma implementation_key(3256)
inline VARIANT_BOOL TGAssembly::AssemblyFeaturesRevolvedCutout::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3257)
inline void TGAssembly::AssemblyFeaturesRevolvedCutout::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3258)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedCutout::Delete ( ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3259)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedCutout::RollToFeature ( ) {
    return _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3260)
inline IDispatchPtr TGAssembly::AssemblyFeaturesRevolvedCutout::GetEdgesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000d\x0003", ScopePart, EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3261)
inline IDispatchPtr TGAssembly::AssemblyFeaturesRevolvedCutout::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000d\x0003", ScopePart, FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3262)
inline IDispatchPtr TGAssembly::AssemblyFeaturesRevolvedCutout::GetFacesByRayForScopePart ( IUnknown * ScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000d\x0005\x0005\x0005\x0005\x0005\x0005", ScopePart, Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3263)
inline enum TGPart::FeatureStatusConstants TGAssembly::AssemblyFeaturesRevolvedCutout::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

#pragma implementation_key(3264)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFeaturesRevolvedCutout::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3265)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFeaturesRevolvedCutout::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3266)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedCutout::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3267)
inline VARIANT_BOOL TGAssembly::AssemblyFeaturesRevolvedCutout::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3268)
inline enum TGPart::FeatureTypeConstants TGAssembly::AssemblyFeaturesRevolvedCutout::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    _com_dispatch_method(this, 0x10001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IAssemblyFeaturesRevolvedCutoutsAuto wrapper method implementations
//

#pragma implementation_key(3269)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesRevolvedCutoutsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3270)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesRevolvedCutoutsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3271)
inline TGAssembly::AssemblyFeaturesRevolvedCutoutPtr TGAssembly::_IAssemblyFeaturesRevolvedCutoutsAuto::Item ( const _variant_t & Index ) {
    struct AssemblyFeaturesRevolvedCutout * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesRevolvedCutoutPtr(_result, false);
}

#pragma implementation_key(3272)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesRevolvedCutoutsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3273)
inline long TGAssembly::_IAssemblyFeaturesRevolvedCutoutsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3274)
inline TGAssembly::AssemblyFeaturesRevolvedCutoutPtr TGAssembly::_IAssemblyFeaturesRevolvedCutoutsAuto::Add ( long nNumScopeParts, SAFEARRAY * * pScopeParts, long nNumProfiles, SAFEARRAY * * pProfiles, IUnknown * pRefAxis, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdAngle, IUnknown * KeyPointOrTangentFace, enum TGPart::KeyPointExtentConstants * KeyPointFlags, IUnknown * pFromSurface, IUnknown * pToSurface ) {
    struct AssemblyFeaturesRevolvedCutout * _result = 0;
    HRESULT _hr = raw_Add(nNumScopeParts, pScopeParts, nNumProfiles, pProfiles, pRefAxis, ExtentType, ExtentSide, profileSide, pdAngle, KeyPointOrTangentFace, KeyPointFlags, pFromSurface, pToSurface, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesRevolvedCutoutPtr(_result, false);
}

//
// interface _IAssemblyFeaturesRevolvedCutoutAuto wrapper method implementations
//

#pragma implementation_key(3275)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3276)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3277)
inline double TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = raw_GetAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3278)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::SetAngle ( double nAngle ) {
    HRESULT _hr = raw_SetAngle(nAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3279)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetReferenceAxis ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetReferenceAxis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3280)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::SetReferenceAxis ( IUnknown * ReferenceAxis ) {
    HRESULT _hr = raw_SetReferenceAxis(ReferenceAxis);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3281)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetExtentSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetExtentSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3282)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide ) {
    HRESULT _hr = raw_SetExtentSide(ExtentSide);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3283)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetExtentType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetExtentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3284)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType ) {
    HRESULT _hr = raw_SetExtentType(ExtentType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3285)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetProfileSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetProfileSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3286)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide ) {
    HRESULT _hr = raw_SetProfileSide(profileSide);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3287)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles ) {
    HRESULT _hr = raw_GetProfiles(NumProfiles, ppProfiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3288)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles ) {
    HRESULT _hr = raw_SetProfiles(NumProfiles, pProfiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3289)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts ) {
    HRESULT _hr = raw_SetScopeParts(NumScopeParts, pScopeParts);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3290)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts ) {
    HRESULT _hr = raw_GetScopeParts(NumScopeParts, pScopeParts);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3291)
inline _bstr_t TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3292)
inline void TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::PutName ( _bstr_t featureName ) {
    HRESULT _hr = put_Name(featureName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3293)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Edges(EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3294)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Faces(FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3295)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRay(Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3296)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    HRESULT _hr = raw_Range(X1, Y1, Z1, X2, Y2, Z2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3297)
inline VARIANT_BOOL TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3298)
inline void TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::PutSuppress ( VARIANT_BOOL Suppress ) {
    HRESULT _hr = put_Suppress(Suppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3299)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3300)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::RollToFeature ( ) {
    HRESULT _hr = raw_RollToFeature();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3301)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetEdgesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_EdgesForScopePart(ScopePart, EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3302)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesForScopePart(ScopePart, FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3303)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetFacesByRayForScopePart ( IUnknown * ScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRayForScopePart(ScopePart, Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3304)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3305)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3306)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3307)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3308)
inline VARIANT_BOOL TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3309)
inline enum TGPart::FeatureTypeConstants TGAssembly::_IAssemblyFeaturesRevolvedCutoutAuto::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    HRESULT _hr = get_FeatureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AssemblyFeaturesHoles wrapper method implementations
//

#pragma implementation_key(3310)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeaturesHoles::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3311)
inline IDispatchPtr TGAssembly::AssemblyFeaturesHoles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3312)
inline TGAssembly::AssemblyFeaturesHolePtr TGAssembly::AssemblyFeaturesHoles::Item ( const _variant_t & Index ) {
    struct AssemblyFeaturesHole * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyFeaturesHolePtr(_result, false);
}

#pragma implementation_key(3313)
inline long TGAssembly::AssemblyFeaturesHoles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3314)
inline TGAssembly::AssemblyFeaturesHolePtr TGAssembly::AssemblyFeaturesHoles::Add ( unsigned long nNumScopeParts, SAFEARRAY * * pScopeParts, unsigned long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants * pExtentSide, IUnknown * pHoledata, enum TGPart::FeaturePropertyConstants ExtentType, double * pHoleDepth, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags ) {
    struct AssemblyFeaturesHole * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x600d\x0003\x600d\x4003\x000d\x0003\x4005\x000d\x000d\x000d\x4003", nNumScopeParts, pScopeParts, nNumProfiles, pProfiles, pExtentSide, pHoledata, ExtentType, pHoleDepth, pFromSurfOrPlane, pToSurfOrPlane, pKeyPoint, pKeyPointFlags);
    return AssemblyFeaturesHolePtr(_result, false);
}

//
// dispinterface AssemblyFeaturesHole wrapper method implementations
//

#pragma implementation_key(3315)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeaturesHole::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3316)
inline IDispatchPtr TGAssembly::AssemblyFeaturesHole::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3317)
inline double TGAssembly::AssemblyFeaturesHole::GetDepth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3318)
inline HRESULT TGAssembly::AssemblyFeaturesHole::SetDepth ( double nDepth ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", nDepth);
}

#pragma implementation_key(3319)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyFeaturesHole::GetExtentSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3320)
inline HRESULT TGAssembly::AssemblyFeaturesHole::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ExtentSide);
}

#pragma implementation_key(3321)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyFeaturesHole::GetExtentType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3322)
inline HRESULT TGAssembly::AssemblyFeaturesHole::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ExtentType);
}

#pragma implementation_key(3323)
inline IUnknownPtr TGAssembly::AssemblyFeaturesHole::GetHoleData ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3324)
inline HRESULT TGAssembly::AssemblyFeaturesHole::SetHoleData ( IUnknown * Holedata ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", Holedata);
}

#pragma implementation_key(3325)
inline HRESULT TGAssembly::AssemblyFeaturesHole::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumProfiles, ppProfiles);
}

#pragma implementation_key(3326)
inline HRESULT TGAssembly::AssemblyFeaturesHole::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumProfiles, pProfiles);
}

#pragma implementation_key(3327)
inline HRESULT TGAssembly::AssemblyFeaturesHole::SetFromPlane ( IUnknown * FromPlane ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", FromPlane);
}

#pragma implementation_key(3328)
inline IUnknownPtr TGAssembly::AssemblyFeaturesHole::GetFromPlane ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3329)
inline HRESULT TGAssembly::AssemblyFeaturesHole::SetToPlane ( IUnknown * ToPlane ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", ToPlane);
}

#pragma implementation_key(3330)
inline IUnknownPtr TGAssembly::AssemblyFeaturesHole::GetToPlane ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3331)
inline HRESULT TGAssembly::AssemblyFeaturesHole::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumScopeParts, pScopeParts);
}

#pragma implementation_key(3332)
inline HRESULT TGAssembly::AssemblyFeaturesHole::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumScopeParts, pScopeParts);
}

#pragma implementation_key(3333)
inline _bstr_t TGAssembly::AssemblyFeaturesHole::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3334)
inline void TGAssembly::AssemblyFeaturesHole::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3335)
inline IDispatchPtr TGAssembly::AssemblyFeaturesHole::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3336)
inline IDispatchPtr TGAssembly::AssemblyFeaturesHole::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3337)
inline IDispatchPtr TGAssembly::AssemblyFeaturesHole::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3338)
inline HRESULT TGAssembly::AssemblyFeaturesHole::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", X1, Y1, Z1, X2, Y2, Z2);
}

#pragma implementation_key(3339)
inline VARIANT_BOOL TGAssembly::AssemblyFeaturesHole::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3340)
inline void TGAssembly::AssemblyFeaturesHole::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3341)
inline HRESULT TGAssembly::AssemblyFeaturesHole::Delete ( ) {
    return _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3342)
inline HRESULT TGAssembly::AssemblyFeaturesHole::RollToFeature ( ) {
    return _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3343)
inline IDispatchPtr TGAssembly::AssemblyFeaturesHole::GetEdgesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000d\x0003", ScopePart, EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3344)
inline IDispatchPtr TGAssembly::AssemblyFeaturesHole::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000d\x0003", ScopePart, FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3345)
inline IDispatchPtr TGAssembly::AssemblyFeaturesHole::GetFacesByRayForScopePart ( IUnknown * ScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000d\x0005\x0005\x0005\x0005\x0005\x0005", ScopePart, Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3346)
inline enum TGPart::FeatureStatusConstants TGAssembly::AssemblyFeaturesHole::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

#pragma implementation_key(3347)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFeaturesHole::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3348)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFeaturesHole::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3349)
inline HRESULT TGAssembly::AssemblyFeaturesHole::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3350)
inline VARIANT_BOOL TGAssembly::AssemblyFeaturesHole::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3351)
inline enum TGPart::FeatureTypeConstants TGAssembly::AssemblyFeaturesHole::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    _com_dispatch_method(this, 0x10001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IAssemblyFeaturesHolesAuto wrapper method implementations
//

#pragma implementation_key(3352)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesHolesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3353)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesHolesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3354)
inline TGAssembly::AssemblyFeaturesHolePtr TGAssembly::_IAssemblyFeaturesHolesAuto::Item ( const _variant_t & Index ) {
    struct AssemblyFeaturesHole * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesHolePtr(_result, false);
}

#pragma implementation_key(3355)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesHolesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3356)
inline long TGAssembly::_IAssemblyFeaturesHolesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3357)
inline TGAssembly::AssemblyFeaturesHolePtr TGAssembly::_IAssemblyFeaturesHolesAuto::Add ( unsigned long nNumScopeParts, SAFEARRAY * * pScopeParts, unsigned long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants * pExtentSide, IUnknown * pHoledata, enum TGPart::FeaturePropertyConstants ExtentType, double * pHoleDepth, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags ) {
    struct AssemblyFeaturesHole * _result = 0;
    HRESULT _hr = raw_Add(nNumScopeParts, pScopeParts, nNumProfiles, pProfiles, pExtentSide, pHoledata, ExtentType, pHoleDepth, pFromSurfOrPlane, pToSurfOrPlane, pKeyPoint, pKeyPointFlags, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesHolePtr(_result, false);
}

//
// interface _IAssemblyFeaturesHoleAuto wrapper method implementations
//

#pragma implementation_key(3358)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesHoleAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3359)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesHoleAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3360)
inline double TGAssembly::_IAssemblyFeaturesHoleAuto::GetDepth ( ) {
    double _result = 0;
    HRESULT _hr = raw_GetDepth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3361)
inline HRESULT TGAssembly::_IAssemblyFeaturesHoleAuto::SetDepth ( double nDepth ) {
    HRESULT _hr = raw_SetDepth(nDepth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3362)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyFeaturesHoleAuto::GetExtentSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetExtentSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3363)
inline HRESULT TGAssembly::_IAssemblyFeaturesHoleAuto::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide ) {
    HRESULT _hr = raw_SetExtentSide(ExtentSide);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3364)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyFeaturesHoleAuto::GetExtentType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetExtentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3365)
inline HRESULT TGAssembly::_IAssemblyFeaturesHoleAuto::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType ) {
    HRESULT _hr = raw_SetExtentType(ExtentType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3366)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesHoleAuto::GetHoleData ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetHoleData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3367)
inline HRESULT TGAssembly::_IAssemblyFeaturesHoleAuto::SetHoleData ( IUnknown * Holedata ) {
    HRESULT _hr = raw_SetHoleData(Holedata);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3368)
inline HRESULT TGAssembly::_IAssemblyFeaturesHoleAuto::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles ) {
    HRESULT _hr = raw_GetProfiles(NumProfiles, ppProfiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3369)
inline HRESULT TGAssembly::_IAssemblyFeaturesHoleAuto::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles ) {
    HRESULT _hr = raw_SetProfiles(NumProfiles, pProfiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3370)
inline HRESULT TGAssembly::_IAssemblyFeaturesHoleAuto::SetFromPlane ( IUnknown * FromPlane ) {
    HRESULT _hr = raw_SetFromPlane(FromPlane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3371)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesHoleAuto::GetFromPlane ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetFromPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3372)
inline HRESULT TGAssembly::_IAssemblyFeaturesHoleAuto::SetToPlane ( IUnknown * ToPlane ) {
    HRESULT _hr = raw_SetToPlane(ToPlane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3373)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesHoleAuto::GetToPlane ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetToPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3374)
inline HRESULT TGAssembly::_IAssemblyFeaturesHoleAuto::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts ) {
    HRESULT _hr = raw_SetScopeParts(NumScopeParts, pScopeParts);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3375)
inline HRESULT TGAssembly::_IAssemblyFeaturesHoleAuto::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts ) {
    HRESULT _hr = raw_GetScopeParts(NumScopeParts, pScopeParts);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3376)
inline _bstr_t TGAssembly::_IAssemblyFeaturesHoleAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3377)
inline void TGAssembly::_IAssemblyFeaturesHoleAuto::PutName ( _bstr_t featureName ) {
    HRESULT _hr = put_Name(featureName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3378)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesHoleAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Edges(EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3379)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesHoleAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Faces(FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3380)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesHoleAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRay(Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3381)
inline HRESULT TGAssembly::_IAssemblyFeaturesHoleAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    HRESULT _hr = raw_Range(X1, Y1, Z1, X2, Y2, Z2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3382)
inline VARIANT_BOOL TGAssembly::_IAssemblyFeaturesHoleAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3383)
inline void TGAssembly::_IAssemblyFeaturesHoleAuto::PutSuppress ( VARIANT_BOOL Suppress ) {
    HRESULT _hr = put_Suppress(Suppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3384)
inline HRESULT TGAssembly::_IAssemblyFeaturesHoleAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3385)
inline HRESULT TGAssembly::_IAssemblyFeaturesHoleAuto::RollToFeature ( ) {
    HRESULT _hr = raw_RollToFeature();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3386)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesHoleAuto::GetEdgesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_EdgesForScopePart(ScopePart, EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3387)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesHoleAuto::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesForScopePart(ScopePart, FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3388)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesHoleAuto::GetFacesByRayForScopePart ( IUnknown * ScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRayForScopePart(ScopePart, Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3389)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAssemblyFeaturesHoleAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3390)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFeaturesHoleAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3391)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFeaturesHoleAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3392)
inline HRESULT TGAssembly::_IAssemblyFeaturesHoleAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3393)
inline VARIANT_BOOL TGAssembly::_IAssemblyFeaturesHoleAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3394)
inline enum TGPart::FeatureTypeConstants TGAssembly::_IAssemblyFeaturesHoleAuto::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    HRESULT _hr = get_FeatureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AssemblyFeaturesMirrors wrapper method implementations
//

#pragma implementation_key(3395)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeaturesMirrors::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3396)
inline IDispatchPtr TGAssembly::AssemblyFeaturesMirrors::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3397)
inline TGAssembly::AssemblyFeaturesMirrorPtr TGAssembly::AssemblyFeaturesMirrors::Item ( const _variant_t & Index ) {
    struct AssemblyFeaturesMirror * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyFeaturesMirrorPtr(_result, false);
}

#pragma implementation_key(3398)
inline long TGAssembly::AssemblyFeaturesMirrors::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3399)
inline TGAssembly::AssemblyFeaturesMirrorPtr TGAssembly::AssemblyFeaturesMirrors::Add ( long NumberOfFeatures, SAFEARRAY * * ppFeaturesArray, IUnknown * pMirrorPlane, enum TGPart::FeaturePropertyConstants MirrorType ) {
    struct AssemblyFeaturesMirror * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x600d\x000d\x0003", NumberOfFeatures, ppFeaturesArray, pMirrorPlane, MirrorType);
    return AssemblyFeaturesMirrorPtr(_result, false);
}

//
// dispinterface AssemblyFeaturesMirror wrapper method implementations
//

#pragma implementation_key(3400)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeaturesMirror::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3401)
inline IDispatchPtr TGAssembly::AssemblyFeaturesMirror::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3402)
inline HRESULT TGAssembly::AssemblyFeaturesMirror::SetPlane ( IUnknown * Plane ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", Plane);
}

#pragma implementation_key(3403)
inline IUnknownPtr TGAssembly::AssemblyFeaturesMirror::GetPlane ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3404)
inline HRESULT TGAssembly::AssemblyFeaturesMirror::GetParentFeatures ( long * NumParentFeatures, SAFEARRAY * * ppParentFeatures ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumParentFeatures, ppParentFeatures);
}

#pragma implementation_key(3405)
inline HRESULT TGAssembly::AssemblyFeaturesMirror::SetParentFeatures ( long NumParentFeatures, SAFEARRAY * pParentFeatures ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumParentFeatures, pParentFeatures);
}

#pragma implementation_key(3406)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyFeaturesMirror::GetMirrorType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3407)
inline HRESULT TGAssembly::AssemblyFeaturesMirror::SetMirrorType ( enum TGPart::FeaturePropertyConstants MirrorType ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", MirrorType);
}

#pragma implementation_key(3408)
inline _bstr_t TGAssembly::AssemblyFeaturesMirror::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3409)
inline void TGAssembly::AssemblyFeaturesMirror::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3410)
inline IDispatchPtr TGAssembly::AssemblyFeaturesMirror::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3411)
inline IDispatchPtr TGAssembly::AssemblyFeaturesMirror::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3412)
inline IDispatchPtr TGAssembly::AssemblyFeaturesMirror::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3413)
inline HRESULT TGAssembly::AssemblyFeaturesMirror::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", X1, Y1, Z1, X2, Y2, Z2);
}

#pragma implementation_key(3414)
inline VARIANT_BOOL TGAssembly::AssemblyFeaturesMirror::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3415)
inline void TGAssembly::AssemblyFeaturesMirror::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3416)
inline HRESULT TGAssembly::AssemblyFeaturesMirror::Delete ( ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3417)
inline HRESULT TGAssembly::AssemblyFeaturesMirror::RollToFeature ( ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3418)
inline IDispatchPtr TGAssembly::AssemblyFeaturesMirror::GetEdgesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000d\x0003", ScopePart, EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3419)
inline IDispatchPtr TGAssembly::AssemblyFeaturesMirror::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000d\x0003", ScopePart, FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3420)
inline IDispatchPtr TGAssembly::AssemblyFeaturesMirror::GetFacesByRayForScopePart ( IUnknown * ScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000d\x0005\x0005\x0005\x0005\x0005\x0005", ScopePart, Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3421)
inline enum TGPart::FeatureStatusConstants TGAssembly::AssemblyFeaturesMirror::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

#pragma implementation_key(3422)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFeaturesMirror::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3423)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFeaturesMirror::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3424)
inline HRESULT TGAssembly::AssemblyFeaturesMirror::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3425)
inline VARIANT_BOOL TGAssembly::AssemblyFeaturesMirror::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3426)
inline enum TGPart::FeatureTypeConstants TGAssembly::AssemblyFeaturesMirror::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    _com_dispatch_method(this, 0x10001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IAssemblyFeaturesMirrorsAuto wrapper method implementations
//

#pragma implementation_key(3427)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesMirrorsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3428)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesMirrorsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3429)
inline TGAssembly::AssemblyFeaturesMirrorPtr TGAssembly::_IAssemblyFeaturesMirrorsAuto::Item ( const _variant_t & Index ) {
    struct AssemblyFeaturesMirror * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesMirrorPtr(_result, false);
}

#pragma implementation_key(3430)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesMirrorsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3431)
inline long TGAssembly::_IAssemblyFeaturesMirrorsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3432)
inline TGAssembly::AssemblyFeaturesMirrorPtr TGAssembly::_IAssemblyFeaturesMirrorsAuto::Add ( long NumberOfFeatures, SAFEARRAY * * ppFeaturesArray, IUnknown * pMirrorPlane, enum TGPart::FeaturePropertyConstants MirrorType ) {
    struct AssemblyFeaturesMirror * _result = 0;
    HRESULT _hr = raw_Add(NumberOfFeatures, ppFeaturesArray, pMirrorPlane, MirrorType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesMirrorPtr(_result, false);
}

//
// interface _IAssemblyFeaturesMirrorAuto wrapper method implementations
//

#pragma implementation_key(3433)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesMirrorAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3434)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesMirrorAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3435)
inline HRESULT TGAssembly::_IAssemblyFeaturesMirrorAuto::SetPlane ( IUnknown * Plane ) {
    HRESULT _hr = raw_SetPlane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3436)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesMirrorAuto::GetPlane ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3437)
inline HRESULT TGAssembly::_IAssemblyFeaturesMirrorAuto::GetParentFeatures ( long * NumParentFeatures, SAFEARRAY * * ppParentFeatures ) {
    HRESULT _hr = raw_GetParentFeatures(NumParentFeatures, ppParentFeatures);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3438)
inline HRESULT TGAssembly::_IAssemblyFeaturesMirrorAuto::SetParentFeatures ( long NumParentFeatures, SAFEARRAY * pParentFeatures ) {
    HRESULT _hr = raw_SetParentFeatures(NumParentFeatures, pParentFeatures);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3439)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyFeaturesMirrorAuto::GetMirrorType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetMirrorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3440)
inline HRESULT TGAssembly::_IAssemblyFeaturesMirrorAuto::SetMirrorType ( enum TGPart::FeaturePropertyConstants MirrorType ) {
    HRESULT _hr = raw_SetMirrorType(MirrorType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3441)
inline _bstr_t TGAssembly::_IAssemblyFeaturesMirrorAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3442)
inline void TGAssembly::_IAssemblyFeaturesMirrorAuto::PutName ( _bstr_t featureName ) {
    HRESULT _hr = put_Name(featureName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3443)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesMirrorAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Edges(EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3444)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesMirrorAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Faces(FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3445)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesMirrorAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRay(Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3446)
inline HRESULT TGAssembly::_IAssemblyFeaturesMirrorAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    HRESULT _hr = raw_Range(X1, Y1, Z1, X2, Y2, Z2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3447)
inline VARIANT_BOOL TGAssembly::_IAssemblyFeaturesMirrorAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3448)
inline void TGAssembly::_IAssemblyFeaturesMirrorAuto::PutSuppress ( VARIANT_BOOL Suppress ) {
    HRESULT _hr = put_Suppress(Suppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3449)
inline HRESULT TGAssembly::_IAssemblyFeaturesMirrorAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3450)
inline HRESULT TGAssembly::_IAssemblyFeaturesMirrorAuto::RollToFeature ( ) {
    HRESULT _hr = raw_RollToFeature();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3451)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesMirrorAuto::GetEdgesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_EdgesForScopePart(ScopePart, EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3452)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesMirrorAuto::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesForScopePart(ScopePart, FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3453)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesMirrorAuto::GetFacesByRayForScopePart ( IUnknown * ScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRayForScopePart(ScopePart, Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3454)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAssemblyFeaturesMirrorAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3455)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFeaturesMirrorAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3456)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFeaturesMirrorAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3457)
inline HRESULT TGAssembly::_IAssemblyFeaturesMirrorAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3458)
inline VARIANT_BOOL TGAssembly::_IAssemblyFeaturesMirrorAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3459)
inline enum TGPart::FeatureTypeConstants TGAssembly::_IAssemblyFeaturesMirrorAuto::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    HRESULT _hr = get_FeatureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AssemblyFeaturesPatterns wrapper method implementations
//

#pragma implementation_key(3460)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeaturesPatterns::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3461)
inline IDispatchPtr TGAssembly::AssemblyFeaturesPatterns::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3462)
inline TGAssembly::AssemblyFeaturesPatternPtr TGAssembly::AssemblyFeaturesPatterns::Item ( const _variant_t & Index ) {
    struct AssemblyFeaturesPattern * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyFeaturesPatternPtr(_result, false);
}

#pragma implementation_key(3463)
inline long TGAssembly::AssemblyFeaturesPatterns::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3464)
inline TGAssembly::AssemblyFeaturesPatternPtr TGAssembly::AssemblyFeaturesPatterns::Add ( long NumberOfFeatures, SAFEARRAY * * ppFeaturesArray, IUnknown * Profile, enum TGPart::FeaturePropertyConstants PatternType ) {
    struct AssemblyFeaturesPattern * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x600d\x000d\x0003", NumberOfFeatures, ppFeaturesArray, Profile, PatternType);
    return AssemblyFeaturesPatternPtr(_result, false);
}

//
// dispinterface AssemblyFeaturesPattern wrapper method implementations
//

#pragma implementation_key(3465)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeaturesPattern::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3466)
inline IDispatchPtr TGAssembly::AssemblyFeaturesPattern::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3467)
inline HRESULT TGAssembly::AssemblyFeaturesPattern::SetProfile ( IUnknown * pProfile ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", pProfile);
}

#pragma implementation_key(3468)
inline IUnknownPtr TGAssembly::AssemblyFeaturesPattern::GetProfile ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3469)
inline HRESULT TGAssembly::AssemblyFeaturesPattern::GetParentFeatures ( long * NumParentFeatures, SAFEARRAY * * ppParentFeatures ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumParentFeatures, ppParentFeatures);
}

#pragma implementation_key(3470)
inline HRESULT TGAssembly::AssemblyFeaturesPattern::SetParentFeatures ( long NumParentFeatures, SAFEARRAY * pParentFeatures ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumParentFeatures, pParentFeatures);
}

#pragma implementation_key(3471)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyFeaturesPattern::GetPatternType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3472)
inline HRESULT TGAssembly::AssemblyFeaturesPattern::SetPatternType ( enum TGPart::FeaturePropertyConstants PatternType ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", PatternType);
}

#pragma implementation_key(3473)
inline _bstr_t TGAssembly::AssemblyFeaturesPattern::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3474)
inline void TGAssembly::AssemblyFeaturesPattern::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3475)
inline IDispatchPtr TGAssembly::AssemblyFeaturesPattern::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3476)
inline IDispatchPtr TGAssembly::AssemblyFeaturesPattern::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3477)
inline IDispatchPtr TGAssembly::AssemblyFeaturesPattern::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3478)
inline HRESULT TGAssembly::AssemblyFeaturesPattern::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", X1, Y1, Z1, X2, Y2, Z2);
}

#pragma implementation_key(3479)
inline VARIANT_BOOL TGAssembly::AssemblyFeaturesPattern::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3480)
inline void TGAssembly::AssemblyFeaturesPattern::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3481)
inline HRESULT TGAssembly::AssemblyFeaturesPattern::Delete ( ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3482)
inline HRESULT TGAssembly::AssemblyFeaturesPattern::RollToFeature ( ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3483)
inline IDispatchPtr TGAssembly::AssemblyFeaturesPattern::GetEdgesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000d\x0003", ScopePart, EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3484)
inline IDispatchPtr TGAssembly::AssemblyFeaturesPattern::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000d\x0003", ScopePart, FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3485)
inline IDispatchPtr TGAssembly::AssemblyFeaturesPattern::GetFacesByRayForScopePart ( IUnknown * ScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000d\x0005\x0005\x0005\x0005\x0005\x0005", ScopePart, Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3486)
inline enum TGPart::FeatureStatusConstants TGAssembly::AssemblyFeaturesPattern::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

#pragma implementation_key(3487)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFeaturesPattern::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3488)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFeaturesPattern::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3489)
inline HRESULT TGAssembly::AssemblyFeaturesPattern::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3490)
inline VARIANT_BOOL TGAssembly::AssemblyFeaturesPattern::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3491)
inline enum TGPart::FeatureTypeConstants TGAssembly::AssemblyFeaturesPattern::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    _com_dispatch_method(this, 0x10001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IAssemblyFeaturesPatternsAuto wrapper method implementations
//

#pragma implementation_key(3492)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesPatternsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3493)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesPatternsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3494)
inline TGAssembly::AssemblyFeaturesPatternPtr TGAssembly::_IAssemblyFeaturesPatternsAuto::Item ( const _variant_t & Index ) {
    struct AssemblyFeaturesPattern * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesPatternPtr(_result, false);
}

#pragma implementation_key(3495)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesPatternsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3496)
inline long TGAssembly::_IAssemblyFeaturesPatternsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3497)
inline TGAssembly::AssemblyFeaturesPatternPtr TGAssembly::_IAssemblyFeaturesPatternsAuto::Add ( long NumberOfFeatures, SAFEARRAY * * ppFeaturesArray, IUnknown * Profile, enum TGPart::FeaturePropertyConstants PatternType ) {
    struct AssemblyFeaturesPattern * _result = 0;
    HRESULT _hr = raw_Add(NumberOfFeatures, ppFeaturesArray, Profile, PatternType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesPatternPtr(_result, false);
}

//
// interface _IAssemblyFeaturesPatternAuto wrapper method implementations
//

#pragma implementation_key(3498)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesPatternAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3499)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesPatternAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3500)
inline HRESULT TGAssembly::_IAssemblyFeaturesPatternAuto::SetProfile ( IUnknown * pProfile ) {
    HRESULT _hr = raw_SetProfile(pProfile);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3501)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesPatternAuto::GetProfile ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetProfile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3502)
inline HRESULT TGAssembly::_IAssemblyFeaturesPatternAuto::GetParentFeatures ( long * NumParentFeatures, SAFEARRAY * * ppParentFeatures ) {
    HRESULT _hr = raw_GetParentFeatures(NumParentFeatures, ppParentFeatures);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3503)
inline HRESULT TGAssembly::_IAssemblyFeaturesPatternAuto::SetParentFeatures ( long NumParentFeatures, SAFEARRAY * pParentFeatures ) {
    HRESULT _hr = raw_SetParentFeatures(NumParentFeatures, pParentFeatures);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3504)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyFeaturesPatternAuto::GetPatternType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetPatternType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3505)
inline HRESULT TGAssembly::_IAssemblyFeaturesPatternAuto::SetPatternType ( enum TGPart::FeaturePropertyConstants PatternType ) {
    HRESULT _hr = raw_SetPatternType(PatternType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3506)
inline _bstr_t TGAssembly::_IAssemblyFeaturesPatternAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3507)
inline void TGAssembly::_IAssemblyFeaturesPatternAuto::PutName ( _bstr_t featureName ) {
    HRESULT _hr = put_Name(featureName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3508)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesPatternAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Edges(EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3509)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesPatternAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Faces(FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3510)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesPatternAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRay(Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3511)
inline HRESULT TGAssembly::_IAssemblyFeaturesPatternAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    HRESULT _hr = raw_Range(X1, Y1, Z1, X2, Y2, Z2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3512)
inline VARIANT_BOOL TGAssembly::_IAssemblyFeaturesPatternAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3513)
inline void TGAssembly::_IAssemblyFeaturesPatternAuto::PutSuppress ( VARIANT_BOOL Suppress ) {
    HRESULT _hr = put_Suppress(Suppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3514)
inline HRESULT TGAssembly::_IAssemblyFeaturesPatternAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3515)
inline HRESULT TGAssembly::_IAssemblyFeaturesPatternAuto::RollToFeature ( ) {
    HRESULT _hr = raw_RollToFeature();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3516)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesPatternAuto::GetEdgesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_EdgesForScopePart(ScopePart, EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3517)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesPatternAuto::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesForScopePart(ScopePart, FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3518)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesPatternAuto::GetFacesByRayForScopePart ( IUnknown * ScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRayForScopePart(ScopePart, Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3519)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAssemblyFeaturesPatternAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3520)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFeaturesPatternAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3521)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFeaturesPatternAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3522)
inline HRESULT TGAssembly::_IAssemblyFeaturesPatternAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3523)
inline VARIANT_BOOL TGAssembly::_IAssemblyFeaturesPatternAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3524)
inline enum TGPart::FeatureTypeConstants TGAssembly::_IAssemblyFeaturesPatternAuto::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    HRESULT _hr = get_FeatureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AssemblyFilletWelds wrapper method implementations
//

#pragma implementation_key(3525)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFilletWelds::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3526)
inline IDispatchPtr TGAssembly::AssemblyFilletWelds::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3527)
inline TGAssembly::AssemblyFilletWeldPtr TGAssembly::AssemblyFilletWelds::Item ( const _variant_t & Index ) {
    struct AssemblyFilletWeld * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyFilletWeldPtr(_result, false);
}

#pragma implementation_key(3528)
inline long TGAssembly::AssemblyFilletWelds::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3529)
inline TGAssembly::AssemblyFilletWeldPtr TGAssembly::AssemblyFilletWelds::Add ( long NumberOfBaseFaces, SAFEARRAY * * BaseFaces, long NumberOfTargetFaces, SAFEARRAY * * TargetFaces, IDispatch * pLabelWeldDataObject, enum TGPart::FilletWeldSetbackConstants eSetbackType, double dBaseThickness, double dTargetThickness ) {
    struct AssemblyFilletWeld * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x0003\x6009\x0009\x0003\x0005\x0005", NumberOfBaseFaces, BaseFaces, NumberOfTargetFaces, TargetFaces, pLabelWeldDataObject, eSetbackType, dBaseThickness, dTargetThickness);
    return AssemblyFilletWeldPtr(_result, false);
}

//
// dispinterface AssemblyFilletWeld wrapper method implementations
//

#pragma implementation_key(3530)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFilletWeld::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3531)
inline IDispatchPtr TGAssembly::AssemblyFilletWeld::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3532)
inline void TGAssembly::AssemblyFilletWeld::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3533)
inline _bstr_t TGAssembly::AssemblyFilletWeld::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3534)
inline void TGAssembly::AssemblyFilletWeld::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3535)
inline VARIANT_BOOL TGAssembly::AssemblyFilletWeld::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3536)
inline HRESULT TGAssembly::AssemblyFilletWeld::Recompute ( ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3537)
inline HRESULT TGAssembly::AssemblyFilletWeld::Delete ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3538)
inline HRESULT TGAssembly::AssemblyFilletWeld::GoTo ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3539)
inline void TGAssembly::AssemblyFilletWeld::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3540)
inline VARIANT_BOOL TGAssembly::AssemblyFilletWeld::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3541)
inline double TGAssembly::AssemblyFilletWeld::GetTargetThickness ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3542)
inline void TGAssembly::AssemblyFilletWeld::PutTargetThickness ( double _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3543)
inline double TGAssembly::AssemblyFilletWeld::GetBaseThickness ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3544)
inline void TGAssembly::AssemblyFilletWeld::PutBaseThickness ( double _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3545)
inline enum TGPart::FilletWeldSetbackConstants TGAssembly::AssemblyFilletWeld::GetSetBackType ( ) {
    enum TGPart::FilletWeldSetbackConstants _result;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3546)
inline void TGAssembly::AssemblyFilletWeld::PutSetBackType ( enum TGPart::FilletWeldSetbackConstants _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3547)
inline IDispatchPtr TGAssembly::AssemblyFilletWeld::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3548)
inline IDispatchPtr TGAssembly::AssemblyFilletWeld::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3549)
inline IDispatchPtr TGAssembly::AssemblyFilletWeld::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3550)
inline HRESULT TGAssembly::AssemblyFilletWeld::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", X1, Y1, Z1, X2, Y2, Z2);
}

#pragma implementation_key(3551)
inline enum TGPart::FeatureStatusConstants TGAssembly::AssemblyFilletWeld::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

#pragma implementation_key(3552)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFilletWeld::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3553)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFilletWeld::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3554)
inline HRESULT TGAssembly::AssemblyFilletWeld::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3555)
inline VARIANT_BOOL TGAssembly::AssemblyFilletWeld::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3556)
inline enum TGPart::FeatureTypeConstants TGAssembly::AssemblyFilletWeld::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    _com_dispatch_method(this, 0x10001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3557)
inline HRESULT TGAssembly::AssemblyFilletWeld::GetLabelWeldData ( IDispatch * * Object ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009", Object);
}

#pragma implementation_key(3558)
inline IDispatchPtr TGAssembly::AssemblyFilletWeld::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3559)
inline VARIANT_BOOL TGAssembly::AssemblyFilletWeld::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(3560)
inline TGAssembly::AssemblyBodyPtr TGAssembly::AssemblyFilletWeld::GetAssemblyBody ( ) {
    struct AssemblyBody * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyBodyPtr(_result, false);
}

//
// interface _IAssemblyFilletWeldsAuto wrapper method implementations
//

#pragma implementation_key(3561)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFilletWeldsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3562)
inline IDispatchPtr TGAssembly::_IAssemblyFilletWeldsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3563)
inline TGAssembly::AssemblyFilletWeldPtr TGAssembly::_IAssemblyFilletWeldsAuto::Item ( const _variant_t & Index ) {
    struct AssemblyFilletWeld * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFilletWeldPtr(_result, false);
}

#pragma implementation_key(3564)
inline long TGAssembly::_IAssemblyFilletWeldsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3565)
inline IUnknownPtr TGAssembly::_IAssemblyFilletWeldsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3566)
inline TGAssembly::AssemblyFilletWeldPtr TGAssembly::_IAssemblyFilletWeldsAuto::Add ( long NumberOfBaseFaces, SAFEARRAY * * BaseFaces, long NumberOfTargetFaces, SAFEARRAY * * TargetFaces, IDispatch * pLabelWeldDataObject, enum TGPart::FilletWeldSetbackConstants eSetbackType, double dBaseThickness, double dTargetThickness ) {
    struct AssemblyFilletWeld * _result = 0;
    HRESULT _hr = raw_Add(NumberOfBaseFaces, BaseFaces, NumberOfTargetFaces, TargetFaces, pLabelWeldDataObject, eSetbackType, dBaseThickness, dTargetThickness, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFilletWeldPtr(_result, false);
}

//
// interface _IAssemblyFilletWeldAuto wrapper method implementations
//

#pragma implementation_key(3567)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFilletWeldAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3568)
inline IDispatchPtr TGAssembly::_IAssemblyFilletWeldAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3569)
inline void TGAssembly::_IAssemblyFilletWeldAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3570)
inline _bstr_t TGAssembly::_IAssemblyFilletWeldAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3571)
inline void TGAssembly::_IAssemblyFilletWeldAuto::PutVisible ( VARIANT_BOOL bVisible ) {
    HRESULT _hr = put_Visible(bVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3572)
inline VARIANT_BOOL TGAssembly::_IAssemblyFilletWeldAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3573)
inline HRESULT TGAssembly::_IAssemblyFilletWeldAuto::Recompute ( ) {
    HRESULT _hr = raw_Recompute();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3574)
inline HRESULT TGAssembly::_IAssemblyFilletWeldAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3575)
inline HRESULT TGAssembly::_IAssemblyFilletWeldAuto::GoTo ( ) {
    HRESULT _hr = raw_GoTo();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3576)
inline void TGAssembly::_IAssemblyFilletWeldAuto::PutSuppress ( VARIANT_BOOL pvbSuppress ) {
    HRESULT _hr = put_Suppress(pvbSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3577)
inline VARIANT_BOOL TGAssembly::_IAssemblyFilletWeldAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3578)
inline double TGAssembly::_IAssemblyFilletWeldAuto::GetTargetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_TargetThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3579)
inline void TGAssembly::_IAssemblyFilletWeldAuto::PutTargetThickness ( double TargetThickness ) {
    HRESULT _hr = put_TargetThickness(TargetThickness);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3580)
inline double TGAssembly::_IAssemblyFilletWeldAuto::GetBaseThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_BaseThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3581)
inline void TGAssembly::_IAssemblyFilletWeldAuto::PutBaseThickness ( double BaseThickness ) {
    HRESULT _hr = put_BaseThickness(BaseThickness);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3582)
inline enum TGPart::FilletWeldSetbackConstants TGAssembly::_IAssemblyFilletWeldAuto::GetSetBackType ( ) {
    enum TGPart::FilletWeldSetbackConstants _result;
    HRESULT _hr = get_SetBackType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3583)
inline void TGAssembly::_IAssemblyFilletWeldAuto::PutSetBackType ( enum TGPart::FilletWeldSetbackConstants pSetBackType ) {
    HRESULT _hr = put_SetBackType(pSetBackType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3584)
inline IDispatchPtr TGAssembly::_IAssemblyFilletWeldAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Edges(EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3585)
inline IDispatchPtr TGAssembly::_IAssemblyFilletWeldAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Faces(FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3586)
inline IDispatchPtr TGAssembly::_IAssemblyFilletWeldAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRay(Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3587)
inline HRESULT TGAssembly::_IAssemblyFilletWeldAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    HRESULT _hr = raw_Range(X1, Y1, Z1, X2, Y2, Z2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3588)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAssemblyFilletWeldAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3589)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFilletWeldAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3590)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFilletWeldAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3591)
inline HRESULT TGAssembly::_IAssemblyFilletWeldAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3592)
inline VARIANT_BOOL TGAssembly::_IAssemblyFilletWeldAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3593)
inline enum TGPart::FeatureTypeConstants TGAssembly::_IAssemblyFilletWeldAuto::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    HRESULT _hr = get_FeatureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3594)
inline HRESULT TGAssembly::_IAssemblyFilletWeldAuto::GetLabelWeldData ( IDispatch * * Object ) {
    HRESULT _hr = raw_GetLabelWeldData(Object);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3595)
inline IDispatchPtr TGAssembly::_IAssemblyFilletWeldAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3596)
inline VARIANT_BOOL TGAssembly::_IAssemblyFilletWeldAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3597)
inline TGAssembly::AssemblyBodyPtr TGAssembly::_IAssemblyFilletWeldAuto::GetAssemblyBody ( ) {
    struct AssemblyBody * _result = 0;
    HRESULT _hr = get_AssemblyBody(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyBodyPtr(_result, false);
}

//
// dispinterface AFGrooveWelds wrapper method implementations
//

#pragma implementation_key(3598)
inline TGFramework::ApplicationPtr TGAssembly::AFGrooveWelds::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3599)
inline IDispatchPtr TGAssembly::AFGrooveWelds::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3600)
inline TGAssembly::AFGrooveWeldPtr TGAssembly::AFGrooveWelds::Item ( const _variant_t & Index ) {
    struct AFGrooveWeld * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AFGrooveWeldPtr(_result, false);
}

#pragma implementation_key(3601)
inline long TGAssembly::AFGrooveWelds::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface AFGrooveWeld wrapper method implementations
//

#pragma implementation_key(3602)
inline TGFramework::ApplicationPtr TGAssembly::AFGrooveWeld::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3603)
inline IDispatchPtr TGAssembly::AFGrooveWeld::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3604)
inline void TGAssembly::AFGrooveWeld::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3605)
inline _bstr_t TGAssembly::AFGrooveWeld::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3606)
inline void TGAssembly::AFGrooveWeld::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3607)
inline VARIANT_BOOL TGAssembly::AFGrooveWeld::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3608)
inline HRESULT TGAssembly::AFGrooveWeld::Recompute ( ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3609)
inline HRESULT TGAssembly::AFGrooveWeld::Delete ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3610)
inline HRESULT TGAssembly::AFGrooveWeld::GoTo ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3611)
inline void TGAssembly::AFGrooveWeld::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3612)
inline VARIANT_BOOL TGAssembly::AFGrooveWeld::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3613)
inline enum TGPart::FeatureStatusConstants TGAssembly::AFGrooveWeld::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

#pragma implementation_key(3614)
inline TGPart::SuppressVariablePtr TGAssembly::AFGrooveWeld::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3615)
inline TGPart::SuppressVariablePtr TGAssembly::AFGrooveWeld::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3616)
inline HRESULT TGAssembly::AFGrooveWeld::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3617)
inline VARIANT_BOOL TGAssembly::AFGrooveWeld::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3618)
inline enum TGPart::FeatureTypeConstants TGAssembly::AFGrooveWeld::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    _com_dispatch_method(this, 0x10001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3619)
inline TGAssembly::AssemblyBodyPtr TGAssembly::AFGrooveWeld::GetAssemblyBody ( ) {
    struct AssemblyBody * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyBodyPtr(_result, false);
}

#pragma implementation_key(3620)
inline HRESULT TGAssembly::AFGrooveWeld::GetLabelWeldData ( IDispatch * * Object ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009", Object);
}

#pragma implementation_key(3621)
inline IDispatchPtr TGAssembly::AFGrooveWeld::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3622)
inline VARIANT_BOOL TGAssembly::AFGrooveWeld::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IAFGrooveWeldsAuto wrapper method implementations
//

#pragma implementation_key(3623)
inline TGFramework::ApplicationPtr TGAssembly::_IAFGrooveWeldsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3624)
inline IDispatchPtr TGAssembly::_IAFGrooveWeldsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3625)
inline TGAssembly::AFGrooveWeldPtr TGAssembly::_IAFGrooveWeldsAuto::Item ( const _variant_t & Index ) {
    struct AFGrooveWeld * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AFGrooveWeldPtr(_result, false);
}

#pragma implementation_key(3626)
inline long TGAssembly::_IAFGrooveWeldsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3627)
inline IUnknownPtr TGAssembly::_IAFGrooveWeldsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface _IAFGrooveWeldAuto wrapper method implementations
//

#pragma implementation_key(3628)
inline TGFramework::ApplicationPtr TGAssembly::_IAFGrooveWeldAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3629)
inline IDispatchPtr TGAssembly::_IAFGrooveWeldAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3630)
inline void TGAssembly::_IAFGrooveWeldAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3631)
inline _bstr_t TGAssembly::_IAFGrooveWeldAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3632)
inline void TGAssembly::_IAFGrooveWeldAuto::PutVisible ( VARIANT_BOOL bVisible ) {
    HRESULT _hr = put_Visible(bVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3633)
inline VARIANT_BOOL TGAssembly::_IAFGrooveWeldAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3634)
inline HRESULT TGAssembly::_IAFGrooveWeldAuto::Recompute ( ) {
    HRESULT _hr = raw_Recompute();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3635)
inline HRESULT TGAssembly::_IAFGrooveWeldAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3636)
inline HRESULT TGAssembly::_IAFGrooveWeldAuto::GoTo ( ) {
    HRESULT _hr = raw_GoTo();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3637)
inline void TGAssembly::_IAFGrooveWeldAuto::PutSuppress ( VARIANT_BOOL pvbSuppress ) {
    HRESULT _hr = put_Suppress(pvbSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3638)
inline VARIANT_BOOL TGAssembly::_IAFGrooveWeldAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3639)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAFGrooveWeldAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3640)
inline TGPart::SuppressVariablePtr TGAssembly::_IAFGrooveWeldAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3641)
inline TGPart::SuppressVariablePtr TGAssembly::_IAFGrooveWeldAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3642)
inline HRESULT TGAssembly::_IAFGrooveWeldAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3643)
inline VARIANT_BOOL TGAssembly::_IAFGrooveWeldAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3644)
inline enum TGPart::FeatureTypeConstants TGAssembly::_IAFGrooveWeldAuto::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    HRESULT _hr = get_FeatureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3645)
inline TGAssembly::AssemblyBodyPtr TGAssembly::_IAFGrooveWeldAuto::GetAssemblyBody ( ) {
    struct AssemblyBody * _result = 0;
    HRESULT _hr = get_AssemblyBody(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyBodyPtr(_result, false);
}

#pragma implementation_key(3646)
inline HRESULT TGAssembly::_IAFGrooveWeldAuto::GetLabelWeldData ( IDispatch * * Object ) {
    HRESULT _hr = raw_GetLabelWeldData(Object);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3647)
inline IDispatchPtr TGAssembly::_IAFGrooveWeldAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3648)
inline VARIANT_BOOL TGAssembly::_IAFGrooveWeldAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AssemblyFeaturesSweptProtrusions wrapper method implementations
//

#pragma implementation_key(3649)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeaturesSweptProtrusions::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3650)
inline IDispatchPtr TGAssembly::AssemblyFeaturesSweptProtrusions::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3651)
inline TGAssembly::AssemblyFeaturesSweptProtrusionPtr TGAssembly::AssemblyFeaturesSweptProtrusions::Item ( const _variant_t & Index ) {
    struct AssemblyFeaturesSweptProtrusion * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyFeaturesSweptProtrusionPtr(_result, false);
}

#pragma implementation_key(3652)
inline long TGAssembly::AssemblyFeaturesSweptProtrusions::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3653)
inline TGAssembly::AssemblyFeaturesSweptProtrusionPtr TGAssembly::AssemblyFeaturesSweptProtrusions::Add ( long NumCurves, SAFEARRAY * * TraceCurves, long NumSections, SAFEARRAY * * CrossSections, SAFEARRAY * * Origins ) {
    struct AssemblyFeaturesSweptProtrusion * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x600d\x0003\x600d\x600c", NumCurves, TraceCurves, NumSections, CrossSections, Origins);
    return AssemblyFeaturesSweptProtrusionPtr(_result, false);
}

//
// dispinterface AssemblyFeaturesSweptProtrusion wrapper method implementations
//

#pragma implementation_key(3654)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeaturesSweptProtrusion::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3655)
inline IDispatchPtr TGAssembly::AssemblyFeaturesSweptProtrusion::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3656)
inline _bstr_t TGAssembly::AssemblyFeaturesSweptProtrusion::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3657)
inline void TGAssembly::AssemblyFeaturesSweptProtrusion::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3658)
inline IDispatchPtr TGAssembly::AssemblyFeaturesSweptProtrusion::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3659)
inline IDispatchPtr TGAssembly::AssemblyFeaturesSweptProtrusion::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3660)
inline IDispatchPtr TGAssembly::AssemblyFeaturesSweptProtrusion::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3661)
inline HRESULT TGAssembly::AssemblyFeaturesSweptProtrusion::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", X1, Y1, Z1, X2, Y2, Z2);
}

#pragma implementation_key(3662)
inline VARIANT_BOOL TGAssembly::AssemblyFeaturesSweptProtrusion::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3663)
inline void TGAssembly::AssemblyFeaturesSweptProtrusion::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3664)
inline HRESULT TGAssembly::AssemblyFeaturesSweptProtrusion::Delete ( ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3665)
inline HRESULT TGAssembly::AssemblyFeaturesSweptProtrusion::RollToFeature ( ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3666)
inline enum TGPart::FeatureStatusConstants TGAssembly::AssemblyFeaturesSweptProtrusion::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

#pragma implementation_key(3667)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFeaturesSweptProtrusion::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3668)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFeaturesSweptProtrusion::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3669)
inline HRESULT TGAssembly::AssemblyFeaturesSweptProtrusion::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3670)
inline VARIANT_BOOL TGAssembly::AssemblyFeaturesSweptProtrusion::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3671)
inline enum TGPart::FeatureTypeConstants TGAssembly::AssemblyFeaturesSweptProtrusion::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    _com_dispatch_method(this, 0x10001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3672)
inline TGAssembly::AssemblyBodyPtr TGAssembly::AssemblyFeaturesSweptProtrusion::GetAssemblyBody ( ) {
    struct AssemblyBody * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyBodyPtr(_result, false);
}

//
// interface _IAssemblyFeaturesSweptProtrusionsAuto wrapper method implementations
//

#pragma implementation_key(3673)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesSweptProtrusionsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3674)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesSweptProtrusionsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3675)
inline TGAssembly::AssemblyFeaturesSweptProtrusionPtr TGAssembly::_IAssemblyFeaturesSweptProtrusionsAuto::Item ( const _variant_t & Index ) {
    struct AssemblyFeaturesSweptProtrusion * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesSweptProtrusionPtr(_result, false);
}

#pragma implementation_key(3676)
inline long TGAssembly::_IAssemblyFeaturesSweptProtrusionsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3677)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesSweptProtrusionsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3678)
inline TGAssembly::AssemblyFeaturesSweptProtrusionPtr TGAssembly::_IAssemblyFeaturesSweptProtrusionsAuto::Add ( long NumCurves, SAFEARRAY * * TraceCurves, long NumSections, SAFEARRAY * * CrossSections, SAFEARRAY * * Origins ) {
    struct AssemblyFeaturesSweptProtrusion * _result = 0;
    HRESULT _hr = raw_Add(NumCurves, TraceCurves, NumSections, CrossSections, Origins, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesSweptProtrusionPtr(_result, false);
}

//
// interface _IAssemblyFeaturesSweptProtrusionAuto wrapper method implementations
//

#pragma implementation_key(3679)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3680)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3681)
inline _bstr_t TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3682)
inline void TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3683)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Edges(EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3684)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Faces(FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3685)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRay(Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3686)
inline HRESULT TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    HRESULT _hr = raw_Range(X1, Y1, Z1, X2, Y2, Z2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3687)
inline VARIANT_BOOL TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3688)
inline void TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::PutSuppress ( VARIANT_BOOL Suppress ) {
    HRESULT _hr = put_Suppress(Suppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3689)
inline HRESULT TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3690)
inline HRESULT TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::RollToFeature ( ) {
    HRESULT _hr = raw_RollToFeature();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3691)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3692)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3693)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3694)
inline HRESULT TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3695)
inline VARIANT_BOOL TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3696)
inline enum TGPart::FeatureTypeConstants TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    HRESULT _hr = get_FeatureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3697)
inline TGAssembly::AssemblyBodyPtr TGAssembly::_IAssemblyFeaturesSweptProtrusionAuto::GetAssemblyBody ( ) {
    struct AssemblyBody * _result = 0;
    HRESULT _hr = get_AssemblyBody(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyBodyPtr(_result, false);
}

//
// dispinterface AssemblyStitchWelds wrapper method implementations
//

#pragma implementation_key(3698)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyStitchWelds::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3699)
inline IDispatchPtr TGAssembly::AssemblyStitchWelds::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3700)
inline TGAssembly::AssemblyStitchWeldPtr TGAssembly::AssemblyStitchWelds::Item ( const _variant_t & Index ) {
    struct AssemblyStitchWeld * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyStitchWeldPtr(_result, false);
}

#pragma implementation_key(3701)
inline long TGAssembly::AssemblyStitchWelds::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3702)
inline TGAssembly::AssemblyStitchWeldPtr TGAssembly::AssemblyStitchWelds::Add ( long NumberOfStitchPaths, SAFEARRAY * * StitchWeldPaths, SAFEARRAY * * StartVertices, SAFEARRAY * * DirectionEdgeForClosedStitchWeldPaths, SAFEARRAY * * eStitchDirections, enum TGPart::StitchWeldType eWeldType, enum TGPart::StitchWeldAnnotationFormat eAnnotationFormat, double dStartOffsetLength, double dEndOffsetLength, double dBeadLength, double dGapLength, _bstr_t bsStyleName ) {
    struct AssemblyStitchWeld * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x6009\x6009\x6003\x0003\x0003\x0005\x0005\x0005\x0005\x0008", NumberOfStitchPaths, StitchWeldPaths, StartVertices, DirectionEdgeForClosedStitchWeldPaths, eStitchDirections, eWeldType, eAnnotationFormat, dStartOffsetLength, dEndOffsetLength, dBeadLength, dGapLength, (BSTR)bsStyleName);
    return AssemblyStitchWeldPtr(_result, false);
}

//
// dispinterface AssemblyStitchWeld wrapper method implementations
//

#pragma implementation_key(3703)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyStitchWeld::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3704)
inline IDispatchPtr TGAssembly::AssemblyStitchWeld::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3705)
inline void TGAssembly::AssemblyStitchWeld::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3706)
inline _bstr_t TGAssembly::AssemblyStitchWeld::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3707)
inline void TGAssembly::AssemblyStitchWeld::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3708)
inline VARIANT_BOOL TGAssembly::AssemblyStitchWeld::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3709)
inline HRESULT TGAssembly::AssemblyStitchWeld::Recompute ( ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3710)
inline HRESULT TGAssembly::AssemblyStitchWeld::Delete ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3711)
inline HRESULT TGAssembly::AssemblyStitchWeld::GoTo ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3712)
inline void TGAssembly::AssemblyStitchWeld::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3713)
inline VARIANT_BOOL TGAssembly::AssemblyStitchWeld::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3714)
inline enum TGPart::StitchWeldAnnotationFormat TGAssembly::AssemblyStitchWeld::GetAnnotationFormat ( ) {
    enum TGPart::StitchWeldAnnotationFormat _result;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3715)
inline void TGAssembly::AssemblyStitchWeld::PutAnnotationFormat ( enum TGPart::StitchWeldAnnotationFormat _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3716)
inline enum TGPart::StitchWeldType TGAssembly::AssemblyStitchWeld::GetType ( ) {
    enum TGPart::StitchWeldType _result;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3717)
inline void TGAssembly::AssemblyStitchWeld::PutType ( enum TGPart::StitchWeldType _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3718)
inline double TGAssembly::AssemblyStitchWeld::GetStartOffset ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3719)
inline void TGAssembly::AssemblyStitchWeld::PutStartOffset ( double _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3720)
inline double TGAssembly::AssemblyStitchWeld::GetEndOffset ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3721)
inline void TGAssembly::AssemblyStitchWeld::PutEndOffset ( double _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3722)
inline double TGAssembly::AssemblyStitchWeld::GetBeadLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3723)
inline void TGAssembly::AssemblyStitchWeld::PutBeadLength ( double _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3724)
inline double TGAssembly::AssemblyStitchWeld::GetGapLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3725)
inline void TGAssembly::AssemblyStitchWeld::PutGapLength ( double _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3726)
inline enum TGPart::FeatureStatusConstants TGAssembly::AssemblyStitchWeld::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

#pragma implementation_key(3727)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyStitchWeld::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3728)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyStitchWeld::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3729)
inline HRESULT TGAssembly::AssemblyStitchWeld::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3730)
inline VARIANT_BOOL TGAssembly::AssemblyStitchWeld::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3731)
inline enum TGPart::FeatureTypeConstants TGAssembly::AssemblyStitchWeld::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    _com_dispatch_method(this, 0x10001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3732)
inline IDispatchPtr TGAssembly::AssemblyStitchWeld::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3733)
inline VARIANT_BOOL TGAssembly::AssemblyStitchWeld::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IAssemblyStitchWeldsAuto wrapper method implementations
//

#pragma implementation_key(3734)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyStitchWeldsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3735)
inline IDispatchPtr TGAssembly::_IAssemblyStitchWeldsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3736)
inline TGAssembly::AssemblyStitchWeldPtr TGAssembly::_IAssemblyStitchWeldsAuto::Item ( const _variant_t & Index ) {
    struct AssemblyStitchWeld * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyStitchWeldPtr(_result, false);
}

#pragma implementation_key(3737)
inline long TGAssembly::_IAssemblyStitchWeldsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3738)
inline IUnknownPtr TGAssembly::_IAssemblyStitchWeldsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3739)
inline TGAssembly::AssemblyStitchWeldPtr TGAssembly::_IAssemblyStitchWeldsAuto::Add ( long NumberOfStitchPaths, SAFEARRAY * * StitchWeldPaths, SAFEARRAY * * StartVertices, SAFEARRAY * * DirectionEdgeForClosedStitchWeldPaths, SAFEARRAY * * eStitchDirections, enum TGPart::StitchWeldType eWeldType, enum TGPart::StitchWeldAnnotationFormat eAnnotationFormat, double dStartOffsetLength, double dEndOffsetLength, double dBeadLength, double dGapLength, _bstr_t bsStyleName ) {
    struct AssemblyStitchWeld * _result = 0;
    HRESULT _hr = raw_Add(NumberOfStitchPaths, StitchWeldPaths, StartVertices, DirectionEdgeForClosedStitchWeldPaths, eStitchDirections, eWeldType, eAnnotationFormat, dStartOffsetLength, dEndOffsetLength, dBeadLength, dGapLength, bsStyleName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyStitchWeldPtr(_result, false);
}

//
// interface _IAssemblyStitchWeldAuto wrapper method implementations
//

#pragma implementation_key(3740)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyStitchWeldAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3741)
inline IDispatchPtr TGAssembly::_IAssemblyStitchWeldAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3742)
inline void TGAssembly::_IAssemblyStitchWeldAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3743)
inline _bstr_t TGAssembly::_IAssemblyStitchWeldAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3744)
inline void TGAssembly::_IAssemblyStitchWeldAuto::PutVisible ( VARIANT_BOOL bVisible ) {
    HRESULT _hr = put_Visible(bVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3745)
inline VARIANT_BOOL TGAssembly::_IAssemblyStitchWeldAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3746)
inline HRESULT TGAssembly::_IAssemblyStitchWeldAuto::Recompute ( ) {
    HRESULT _hr = raw_Recompute();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3747)
inline HRESULT TGAssembly::_IAssemblyStitchWeldAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3748)
inline HRESULT TGAssembly::_IAssemblyStitchWeldAuto::GoTo ( ) {
    HRESULT _hr = raw_GoTo();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3749)
inline void TGAssembly::_IAssemblyStitchWeldAuto::PutSuppress ( VARIANT_BOOL pvbSuppress ) {
    HRESULT _hr = put_Suppress(pvbSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3750)
inline VARIANT_BOOL TGAssembly::_IAssemblyStitchWeldAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3751)
inline enum TGPart::StitchWeldAnnotationFormat TGAssembly::_IAssemblyStitchWeldAuto::GetAnnotationFormat ( ) {
    enum TGPart::StitchWeldAnnotationFormat _result;
    HRESULT _hr = get_AnnotationFormat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3752)
inline void TGAssembly::_IAssemblyStitchWeldAuto::PutAnnotationFormat ( enum TGPart::StitchWeldAnnotationFormat peAnnotationFormat ) {
    HRESULT _hr = put_AnnotationFormat(peAnnotationFormat);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3753)
inline enum TGPart::StitchWeldType TGAssembly::_IAssemblyStitchWeldAuto::GetType ( ) {
    enum TGPart::StitchWeldType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3754)
inline void TGAssembly::_IAssemblyStitchWeldAuto::PutType ( enum TGPart::StitchWeldType pWeldType ) {
    HRESULT _hr = put_Type(pWeldType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3755)
inline double TGAssembly::_IAssemblyStitchWeldAuto::GetStartOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_StartOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3756)
inline void TGAssembly::_IAssemblyStitchWeldAuto::PutStartOffset ( double pdStartOffset ) {
    HRESULT _hr = put_StartOffset(pdStartOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3757)
inline double TGAssembly::_IAssemblyStitchWeldAuto::GetEndOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_EndOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3758)
inline void TGAssembly::_IAssemblyStitchWeldAuto::PutEndOffset ( double pdEndOffset ) {
    HRESULT _hr = put_EndOffset(pdEndOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3759)
inline double TGAssembly::_IAssemblyStitchWeldAuto::GetBeadLength ( ) {
    double _result = 0;
    HRESULT _hr = get_BeadLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3760)
inline void TGAssembly::_IAssemblyStitchWeldAuto::PutBeadLength ( double dBeadLength ) {
    HRESULT _hr = put_BeadLength(dBeadLength);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3761)
inline double TGAssembly::_IAssemblyStitchWeldAuto::GetGapLength ( ) {
    double _result = 0;
    HRESULT _hr = get_GapLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3762)
inline void TGAssembly::_IAssemblyStitchWeldAuto::PutGapLength ( double pdGapLength ) {
    HRESULT _hr = put_GapLength(pdGapLength);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3763)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAssemblyStitchWeldAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3764)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyStitchWeldAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3765)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyStitchWeldAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3766)
inline HRESULT TGAssembly::_IAssemblyStitchWeldAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3767)
inline VARIANT_BOOL TGAssembly::_IAssemblyStitchWeldAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3768)
inline enum TGPart::FeatureTypeConstants TGAssembly::_IAssemblyStitchWeldAuto::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    HRESULT _hr = get_FeatureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3769)
inline IDispatchPtr TGAssembly::_IAssemblyStitchWeldAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3770)
inline VARIANT_BOOL TGAssembly::_IAssemblyStitchWeldAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AssemblyThreads wrapper method implementations
//

#pragma implementation_key(3771)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyThreads::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3772)
inline IDispatchPtr TGAssembly::AssemblyThreads::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3773)
inline TGAssembly::AssemblyThreadPtr TGAssembly::AssemblyThreads::Item ( const _variant_t & Index ) {
    struct AssemblyThread * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyThreadPtr(_result, false);
}

#pragma implementation_key(3774)
inline long TGAssembly::AssemblyThreads::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3775)
inline TGAssembly::AssemblyThreadPtr TGAssembly::AssemblyThreads::Add ( IDispatch * Holedata, long NumberOfCylinders, SAFEARRAY * * CylinderArray, SAFEARRAY * * CylinderEndArray, SAFEARRAY * * CylinderEndTypes, const _variant_t & Reserved2 ) {
    struct AssemblyThread * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x6009\x6009\x6003\x080c", Holedata, NumberOfCylinders, CylinderArray, CylinderEndArray, CylinderEndTypes, &Reserved2);
    return AssemblyThreadPtr(_result, false);
}

//
// dispinterface AssemblyThread wrapper method implementations
//

#pragma implementation_key(3776)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyThread::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3777)
inline IDispatchPtr TGAssembly::AssemblyThread::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3778)
inline void TGAssembly::AssemblyThread::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3779)
inline _bstr_t TGAssembly::AssemblyThread::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3780)
inline void TGAssembly::AssemblyThread::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3781)
inline VARIANT_BOOL TGAssembly::AssemblyThread::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3782)
inline HRESULT TGAssembly::AssemblyThread::Recompute ( ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3783)
inline HRESULT TGAssembly::AssemblyThread::Delete ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3784)
inline HRESULT TGAssembly::AssemblyThread::GoTo ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3785)
inline void TGAssembly::AssemblyThread::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3786)
inline VARIANT_BOOL TGAssembly::AssemblyThread::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3787)
inline IDispatchPtr TGAssembly::AssemblyThread::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3788)
inline IDispatchPtr TGAssembly::AssemblyThread::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3789)
inline IDispatchPtr TGAssembly::AssemblyThread::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3790)
inline HRESULT TGAssembly::AssemblyThread::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", X1, Y1, Z1, X2, Y2, Z2);
}

#pragma implementation_key(3791)
inline IDispatchPtr TGAssembly::AssemblyThread::GetHoledata ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3792)
inline enum TGPart::FeatureStatusConstants TGAssembly::AssemblyThread::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

#pragma implementation_key(3793)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyThread::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3794)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyThread::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3795)
inline HRESULT TGAssembly::AssemblyThread::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3796)
inline VARIANT_BOOL TGAssembly::AssemblyThread::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3797)
inline enum TGPart::FeatureTypeConstants TGAssembly::AssemblyThread::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    _com_dispatch_method(this, 0x10001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IAssemblyThreadsAuto wrapper method implementations
//

#pragma implementation_key(3798)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyThreadsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3799)
inline IDispatchPtr TGAssembly::_IAssemblyThreadsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3800)
inline TGAssembly::AssemblyThreadPtr TGAssembly::_IAssemblyThreadsAuto::Item ( const _variant_t & Index ) {
    struct AssemblyThread * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyThreadPtr(_result, false);
}

#pragma implementation_key(3801)
inline long TGAssembly::_IAssemblyThreadsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3802)
inline IUnknownPtr TGAssembly::_IAssemblyThreadsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3803)
inline TGAssembly::AssemblyThreadPtr TGAssembly::_IAssemblyThreadsAuto::Add ( IDispatch * Holedata, long NumberOfCylinders, SAFEARRAY * * CylinderArray, SAFEARRAY * * CylinderEndArray, SAFEARRAY * * CylinderEndTypes, const _variant_t & Reserved2 ) {
    struct AssemblyThread * _result = 0;
    HRESULT _hr = raw_Add(Holedata, NumberOfCylinders, CylinderArray, CylinderEndArray, CylinderEndTypes, Reserved2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyThreadPtr(_result, false);
}

//
// interface _IAssemblyThreadAuto wrapper method implementations
//

#pragma implementation_key(3804)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyThreadAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3805)
inline IDispatchPtr TGAssembly::_IAssemblyThreadAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3806)
inline void TGAssembly::_IAssemblyThreadAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3807)
inline _bstr_t TGAssembly::_IAssemblyThreadAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3808)
inline void TGAssembly::_IAssemblyThreadAuto::PutVisible ( VARIANT_BOOL bVisible ) {
    HRESULT _hr = put_Visible(bVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3809)
inline VARIANT_BOOL TGAssembly::_IAssemblyThreadAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3810)
inline HRESULT TGAssembly::_IAssemblyThreadAuto::Recompute ( ) {
    HRESULT _hr = raw_Recompute();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3811)
inline HRESULT TGAssembly::_IAssemblyThreadAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3812)
inline HRESULT TGAssembly::_IAssemblyThreadAuto::GoTo ( ) {
    HRESULT _hr = raw_GoTo();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3813)
inline void TGAssembly::_IAssemblyThreadAuto::PutSuppress ( VARIANT_BOOL pvbSuppress ) {
    HRESULT _hr = put_Suppress(pvbSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3814)
inline VARIANT_BOOL TGAssembly::_IAssemblyThreadAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3815)
inline IDispatchPtr TGAssembly::_IAssemblyThreadAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Edges(EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3816)
inline IDispatchPtr TGAssembly::_IAssemblyThreadAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Faces(FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3817)
inline IDispatchPtr TGAssembly::_IAssemblyThreadAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRay(Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3818)
inline HRESULT TGAssembly::_IAssemblyThreadAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    HRESULT _hr = raw_Range(X1, Y1, Z1, X2, Y2, Z2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3819)
inline IDispatchPtr TGAssembly::_IAssemblyThreadAuto::GetHoledata ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Holedata(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3820)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAssemblyThreadAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3821)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyThreadAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3822)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyThreadAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3823)
inline HRESULT TGAssembly::_IAssemblyThreadAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3824)
inline VARIANT_BOOL TGAssembly::_IAssemblyThreadAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3825)
inline enum TGPart::FeatureTypeConstants TGAssembly::_IAssemblyThreadAuto::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    HRESULT _hr = get_FeatureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AssemblyFeaturesExtrudedProtrusions wrapper method implementations
//

#pragma implementation_key(3826)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeaturesExtrudedProtrusions::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3827)
inline IDispatchPtr TGAssembly::AssemblyFeaturesExtrudedProtrusions::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3828)
inline TGAssembly::AssemblyFeaturesExtrudedProtrusionPtr TGAssembly::AssemblyFeaturesExtrudedProtrusions::Item ( const _variant_t & Index ) {
    struct AssemblyFeaturesExtrudedProtrusion * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyFeaturesExtrudedProtrusionPtr(_result, false);
}

#pragma implementation_key(3829)
inline long TGAssembly::AssemblyFeaturesExtrudedProtrusions::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3830)
inline TGAssembly::AssemblyFeaturesExtrudedProtrusionPtr TGAssembly::AssemblyFeaturesExtrudedProtrusions::Add ( long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants * pExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdDistance, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane ) {
    struct AssemblyFeaturesExtrudedProtrusion * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x600d\x0003\x4003\x0003\x4005\x000d\x4003\x000d\x000d", nNumProfiles, pProfiles, ExtentType, pExtentSide, profileSide, pdDistance, pKeyPoint, pKeyPointFlags, pFromSurfOrPlane, pToSurfOrPlane);
    return AssemblyFeaturesExtrudedProtrusionPtr(_result, false);
}

//
// dispinterface AssemblyFeaturesExtrudedProtrusion wrapper method implementations
//

#pragma implementation_key(3831)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3832)
inline IDispatchPtr TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3833)
inline double TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetDepth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3834)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedProtrusion::SetDepth ( double nDepth ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", nDepth);
}

#pragma implementation_key(3835)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetExtentSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3836)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedProtrusion::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ExtentSide);
}

#pragma implementation_key(3837)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetExtentType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3838)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedProtrusion::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ExtentType);
}

#pragma implementation_key(3839)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetProfileSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3840)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedProtrusion::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", profileSide);
}

#pragma implementation_key(3841)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumProfiles, ppProfiles);
}

#pragma implementation_key(3842)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedProtrusion::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumProfiles, pProfiles);
}

#pragma implementation_key(3843)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedProtrusion::SetFromPlane ( IUnknown * FromPlane ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", FromPlane);
}

#pragma implementation_key(3844)
inline IUnknownPtr TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetFromPlane ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3845)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedProtrusion::SetToPlane ( IUnknown * ToPlane ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", ToPlane);
}

#pragma implementation_key(3846)
inline IUnknownPtr TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetToPlane ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3847)
inline _bstr_t TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3848)
inline void TGAssembly::AssemblyFeaturesExtrudedProtrusion::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3849)
inline IDispatchPtr TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3850)
inline IDispatchPtr TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3851)
inline IDispatchPtr TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3852)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedProtrusion::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", X1, Y1, Z1, X2, Y2, Z2);
}

#pragma implementation_key(3853)
inline VARIANT_BOOL TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3854)
inline void TGAssembly::AssemblyFeaturesExtrudedProtrusion::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3855)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedProtrusion::Delete ( ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3856)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedProtrusion::RollToFeature ( ) {
    return _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3857)
inline enum TGPart::FeatureStatusConstants TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

#pragma implementation_key(3858)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3859)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFeaturesExtrudedProtrusion::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3860)
inline HRESULT TGAssembly::AssemblyFeaturesExtrudedProtrusion::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3861)
inline VARIANT_BOOL TGAssembly::AssemblyFeaturesExtrudedProtrusion::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3862)
inline enum TGPart::FeatureTypeConstants TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    _com_dispatch_method(this, 0x10001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3863)
inline TGAssembly::AssemblyBodyPtr TGAssembly::AssemblyFeaturesExtrudedProtrusion::GetAssemblyBody ( ) {
    struct AssemblyBody * _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyBodyPtr(_result, false);
}

//
// interface _IAssemblyFeaturesExtrudedProtrusionsAuto wrapper method implementations
//

#pragma implementation_key(3864)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesExtrudedProtrusionsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3865)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesExtrudedProtrusionsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3866)
inline TGAssembly::AssemblyFeaturesExtrudedProtrusionPtr TGAssembly::_IAssemblyFeaturesExtrudedProtrusionsAuto::Item ( const _variant_t & Index ) {
    struct AssemblyFeaturesExtrudedProtrusion * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesExtrudedProtrusionPtr(_result, false);
}

#pragma implementation_key(3867)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesExtrudedProtrusionsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3868)
inline long TGAssembly::_IAssemblyFeaturesExtrudedProtrusionsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3869)
inline TGAssembly::AssemblyFeaturesExtrudedProtrusionPtr TGAssembly::_IAssemblyFeaturesExtrudedProtrusionsAuto::Add ( long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants * pExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdDistance, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane ) {
    struct AssemblyFeaturesExtrudedProtrusion * _result = 0;
    HRESULT _hr = raw_Add(nNumProfiles, pProfiles, ExtentType, pExtentSide, profileSide, pdDistance, pKeyPoint, pKeyPointFlags, pFromSurfOrPlane, pToSurfOrPlane, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesExtrudedProtrusionPtr(_result, false);
}

//
// interface _IAssemblyFeaturesExtrudedProtrusionAuto wrapper method implementations
//

#pragma implementation_key(3870)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3871)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3872)
inline double TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetDepth ( ) {
    double _result = 0;
    HRESULT _hr = raw_GetDepth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3873)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::SetDepth ( double nDepth ) {
    HRESULT _hr = raw_SetDepth(nDepth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3874)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetExtentSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetExtentSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3875)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide ) {
    HRESULT _hr = raw_SetExtentSide(ExtentSide);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3876)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetExtentType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetExtentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3877)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType ) {
    HRESULT _hr = raw_SetExtentType(ExtentType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3878)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetProfileSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetProfileSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3879)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide ) {
    HRESULT _hr = raw_SetProfileSide(profileSide);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3880)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles ) {
    HRESULT _hr = raw_GetProfiles(NumProfiles, ppProfiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3881)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles ) {
    HRESULT _hr = raw_SetProfiles(NumProfiles, pProfiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3882)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::SetFromPlane ( IUnknown * FromPlane ) {
    HRESULT _hr = raw_SetFromPlane(FromPlane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3883)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetFromPlane ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetFromPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3884)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::SetToPlane ( IUnknown * ToPlane ) {
    HRESULT _hr = raw_SetToPlane(ToPlane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3885)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetToPlane ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetToPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3886)
inline _bstr_t TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3887)
inline void TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::PutName ( _bstr_t featureName ) {
    HRESULT _hr = put_Name(featureName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3888)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Edges(EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3889)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Faces(FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3890)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRay(Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3891)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    HRESULT _hr = raw_Range(X1, Y1, Z1, X2, Y2, Z2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3892)
inline VARIANT_BOOL TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3893)
inline void TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::PutSuppress ( VARIANT_BOOL Suppress ) {
    HRESULT _hr = put_Suppress(Suppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3894)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3895)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::RollToFeature ( ) {
    HRESULT _hr = raw_RollToFeature();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3896)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3897)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3898)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3899)
inline HRESULT TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3900)
inline VARIANT_BOOL TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3901)
inline enum TGPart::FeatureTypeConstants TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    HRESULT _hr = get_FeatureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3902)
inline TGAssembly::AssemblyBodyPtr TGAssembly::_IAssemblyFeaturesExtrudedProtrusionAuto::GetAssemblyBody ( ) {
    struct AssemblyBody * _result = 0;
    HRESULT _hr = get_AssemblyBody(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyBodyPtr(_result, false);
}

//
// dispinterface AssemblyFeaturesRevolvedProtrusions wrapper method implementations
//

#pragma implementation_key(3903)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeaturesRevolvedProtrusions::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3904)
inline IDispatchPtr TGAssembly::AssemblyFeaturesRevolvedProtrusions::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3905)
inline TGAssembly::AssemblyFeaturesRevolvedProtrusionPtr TGAssembly::AssemblyFeaturesRevolvedProtrusions::Item ( const _variant_t & Index ) {
    struct AssemblyFeaturesRevolvedProtrusion * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyFeaturesRevolvedProtrusionPtr(_result, false);
}

#pragma implementation_key(3906)
inline long TGAssembly::AssemblyFeaturesRevolvedProtrusions::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3907)
inline TGAssembly::AssemblyFeaturesRevolvedProtrusionPtr TGAssembly::AssemblyFeaturesRevolvedProtrusions::Add ( long nNumProfiles, SAFEARRAY * * pProfiles, IUnknown * pRefAxis, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdAngle, IUnknown * KeyPointOrTangentFace, enum TGPart::KeyPointExtentConstants * KeyPointFlags, IUnknown * pFromSurface, IUnknown * pToSurface ) {
    struct AssemblyFeaturesRevolvedProtrusion * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x600d\x000d\x0003\x0003\x0003\x4005\x000d\x4003\x000d\x000d", nNumProfiles, pProfiles, pRefAxis, ExtentType, ExtentSide, profileSide, pdAngle, KeyPointOrTangentFace, KeyPointFlags, pFromSurface, pToSurface);
    return AssemblyFeaturesRevolvedProtrusionPtr(_result, false);
}

//
// dispinterface AssemblyFeaturesRevolvedProtrusion wrapper method implementations
//

#pragma implementation_key(3908)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3909)
inline IDispatchPtr TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3910)
inline double TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3911)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedProtrusion::SetAngle ( double nAngle ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", nAngle);
}

#pragma implementation_key(3912)
inline IUnknownPtr TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetReferenceAxis ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3913)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedProtrusion::SetReferenceAxis ( IUnknown * ReferenceAxis ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", ReferenceAxis);
}

#pragma implementation_key(3914)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetExtentSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3915)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedProtrusion::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ExtentSide);
}

#pragma implementation_key(3916)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetExtentType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3917)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedProtrusion::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ExtentType);
}

#pragma implementation_key(3918)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetProfileSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3919)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedProtrusion::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", profileSide);
}

#pragma implementation_key(3920)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumProfiles, ppProfiles);
}

#pragma implementation_key(3921)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedProtrusion::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumProfiles, pProfiles);
}

#pragma implementation_key(3922)
inline _bstr_t TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3923)
inline void TGAssembly::AssemblyFeaturesRevolvedProtrusion::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3924)
inline IDispatchPtr TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3925)
inline IDispatchPtr TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3926)
inline IDispatchPtr TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3927)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedProtrusion::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", X1, Y1, Z1, X2, Y2, Z2);
}

#pragma implementation_key(3928)
inline VARIANT_BOOL TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3929)
inline void TGAssembly::AssemblyFeaturesRevolvedProtrusion::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3930)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedProtrusion::Delete ( ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3931)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedProtrusion::RollToFeature ( ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3932)
inline enum TGPart::FeatureStatusConstants TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

#pragma implementation_key(3933)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3934)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyFeaturesRevolvedProtrusion::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3935)
inline HRESULT TGAssembly::AssemblyFeaturesRevolvedProtrusion::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3936)
inline VARIANT_BOOL TGAssembly::AssemblyFeaturesRevolvedProtrusion::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3937)
inline enum TGPart::FeatureTypeConstants TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    _com_dispatch_method(this, 0x10001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3938)
inline TGAssembly::AssemblyBodyPtr TGAssembly::AssemblyFeaturesRevolvedProtrusion::GetAssemblyBody ( ) {
    struct AssemblyBody * _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyBodyPtr(_result, false);
}

//
// interface _IAssemblyFeaturesRevolvedProtrusionsAuto wrapper method implementations
//

#pragma implementation_key(3939)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesRevolvedProtrusionsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3940)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesRevolvedProtrusionsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3941)
inline TGAssembly::AssemblyFeaturesRevolvedProtrusionPtr TGAssembly::_IAssemblyFeaturesRevolvedProtrusionsAuto::Item ( const _variant_t & Index ) {
    struct AssemblyFeaturesRevolvedProtrusion * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesRevolvedProtrusionPtr(_result, false);
}

#pragma implementation_key(3942)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesRevolvedProtrusionsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3943)
inline long TGAssembly::_IAssemblyFeaturesRevolvedProtrusionsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3944)
inline TGAssembly::AssemblyFeaturesRevolvedProtrusionPtr TGAssembly::_IAssemblyFeaturesRevolvedProtrusionsAuto::Add ( long nNumProfiles, SAFEARRAY * * pProfiles, IUnknown * pRefAxis, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdAngle, IUnknown * KeyPointOrTangentFace, enum TGPart::KeyPointExtentConstants * KeyPointFlags, IUnknown * pFromSurface, IUnknown * pToSurface ) {
    struct AssemblyFeaturesRevolvedProtrusion * _result = 0;
    HRESULT _hr = raw_Add(nNumProfiles, pProfiles, pRefAxis, ExtentType, ExtentSide, profileSide, pdAngle, KeyPointOrTangentFace, KeyPointFlags, pFromSurface, pToSurface, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesRevolvedProtrusionPtr(_result, false);
}

//
// interface _IAssemblyFeaturesRevolvedProtrusionAuto wrapper method implementations
//

#pragma implementation_key(3945)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3946)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3947)
inline double TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = raw_GetAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3948)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::SetAngle ( double nAngle ) {
    HRESULT _hr = raw_SetAngle(nAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3949)
inline IUnknownPtr TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetReferenceAxis ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetReferenceAxis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3950)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::SetReferenceAxis ( IUnknown * ReferenceAxis ) {
    HRESULT _hr = raw_SetReferenceAxis(ReferenceAxis);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3951)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetExtentSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetExtentSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3952)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide ) {
    HRESULT _hr = raw_SetExtentSide(ExtentSide);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3953)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetExtentType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetExtentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3954)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType ) {
    HRESULT _hr = raw_SetExtentType(ExtentType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3955)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetProfileSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetProfileSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3956)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide ) {
    HRESULT _hr = raw_SetProfileSide(profileSide);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3957)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles ) {
    HRESULT _hr = raw_GetProfiles(NumProfiles, ppProfiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3958)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles ) {
    HRESULT _hr = raw_SetProfiles(NumProfiles, pProfiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3959)
inline _bstr_t TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3960)
inline void TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::PutName ( _bstr_t featureName ) {
    HRESULT _hr = put_Name(featureName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3961)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Edges(EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3962)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Faces(FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3963)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRay(Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3964)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    HRESULT _hr = raw_Range(X1, Y1, Z1, X2, Y2, Z2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3965)
inline VARIANT_BOOL TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3966)
inline void TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::PutSuppress ( VARIANT_BOOL Suppress ) {
    HRESULT _hr = put_Suppress(Suppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3967)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3968)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::RollToFeature ( ) {
    HRESULT _hr = raw_RollToFeature();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3969)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3970)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3971)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(3972)
inline HRESULT TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3973)
inline VARIANT_BOOL TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3974)
inline enum TGPart::FeatureTypeConstants TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    HRESULT _hr = get_FeatureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3975)
inline TGAssembly::AssemblyBodyPtr TGAssembly::_IAssemblyFeaturesRevolvedProtrusionAuto::GetAssemblyBody ( ) {
    struct AssemblyBody * _result = 0;
    HRESULT _hr = get_AssemblyBody(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyBodyPtr(_result, false);
}

//
// dispinterface AssemblyLabelWelds wrapper method implementations
//

#pragma implementation_key(3976)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyLabelWelds::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3977)
inline IDispatchPtr TGAssembly::AssemblyLabelWelds::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3978)
inline TGAssembly::AssemblyLabelWeldPtr TGAssembly::AssemblyLabelWelds::Item ( const _variant_t & Index ) {
    struct AssemblyLabelWeld * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyLabelWeldPtr(_result, false);
}

#pragma implementation_key(3979)
inline long TGAssembly::AssemblyLabelWelds::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3980)
inline TGAssembly::AssemblyLabelWeldPtr TGAssembly::AssemblyLabelWelds::Add ( long NumberOfEdges, SAFEARRAY * * Edges, IDispatch * pLabelWeldDataObject ) {
    struct AssemblyLabelWeld * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x0009", NumberOfEdges, Edges, pLabelWeldDataObject);
    return AssemblyLabelWeldPtr(_result, false);
}

#pragma implementation_key(3981)
inline IDispatchPtr TGAssembly::AssemblyLabelWelds::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3982)
inline VARIANT_BOOL TGAssembly::AssemblyLabelWelds::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IAssemblyFeaturesAuto wrapper method implementations
//

#pragma implementation_key(3983)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyFeaturesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3984)
inline IDispatchPtr TGAssembly::_IAssemblyFeaturesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3985)
inline TGAssembly::AssemblyFeaturesExtrudedCutoutsPtr TGAssembly::_IAssemblyFeaturesAuto::GetAssemblyFeaturesExtrudedCutouts ( ) {
    struct AssemblyFeaturesExtrudedCutouts * _result = 0;
    HRESULT _hr = get_AssemblyFeaturesExtrudedCutouts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesExtrudedCutoutsPtr(_result, false);
}

#pragma implementation_key(3986)
inline TGAssembly::AssemblyFeaturesRevolvedCutoutsPtr TGAssembly::_IAssemblyFeaturesAuto::GetAssemblyFeaturesRevolvedCutouts ( ) {
    struct AssemblyFeaturesRevolvedCutouts * _result = 0;
    HRESULT _hr = get_AssemblyFeaturesRevolvedCutouts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesRevolvedCutoutsPtr(_result, false);
}

#pragma implementation_key(3987)
inline TGAssembly::AssemblyFeaturesHolesPtr TGAssembly::_IAssemblyFeaturesAuto::GetAssemblyFeaturesHoles ( ) {
    struct AssemblyFeaturesHoles * _result = 0;
    HRESULT _hr = get_AssemblyFeaturesHoles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesHolesPtr(_result, false);
}

#pragma implementation_key(3988)
inline TGAssembly::AssemblyFeaturesMirrorsPtr TGAssembly::_IAssemblyFeaturesAuto::GetAssemblyFeaturesMirrors ( ) {
    struct AssemblyFeaturesMirrors * _result = 0;
    HRESULT _hr = get_AssemblyFeaturesMirrors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesMirrorsPtr(_result, false);
}

#pragma implementation_key(3989)
inline TGAssembly::AssemblyFeaturesPatternsPtr TGAssembly::_IAssemblyFeaturesAuto::GetAssemblyFeaturesPatterns ( ) {
    struct AssemblyFeaturesPatterns * _result = 0;
    HRESULT _hr = get_AssemblyFeaturesPatterns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesPatternsPtr(_result, false);
}

#pragma implementation_key(3990)
inline TGAssembly::AssemblyFilletWeldsPtr TGAssembly::_IAssemblyFeaturesAuto::GetFilletWelds ( ) {
    struct AssemblyFilletWelds * _result = 0;
    HRESULT _hr = get_FilletWelds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFilletWeldsPtr(_result, false);
}

#pragma implementation_key(3991)
inline TGAssembly::AFGrooveWeldsPtr TGAssembly::_IAssemblyFeaturesAuto::GetGrooveWelds ( ) {
    struct AFGrooveWelds * _result = 0;
    HRESULT _hr = get_GrooveWelds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AFGrooveWeldsPtr(_result, false);
}

#pragma implementation_key(3992)
inline TGAssembly::AssemblyFeaturesSweptProtrusionsPtr TGAssembly::_IAssemblyFeaturesAuto::GetAssemblyFeaturesSweptProtrusions ( ) {
    struct AssemblyFeaturesSweptProtrusions * _result = 0;
    HRESULT _hr = get_AssemblyFeaturesSweptProtrusions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesSweptProtrusionsPtr(_result, false);
}

#pragma implementation_key(3993)
inline TGAssembly::AssemblyStitchWeldsPtr TGAssembly::_IAssemblyFeaturesAuto::GetStitchWelds ( ) {
    struct AssemblyStitchWelds * _result = 0;
    HRESULT _hr = get_StitchWelds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyStitchWeldsPtr(_result, false);
}

#pragma implementation_key(3994)
inline TGAssembly::AssemblyThreadsPtr TGAssembly::_IAssemblyFeaturesAuto::GetThreads ( ) {
    struct AssemblyThreads * _result = 0;
    HRESULT _hr = get_Threads(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyThreadsPtr(_result, false);
}

#pragma implementation_key(3995)
inline TGAssembly::AssemblyFeaturesExtrudedProtrusionsPtr TGAssembly::_IAssemblyFeaturesAuto::GetExtrudedProtrusions ( ) {
    struct AssemblyFeaturesExtrudedProtrusions * _result = 0;
    HRESULT _hr = get_ExtrudedProtrusions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesExtrudedProtrusionsPtr(_result, false);
}

#pragma implementation_key(3996)
inline TGAssembly::AssemblyFeaturesRevolvedProtrusionsPtr TGAssembly::_IAssemblyFeaturesAuto::GetRevolvedProtrusions ( ) {
    struct AssemblyFeaturesRevolvedProtrusions * _result = 0;
    HRESULT _hr = get_RevolvedProtrusions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesRevolvedProtrusionsPtr(_result, false);
}

#pragma implementation_key(3997)
inline HRESULT TGAssembly::_IAssemblyFeaturesAuto::Recompute ( long options ) {
    HRESULT _hr = raw_Recompute(options);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3998)
inline TGAssembly::AssemblyLabelWeldsPtr TGAssembly::_IAssemblyFeaturesAuto::GetLabelWelds ( ) {
    struct AssemblyLabelWelds * _result = 0;
    HRESULT _hr = get_LabelWelds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyLabelWeldsPtr(_result, false);
}

//
// dispinterface AssemblyLabelWeld wrapper method implementations
//

#pragma implementation_key(3999)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyLabelWeld::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4000)
inline IDispatchPtr TGAssembly::AssemblyLabelWeld::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4001)
inline void TGAssembly::AssemblyLabelWeld::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4002)
inline _bstr_t TGAssembly::AssemblyLabelWeld::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4003)
inline void TGAssembly::AssemblyLabelWeld::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4004)
inline VARIANT_BOOL TGAssembly::AssemblyLabelWeld::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4005)
inline HRESULT TGAssembly::AssemblyLabelWeld::Recompute ( ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4006)
inline HRESULT TGAssembly::AssemblyLabelWeld::Delete ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4007)
inline HRESULT TGAssembly::AssemblyLabelWeld::GoTo ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4008)
inline void TGAssembly::AssemblyLabelWeld::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4009)
inline VARIANT_BOOL TGAssembly::AssemblyLabelWeld::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4010)
inline enum TGPart::FeatureStatusConstants TGAssembly::AssemblyLabelWeld::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

#pragma implementation_key(4011)
inline HRESULT TGAssembly::AssemblyLabelWeld::GetLabelWeldData ( IDispatch * * Object ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009", Object);
}

#pragma implementation_key(4012)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyLabelWeld::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(4013)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyLabelWeld::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(4014)
inline HRESULT TGAssembly::AssemblyLabelWeld::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4015)
inline VARIANT_BOOL TGAssembly::AssemblyLabelWeld::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4016)
inline IDispatchPtr TGAssembly::AssemblyLabelWeld::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4017)
inline VARIANT_BOOL TGAssembly::AssemblyLabelWeld::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(4018)
inline enum TGPart::FeatureTypeConstants TGAssembly::AssemblyLabelWeld::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    _com_dispatch_method(this, 0x10001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IAssemblyLabelWeldsAuto wrapper method implementations
//

#pragma implementation_key(4019)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyLabelWeldsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4020)
inline IDispatchPtr TGAssembly::_IAssemblyLabelWeldsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4021)
inline TGAssembly::AssemblyLabelWeldPtr TGAssembly::_IAssemblyLabelWeldsAuto::Item ( const _variant_t & Index ) {
    struct AssemblyLabelWeld * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyLabelWeldPtr(_result, false);
}

#pragma implementation_key(4022)
inline long TGAssembly::_IAssemblyLabelWeldsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4023)
inline IUnknownPtr TGAssembly::_IAssemblyLabelWeldsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4024)
inline TGAssembly::AssemblyLabelWeldPtr TGAssembly::_IAssemblyLabelWeldsAuto::Add ( long NumberOfEdges, SAFEARRAY * * Edges, IDispatch * pLabelWeldDataObject ) {
    struct AssemblyLabelWeld * _result = 0;
    HRESULT _hr = raw_Add(NumberOfEdges, Edges, pLabelWeldDataObject, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyLabelWeldPtr(_result, false);
}

#pragma implementation_key(4025)
inline IDispatchPtr TGAssembly::_IAssemblyLabelWeldsAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4026)
inline VARIANT_BOOL TGAssembly::_IAssemblyLabelWeldsAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IAssemblyLabelWeldAuto wrapper method implementations
//

#pragma implementation_key(4027)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyLabelWeldAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4028)
inline IDispatchPtr TGAssembly::_IAssemblyLabelWeldAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4029)
inline void TGAssembly::_IAssemblyLabelWeldAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4030)
inline _bstr_t TGAssembly::_IAssemblyLabelWeldAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4031)
inline void TGAssembly::_IAssemblyLabelWeldAuto::PutVisible ( VARIANT_BOOL bVisible ) {
    HRESULT _hr = put_Visible(bVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4032)
inline VARIANT_BOOL TGAssembly::_IAssemblyLabelWeldAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4033)
inline HRESULT TGAssembly::_IAssemblyLabelWeldAuto::Recompute ( ) {
    HRESULT _hr = raw_Recompute();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4034)
inline HRESULT TGAssembly::_IAssemblyLabelWeldAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4035)
inline HRESULT TGAssembly::_IAssemblyLabelWeldAuto::GoTo ( ) {
    HRESULT _hr = raw_GoTo();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4036)
inline void TGAssembly::_IAssemblyLabelWeldAuto::PutSuppress ( VARIANT_BOOL pvbSuppress ) {
    HRESULT _hr = put_Suppress(pvbSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4037)
inline VARIANT_BOOL TGAssembly::_IAssemblyLabelWeldAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4038)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAssemblyLabelWeldAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4039)
inline HRESULT TGAssembly::_IAssemblyLabelWeldAuto::GetLabelWeldData ( IDispatch * * Object ) {
    HRESULT _hr = raw_GetLabelWeldData(Object);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4040)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyLabelWeldAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(4041)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyLabelWeldAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(4042)
inline HRESULT TGAssembly::_IAssemblyLabelWeldAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4043)
inline VARIANT_BOOL TGAssembly::_IAssemblyLabelWeldAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4044)
inline IDispatchPtr TGAssembly::_IAssemblyLabelWeldAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4045)
inline VARIANT_BOOL TGAssembly::_IAssemblyLabelWeldAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4046)
inline enum TGPart::FeatureTypeConstants TGAssembly::_IAssemblyLabelWeldAuto::GetFeatureType ( ) {
    enum TGPart::FeatureTypeConstants _result;
    HRESULT _hr = get_FeatureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AssemblyDrivenPartFeatures wrapper method implementations
//

#pragma implementation_key(4047)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyDrivenPartFeatures::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4048)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeatures::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4049)
inline TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutoutsPtr TGAssembly::AssemblyDrivenPartFeatures::GetAssemblyDrivenPartFeaturesExtrudedCutouts ( ) {
    struct AssemblyDrivenPartFeaturesExtrudedCutouts * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyDrivenPartFeaturesExtrudedCutoutsPtr(_result, false);
}

#pragma implementation_key(4050)
inline TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutoutsPtr TGAssembly::AssemblyDrivenPartFeatures::GetAssemblyDrivenPartFeaturesRevolvedCutouts ( ) {
    struct AssemblyDrivenPartFeaturesRevolvedCutouts * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyDrivenPartFeaturesRevolvedCutoutsPtr(_result, false);
}

#pragma implementation_key(4051)
inline TGAssembly::AssemblyDrivenPartFeaturesHolesPtr TGAssembly::AssemblyDrivenPartFeatures::GetAssemblyDrivenPartFeaturesHoles ( ) {
    struct AssemblyDrivenPartFeaturesHoles * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyDrivenPartFeaturesHolesPtr(_result, false);
}

#pragma implementation_key(4052)
inline TGAssembly::AssemblyDrivenPartFeaturesTrimTubesPtr TGAssembly::AssemblyDrivenPartFeatures::GetAssemblyDrivenPartFeaturesTrimTubes ( ) {
    struct AssemblyDrivenPartFeaturesTrimTubes * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyDrivenPartFeaturesTrimTubesPtr(_result, false);
}

//
// dispinterface AssemblyDrivenPartFeaturesExtrudedCutouts wrapper method implementations
//

#pragma implementation_key(4053)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutouts::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4054)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutouts::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4055)
inline TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutoutPtr TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutouts::Item ( const _variant_t & Index ) {
    struct AssemblyDrivenPartFeaturesExtrudedCutout * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyDrivenPartFeaturesExtrudedCutoutPtr(_result, false);
}

#pragma implementation_key(4056)
inline long TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutouts::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4057)
inline TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutoutPtr TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutouts::Add ( long nNumScopeParts, SAFEARRAY * * pScopeParts, long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants * pExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdDistance, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane ) {
    struct AssemblyDrivenPartFeaturesExtrudedCutout * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x600d\x0003\x600d\x0003\x4003\x0003\x4005\x000d\x4003\x000d\x000d", nNumScopeParts, pScopeParts, nNumProfiles, pProfiles, ExtentType, pExtentSide, profileSide, pdDistance, pKeyPoint, pKeyPointFlags, pFromSurfOrPlane, pToSurfOrPlane);
    return AssemblyDrivenPartFeaturesExtrudedCutoutPtr(_result, false);
}

//
// dispinterface AssemblyDrivenPartFeaturesExtrudedCutout wrapper method implementations
//

#pragma implementation_key(4058)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4059)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4060)
inline double TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetDepth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4061)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::SetDepth ( double nDepth ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", nDepth);
}

#pragma implementation_key(4062)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetExtentSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4063)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ExtentSide);
}

#pragma implementation_key(4064)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetExtentType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4065)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ExtentType);
}

#pragma implementation_key(4066)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetProfileSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4067)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", profileSide);
}

#pragma implementation_key(4068)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumProfiles, ppProfiles);
}

#pragma implementation_key(4069)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumProfiles, pProfiles);
}

#pragma implementation_key(4070)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::SetFromPlane ( IUnknown * FromPlane ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", FromPlane);
}

#pragma implementation_key(4071)
inline IUnknownPtr TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetFromPlane ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4072)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::SetToPlane ( IUnknown * ToPlane ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", ToPlane);
}

#pragma implementation_key(4073)
inline IUnknownPtr TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetToPlane ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4074)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumScopeParts, pScopeParts);
}

#pragma implementation_key(4075)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumScopeParts, pScopeParts);
}

#pragma implementation_key(4076)
inline _bstr_t TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4077)
inline void TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4078)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4079)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4080)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4081)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", X1, Y1, Z1, X2, Y2, Z2);
}

#pragma implementation_key(4082)
inline VARIANT_BOOL TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4083)
inline void TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4084)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::Delete ( ) {
    return _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4085)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::RollToFeature ( ) {
    return _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4086)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetPartFeatures ( long * NumFeatures, SAFEARRAY * * ppFeatures ) {
    return _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumFeatures, ppFeatures);
}

#pragma implementation_key(4087)
inline enum TGPart::FeatureStatusConstants TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutout::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

//
// interface _IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto wrapper method implementations
//

#pragma implementation_key(4088)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4089)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4090)
inline TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutoutPtr TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto::Item ( const _variant_t & Index ) {
    struct AssemblyDrivenPartFeaturesExtrudedCutout * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDrivenPartFeaturesExtrudedCutoutPtr(_result, false);
}

#pragma implementation_key(4091)
inline IUnknownPtr TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4092)
inline long TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4093)
inline TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutoutPtr TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto::Add ( long nNumScopeParts, SAFEARRAY * * pScopeParts, long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants * pExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdDistance, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane ) {
    struct AssemblyDrivenPartFeaturesExtrudedCutout * _result = 0;
    HRESULT _hr = raw_Add(nNumScopeParts, pScopeParts, nNumProfiles, pProfiles, ExtentType, pExtentSide, profileSide, pdDistance, pKeyPoint, pKeyPointFlags, pFromSurfOrPlane, pToSurfOrPlane, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDrivenPartFeaturesExtrudedCutoutPtr(_result, false);
}

//
// interface _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto wrapper method implementations
//

#pragma implementation_key(4094)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4095)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4096)
inline double TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetDepth ( ) {
    double _result = 0;
    HRESULT _hr = raw_GetDepth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4097)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::SetDepth ( double nDepth ) {
    HRESULT _hr = raw_SetDepth(nDepth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4098)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetExtentSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetExtentSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4099)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide ) {
    HRESULT _hr = raw_SetExtentSide(ExtentSide);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4100)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetExtentType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetExtentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4101)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType ) {
    HRESULT _hr = raw_SetExtentType(ExtentType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4102)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetProfileSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetProfileSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4103)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide ) {
    HRESULT _hr = raw_SetProfileSide(profileSide);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4104)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles ) {
    HRESULT _hr = raw_GetProfiles(NumProfiles, ppProfiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4105)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles ) {
    HRESULT _hr = raw_SetProfiles(NumProfiles, pProfiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4106)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::SetFromPlane ( IUnknown * FromPlane ) {
    HRESULT _hr = raw_SetFromPlane(FromPlane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4107)
inline IUnknownPtr TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetFromPlane ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetFromPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4108)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::SetToPlane ( IUnknown * ToPlane ) {
    HRESULT _hr = raw_SetToPlane(ToPlane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4109)
inline IUnknownPtr TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetToPlane ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetToPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4110)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts ) {
    HRESULT _hr = raw_SetScopeParts(NumScopeParts, pScopeParts);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4111)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts ) {
    HRESULT _hr = raw_GetScopeParts(NumScopeParts, pScopeParts);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4112)
inline _bstr_t TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4113)
inline void TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::PutName ( _bstr_t featureName ) {
    HRESULT _hr = put_Name(featureName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4114)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Edges(EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4115)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Faces(FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4116)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRay(Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4117)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    HRESULT _hr = raw_Range(X1, Y1, Z1, X2, Y2, Z2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4118)
inline VARIANT_BOOL TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4119)
inline void TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::PutSuppress ( VARIANT_BOOL Suppress ) {
    HRESULT _hr = put_Suppress(Suppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4120)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4121)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::RollToFeature ( ) {
    HRESULT _hr = raw_RollToFeature();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4122)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetPartFeatures ( long * NumFeatures, SAFEARRAY * * ppFeatures ) {
    HRESULT _hr = raw_GetPartFeatures(NumFeatures, ppFeatures);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4123)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AssemblyDrivenPartFeaturesRevolvedCutouts wrapper method implementations
//

#pragma implementation_key(4124)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutouts::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4125)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutouts::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4126)
inline TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutoutPtr TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutouts::Item ( const _variant_t & Index ) {
    struct AssemblyDrivenPartFeaturesRevolvedCutout * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyDrivenPartFeaturesRevolvedCutoutPtr(_result, false);
}

#pragma implementation_key(4127)
inline long TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutouts::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4128)
inline TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutoutPtr TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutouts::Add ( long nNumScopeParts, SAFEARRAY * * pScopeParts, long nNumProfiles, SAFEARRAY * * pProfiles, IUnknown * pRefAxis, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdAngle, IUnknown * KeyPointOrTangentFace, enum TGPart::KeyPointExtentConstants * KeyPointFlags, IUnknown * pFromSurface, IUnknown * pToSurface ) {
    struct AssemblyDrivenPartFeaturesRevolvedCutout * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x600d\x0003\x600d\x000d\x0003\x0003\x0003\x4005\x000d\x4003\x000d\x000d", nNumScopeParts, pScopeParts, nNumProfiles, pProfiles, pRefAxis, ExtentType, ExtentSide, profileSide, pdAngle, KeyPointOrTangentFace, KeyPointFlags, pFromSurface, pToSurface);
    return AssemblyDrivenPartFeaturesRevolvedCutoutPtr(_result, false);
}

//
// dispinterface AssemblyDrivenPartFeaturesRevolvedCutout wrapper method implementations
//

#pragma implementation_key(4129)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4130)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4131)
inline double TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::GetAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4132)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::SetAngle ( double nAngle ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", nAngle);
}

#pragma implementation_key(4133)
inline IUnknownPtr TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::GetReferenceAxis ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4134)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::SetReferenceAxis ( IUnknown * ReferenceAxis ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", ReferenceAxis);
}

#pragma implementation_key(4135)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::GetExtentSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4136)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ExtentSide);
}

#pragma implementation_key(4137)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::GetExtentType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4138)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ExtentType);
}

#pragma implementation_key(4139)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::GetProfileSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4140)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", profileSide);
}

#pragma implementation_key(4141)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumProfiles, ppProfiles);
}

#pragma implementation_key(4142)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumProfiles, pProfiles);
}

#pragma implementation_key(4143)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumScopeParts, pScopeParts);
}

#pragma implementation_key(4144)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumScopeParts, pScopeParts);
}

#pragma implementation_key(4145)
inline _bstr_t TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4146)
inline void TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4147)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4148)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4149)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4150)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", X1, Y1, Z1, X2, Y2, Z2);
}

#pragma implementation_key(4151)
inline VARIANT_BOOL TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4152)
inline void TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4153)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::Delete ( ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4154)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::RollToFeature ( ) {
    return _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4155)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::GetPartFeatures ( long * NumFeatures, SAFEARRAY * * ppFeatures ) {
    return _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumFeatures, ppFeatures);
}

#pragma implementation_key(4156)
inline enum TGPart::FeatureStatusConstants TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutout::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

//
// interface _IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto wrapper method implementations
//

#pragma implementation_key(4157)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4158)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4159)
inline TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutoutPtr TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto::Item ( const _variant_t & Index ) {
    struct AssemblyDrivenPartFeaturesRevolvedCutout * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDrivenPartFeaturesRevolvedCutoutPtr(_result, false);
}

#pragma implementation_key(4160)
inline IUnknownPtr TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4161)
inline long TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4162)
inline TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutoutPtr TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto::Add ( long nNumScopeParts, SAFEARRAY * * pScopeParts, long nNumProfiles, SAFEARRAY * * pProfiles, IUnknown * pRefAxis, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdAngle, IUnknown * KeyPointOrTangentFace, enum TGPart::KeyPointExtentConstants * KeyPointFlags, IUnknown * pFromSurface, IUnknown * pToSurface ) {
    struct AssemblyDrivenPartFeaturesRevolvedCutout * _result = 0;
    HRESULT _hr = raw_Add(nNumScopeParts, pScopeParts, nNumProfiles, pProfiles, pRefAxis, ExtentType, ExtentSide, profileSide, pdAngle, KeyPointOrTangentFace, KeyPointFlags, pFromSurface, pToSurface, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDrivenPartFeaturesRevolvedCutoutPtr(_result, false);
}

//
// interface _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto wrapper method implementations
//

#pragma implementation_key(4163)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4164)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4165)
inline double TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = raw_GetAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4166)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::SetAngle ( double nAngle ) {
    HRESULT _hr = raw_SetAngle(nAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4167)
inline IUnknownPtr TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetReferenceAxis ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetReferenceAxis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4168)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::SetReferenceAxis ( IUnknown * ReferenceAxis ) {
    HRESULT _hr = raw_SetReferenceAxis(ReferenceAxis);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4169)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetExtentSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetExtentSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4170)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide ) {
    HRESULT _hr = raw_SetExtentSide(ExtentSide);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4171)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetExtentType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetExtentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4172)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType ) {
    HRESULT _hr = raw_SetExtentType(ExtentType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4173)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetProfileSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetProfileSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4174)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide ) {
    HRESULT _hr = raw_SetProfileSide(profileSide);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4175)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles ) {
    HRESULT _hr = raw_GetProfiles(NumProfiles, ppProfiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4176)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles ) {
    HRESULT _hr = raw_SetProfiles(NumProfiles, pProfiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4177)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts ) {
    HRESULT _hr = raw_SetScopeParts(NumScopeParts, pScopeParts);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4178)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts ) {
    HRESULT _hr = raw_GetScopeParts(NumScopeParts, pScopeParts);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4179)
inline _bstr_t TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4180)
inline void TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::PutName ( _bstr_t featureName ) {
    HRESULT _hr = put_Name(featureName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4181)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Edges(EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4182)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Faces(FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4183)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRay(Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4184)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    HRESULT _hr = raw_Range(X1, Y1, Z1, X2, Y2, Z2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4185)
inline VARIANT_BOOL TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4186)
inline void TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::PutSuppress ( VARIANT_BOOL Suppress ) {
    HRESULT _hr = put_Suppress(Suppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4187)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4188)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::RollToFeature ( ) {
    HRESULT _hr = raw_RollToFeature();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4189)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetPartFeatures ( long * NumFeatures, SAFEARRAY * * ppFeatures ) {
    HRESULT _hr = raw_GetPartFeatures(NumFeatures, ppFeatures);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4190)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AssemblyDrivenPartFeaturesHoles wrapper method implementations
//

#pragma implementation_key(4191)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyDrivenPartFeaturesHoles::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4192)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesHoles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4193)
inline TGAssembly::AssemblyDrivenPartFeaturesHolePtr TGAssembly::AssemblyDrivenPartFeaturesHoles::Item ( const _variant_t & Index ) {
    struct AssemblyDrivenPartFeaturesHole * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyDrivenPartFeaturesHolePtr(_result, false);
}

#pragma implementation_key(4194)
inline long TGAssembly::AssemblyDrivenPartFeaturesHoles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4195)
inline TGAssembly::AssemblyDrivenPartFeaturesHolePtr TGAssembly::AssemblyDrivenPartFeaturesHoles::Add ( unsigned long nNumScopeParts, SAFEARRAY * * pScopeParts, unsigned long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants * pExtentSide, IUnknown * pHoledata, enum TGPart::FeaturePropertyConstants ExtentType, double * pHoleDepth, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags ) {
    struct AssemblyDrivenPartFeaturesHole * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x600d\x0003\x600d\x4003\x000d\x0003\x4005\x000d\x000d\x000d\x4003", nNumScopeParts, pScopeParts, nNumProfiles, pProfiles, pExtentSide, pHoledata, ExtentType, pHoleDepth, pFromSurfOrPlane, pToSurfOrPlane, pKeyPoint, pKeyPointFlags);
    return AssemblyDrivenPartFeaturesHolePtr(_result, false);
}

//
// dispinterface AssemblyDrivenPartFeaturesHole wrapper method implementations
//

#pragma implementation_key(4196)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyDrivenPartFeaturesHole::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4197)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesHole::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4198)
inline double TGAssembly::AssemblyDrivenPartFeaturesHole::GetDepth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4199)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesHole::SetDepth ( double nDepth ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", nDepth);
}

#pragma implementation_key(4200)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyDrivenPartFeaturesHole::GetExtentSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4201)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesHole::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ExtentSide);
}

#pragma implementation_key(4202)
inline enum TGPart::FeaturePropertyConstants TGAssembly::AssemblyDrivenPartFeaturesHole::GetExtentType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4203)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesHole::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ExtentType);
}

#pragma implementation_key(4204)
inline IUnknownPtr TGAssembly::AssemblyDrivenPartFeaturesHole::GetHoleData ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4205)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesHole::SetHoleData ( IUnknown * Holedata ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", Holedata);
}

#pragma implementation_key(4206)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesHole::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumProfiles, ppProfiles);
}

#pragma implementation_key(4207)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesHole::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumProfiles, pProfiles);
}

#pragma implementation_key(4208)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesHole::SetFromPlane ( IUnknown * FromPlane ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", FromPlane);
}

#pragma implementation_key(4209)
inline IUnknownPtr TGAssembly::AssemblyDrivenPartFeaturesHole::GetFromPlane ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4210)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesHole::SetToPlane ( IUnknown * ToPlane ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", ToPlane);
}

#pragma implementation_key(4211)
inline IUnknownPtr TGAssembly::AssemblyDrivenPartFeaturesHole::GetToPlane ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4212)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesHole::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x200d", NumScopeParts, pScopeParts);
}

#pragma implementation_key(4213)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesHole::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumScopeParts, pScopeParts);
}

#pragma implementation_key(4214)
inline _bstr_t TGAssembly::AssemblyDrivenPartFeaturesHole::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4215)
inline void TGAssembly::AssemblyDrivenPartFeaturesHole::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4216)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesHole::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", EdgeType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4217)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesHole::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", FaceType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4218)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesHole::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4219)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesHole::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", X1, Y1, Z1, X2, Y2, Z2);
}

#pragma implementation_key(4220)
inline VARIANT_BOOL TGAssembly::AssemblyDrivenPartFeaturesHole::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4221)
inline void TGAssembly::AssemblyDrivenPartFeaturesHole::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4222)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesHole::Delete ( ) {
    return _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4223)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesHole::RollToFeature ( ) {
    return _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4224)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesHole::GetPartFeatures ( long * NumFeatures, SAFEARRAY * * ppFeatures ) {
    return _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x600d", NumFeatures, ppFeatures);
}

#pragma implementation_key(4225)
inline enum TGPart::FeatureStatusConstants TGAssembly::AssemblyDrivenPartFeaturesHole::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x480c", Description);
    return _result;
}

//
// interface _IAssemblyDrivenPartFeaturesHolesAuto wrapper method implementations
//

#pragma implementation_key(4226)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyDrivenPartFeaturesHolesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4227)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesHolesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4228)
inline TGAssembly::AssemblyDrivenPartFeaturesHolePtr TGAssembly::_IAssemblyDrivenPartFeaturesHolesAuto::Item ( const _variant_t & Index ) {
    struct AssemblyDrivenPartFeaturesHole * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDrivenPartFeaturesHolePtr(_result, false);
}

#pragma implementation_key(4229)
inline IUnknownPtr TGAssembly::_IAssemblyDrivenPartFeaturesHolesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4230)
inline long TGAssembly::_IAssemblyDrivenPartFeaturesHolesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4231)
inline TGAssembly::AssemblyDrivenPartFeaturesHolePtr TGAssembly::_IAssemblyDrivenPartFeaturesHolesAuto::Add ( unsigned long nNumScopeParts, SAFEARRAY * * pScopeParts, unsigned long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants * pExtentSide, IUnknown * pHoledata, enum TGPart::FeaturePropertyConstants ExtentType, double * pHoleDepth, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags ) {
    struct AssemblyDrivenPartFeaturesHole * _result = 0;
    HRESULT _hr = raw_Add(nNumScopeParts, pScopeParts, nNumProfiles, pProfiles, pExtentSide, pHoledata, ExtentType, pHoleDepth, pFromSurfOrPlane, pToSurfOrPlane, pKeyPoint, pKeyPointFlags, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDrivenPartFeaturesHolePtr(_result, false);
}

//
// interface _IAssemblyDrivenPartFeaturesHoleAuto wrapper method implementations
//

#pragma implementation_key(4232)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4233)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4234)
inline double TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetDepth ( ) {
    double _result = 0;
    HRESULT _hr = raw_GetDepth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4235)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::SetDepth ( double nDepth ) {
    HRESULT _hr = raw_SetDepth(nDepth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4236)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetExtentSide ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetExtentSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4237)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide ) {
    HRESULT _hr = raw_SetExtentSide(ExtentSide);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4238)
inline enum TGPart::FeaturePropertyConstants TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetExtentType ( ) {
    enum TGPart::FeaturePropertyConstants _result;
    HRESULT _hr = raw_GetExtentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4239)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType ) {
    HRESULT _hr = raw_SetExtentType(ExtentType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4240)
inline IUnknownPtr TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetHoleData ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetHoleData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4241)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::SetHoleData ( IUnknown * Holedata ) {
    HRESULT _hr = raw_SetHoleData(Holedata);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4242)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles ) {
    HRESULT _hr = raw_GetProfiles(NumProfiles, ppProfiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4243)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles ) {
    HRESULT _hr = raw_SetProfiles(NumProfiles, pProfiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4244)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::SetFromPlane ( IUnknown * FromPlane ) {
    HRESULT _hr = raw_SetFromPlane(FromPlane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4245)
inline IUnknownPtr TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetFromPlane ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetFromPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4246)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::SetToPlane ( IUnknown * ToPlane ) {
    HRESULT _hr = raw_SetToPlane(ToPlane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4247)
inline IUnknownPtr TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetToPlane ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetToPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4248)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts ) {
    HRESULT _hr = raw_SetScopeParts(NumScopeParts, pScopeParts);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4249)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts ) {
    HRESULT _hr = raw_GetScopeParts(NumScopeParts, pScopeParts);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4250)
inline _bstr_t TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4251)
inline void TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::PutName ( _bstr_t featureName ) {
    HRESULT _hr = put_Name(featureName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4252)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Edges(EdgeType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4253)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Faces(FaceType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4254)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FacesByRay(Xorigin, Yorigin, Zorigin, Xdir, Ydir, Zdir, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4255)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 ) {
    HRESULT _hr = raw_Range(X1, Y1, Z1, X2, Y2, Z2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4256)
inline VARIANT_BOOL TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4257)
inline void TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::PutSuppress ( VARIANT_BOOL Suppress ) {
    HRESULT _hr = put_Suppress(Suppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4258)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4259)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::RollToFeature ( ) {
    HRESULT _hr = raw_RollToFeature();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4260)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetPartFeatures ( long * NumFeatures, SAFEARRAY * * ppFeatures ) {
    HRESULT _hr = raw_GetPartFeatures(NumFeatures, ppFeatures);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4261)
inline enum TGPart::FeatureStatusConstants TGAssembly::_IAssemblyDrivenPartFeaturesHoleAuto::GetStatus ( VARIANT * Description ) {
    enum TGPart::FeatureStatusConstants _result;
    HRESULT _hr = get_Status(Description, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AssemblyDrivenPartFeaturesTrimTubes wrapper method implementations
//

#pragma implementation_key(4262)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyDrivenPartFeaturesTrimTubes::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4263)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesTrimTubes::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4264)
inline TGAssembly::AssemblyDrivenPartFeaturesTrimTubePtr TGAssembly::AssemblyDrivenPartFeaturesTrimTubes::Item ( const _variant_t & Index ) {
    struct AssemblyDrivenPartFeaturesTrimTube * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyDrivenPartFeaturesTrimTubePtr(_result, false);
}

#pragma implementation_key(4265)
inline long TGAssembly::AssemblyDrivenPartFeaturesTrimTubes::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4266)
inline TGAssembly::AssemblyDrivenPartFeaturesTrimTubePtr TGAssembly::AssemblyDrivenPartFeaturesTrimTubes::Add ( IDispatch * pPrimaryTube, unsigned long ulNumSecondaryTubes, SAFEARRAY * * pSecondaryTubes ) {
    struct AssemblyDrivenPartFeaturesTrimTube * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x6009", pPrimaryTube, ulNumSecondaryTubes, pSecondaryTubes);
    return AssemblyDrivenPartFeaturesTrimTubePtr(_result, false);
}

//
// interface _IAssemblyDrivenPartFeaturesAuto wrapper method implementations
//

#pragma implementation_key(4267)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyDrivenPartFeaturesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4268)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4269)
inline TGAssembly::AssemblyDrivenPartFeaturesExtrudedCutoutsPtr TGAssembly::_IAssemblyDrivenPartFeaturesAuto::GetAssemblyDrivenPartFeaturesExtrudedCutouts ( ) {
    struct AssemblyDrivenPartFeaturesExtrudedCutouts * _result = 0;
    HRESULT _hr = get_AssemblyDrivenPartFeaturesExtrudedCutouts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDrivenPartFeaturesExtrudedCutoutsPtr(_result, false);
}

#pragma implementation_key(4270)
inline TGAssembly::AssemblyDrivenPartFeaturesRevolvedCutoutsPtr TGAssembly::_IAssemblyDrivenPartFeaturesAuto::GetAssemblyDrivenPartFeaturesRevolvedCutouts ( ) {
    struct AssemblyDrivenPartFeaturesRevolvedCutouts * _result = 0;
    HRESULT _hr = get_AssemblyDrivenPartFeaturesRevolvedCutouts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDrivenPartFeaturesRevolvedCutoutsPtr(_result, false);
}

#pragma implementation_key(4271)
inline TGAssembly::AssemblyDrivenPartFeaturesHolesPtr TGAssembly::_IAssemblyDrivenPartFeaturesAuto::GetAssemblyDrivenPartFeaturesHoles ( ) {
    struct AssemblyDrivenPartFeaturesHoles * _result = 0;
    HRESULT _hr = get_AssemblyDrivenPartFeaturesHoles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDrivenPartFeaturesHolesPtr(_result, false);
}

#pragma implementation_key(4272)
inline TGAssembly::AssemblyDrivenPartFeaturesTrimTubesPtr TGAssembly::_IAssemblyDrivenPartFeaturesAuto::GetAssemblyDrivenPartFeaturesTrimTubes ( ) {
    struct AssemblyDrivenPartFeaturesTrimTubes * _result = 0;
    HRESULT _hr = get_AssemblyDrivenPartFeaturesTrimTubes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDrivenPartFeaturesTrimTubesPtr(_result, false);
}

//
// dispinterface AssemblyDrivenPartFeaturesTrimTube wrapper method implementations
//

#pragma implementation_key(4273)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyDrivenPartFeaturesTrimTube::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4274)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesTrimTube::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4275)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesTrimTube::SetPrimaryTube ( IDispatch * pPrimaryTube ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", pPrimaryTube);
}

#pragma implementation_key(4276)
inline IDispatchPtr TGAssembly::AssemblyDrivenPartFeaturesTrimTube::GetPrimaryTube ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4277)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesTrimTube::SetSecondaryTubes ( long NumSecondaryTubes, SAFEARRAY * pSecondaryTubes ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x2009", NumSecondaryTubes, pSecondaryTubes);
}

#pragma implementation_key(4278)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesTrimTube::GetSecondaryTubes ( long * NumSecondaryTubes, SAFEARRAY * * pSecondaryTubes ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumSecondaryTubes, pSecondaryTubes);
}

#pragma implementation_key(4279)
inline _bstr_t TGAssembly::AssemblyDrivenPartFeaturesTrimTube::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4280)
inline void TGAssembly::AssemblyDrivenPartFeaturesTrimTube::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4281)
inline VARIANT_BOOL TGAssembly::AssemblyDrivenPartFeaturesTrimTube::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4282)
inline void TGAssembly::AssemblyDrivenPartFeaturesTrimTube::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4283)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesTrimTube::Delete ( ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4284)
inline HRESULT TGAssembly::AssemblyDrivenPartFeaturesTrimTube::RollToFeature ( ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface _IAssemblyDrivenPartFeaturesTrimTubesAuto wrapper method implementations
//

#pragma implementation_key(4285)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4286)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4287)
inline TGAssembly::AssemblyDrivenPartFeaturesTrimTubePtr TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubesAuto::Item ( const _variant_t & Index ) {
    struct AssemblyDrivenPartFeaturesTrimTube * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDrivenPartFeaturesTrimTubePtr(_result, false);
}

#pragma implementation_key(4288)
inline IUnknownPtr TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4289)
inline long TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4290)
inline TGAssembly::AssemblyDrivenPartFeaturesTrimTubePtr TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubesAuto::Add ( IDispatch * pPrimaryTube, unsigned long ulNumSecondaryTubes, SAFEARRAY * * pSecondaryTubes ) {
    struct AssemblyDrivenPartFeaturesTrimTube * _result = 0;
    HRESULT _hr = raw_Add(pPrimaryTube, ulNumSecondaryTubes, pSecondaryTubes, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDrivenPartFeaturesTrimTubePtr(_result, false);
}

//
// interface _IAssemblyDrivenPartFeaturesTrimTubeAuto wrapper method implementations
//

#pragma implementation_key(4291)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubeAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4292)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubeAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4293)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubeAuto::SetPrimaryTube ( IDispatch * pPrimaryTube ) {
    HRESULT _hr = raw_SetPrimaryTube(pPrimaryTube);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4294)
inline IDispatchPtr TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubeAuto::GetPrimaryTube ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetPrimaryTube(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4295)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubeAuto::SetSecondaryTubes ( long NumSecondaryTubes, SAFEARRAY * pSecondaryTubes ) {
    HRESULT _hr = raw_SetSecondaryTubes(NumSecondaryTubes, pSecondaryTubes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4296)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubeAuto::GetSecondaryTubes ( long * NumSecondaryTubes, SAFEARRAY * * pSecondaryTubes ) {
    HRESULT _hr = raw_GetSecondaryTubes(NumSecondaryTubes, pSecondaryTubes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4297)
inline _bstr_t TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubeAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4298)
inline void TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubeAuto::PutName ( _bstr_t featureName ) {
    HRESULT _hr = put_Name(featureName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4299)
inline VARIANT_BOOL TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubeAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4300)
inline void TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubeAuto::PutSuppress ( VARIANT_BOOL Suppress ) {
    HRESULT _hr = put_Suppress(Suppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4301)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubeAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4302)
inline HRESULT TGAssembly::_IAssemblyDrivenPartFeaturesTrimTubeAuto::RollToFeature ( ) {
    HRESULT _hr = raw_RollToFeature();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Pipes wrapper method implementations
//

#pragma implementation_key(4303)
inline TGFramework::ApplicationPtr TGAssembly::Pipes::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4304)
inline IDispatchPtr TGAssembly::Pipes::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4305)
inline TGAssembly::PipePtr TGAssembly::Pipes::Item ( const _variant_t & Index ) {
    struct Pipe * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return PipePtr(_result, false);
}

#pragma implementation_key(4306)
inline long TGAssembly::Pipes::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4307)
inline TGAssembly::PipePtr TGAssembly::Pipes::Add ( double dPipeDiameter, long NumPaths, SAFEARRAY * * Path, VARIANT_BOOL bAllowGradient, double dGradientValue, _bstr_t PipeFileName, _bstr_t ElbowFileName, _bstr_t TeeFileName, _bstr_t CrossFileName, _bstr_t CouplingFileName ) {
    struct Pipe * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0003\x6009\x000b\x0005\x0008\x0008\x0008\x0008\x0008", dPipeDiameter, NumPaths, Path, bAllowGradient, dGradientValue, (BSTR)PipeFileName, (BSTR)ElbowFileName, (BSTR)TeeFileName, (BSTR)CrossFileName, (BSTR)CouplingFileName);
    return PipePtr(_result, false);
}

//
// dispinterface Pipe wrapper method implementations
//

#pragma implementation_key(4308)
inline TGFramework::ApplicationPtr TGAssembly::Pipe::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4309)
inline IDispatchPtr TGAssembly::Pipe::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4310)
inline void TGAssembly::Pipe::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4311)
inline _bstr_t TGAssembly::Pipe::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4312)
inline void TGAssembly::Pipe::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4313)
inline VARIANT_BOOL TGAssembly::Pipe::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4314)
inline HRESULT TGAssembly::Pipe::GetPipeSegments ( long * NumPipeSegments, SAFEARRAY * * PipeSegmentOccurrences ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumPipeSegments, PipeSegmentOccurrences);
}

#pragma implementation_key(4315)
inline HRESULT TGAssembly::Pipe::GetPipeFittings ( long * NumPipeFittings, SAFEARRAY * * PipeFittingOccurrences, SAFEARRAY * * FittingTypes ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009\x6003", NumPipeFittings, PipeFittingOccurrences, FittingTypes);
}

#pragma implementation_key(4316)
inline HRESULT TGAssembly::Pipe::GetPipeLengths ( long * NumPipeSegments, SAFEARRAY * * PipeSegmentOccurrences, SAFEARRAY * * LineSegments, SAFEARRAY * * PipeSegmentLength ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009\x6009\x6005", NumPipeSegments, PipeSegmentOccurrences, LineSegments, PipeSegmentLength);
}

#pragma implementation_key(4317)
inline _bstr_t TGAssembly::Pipe::GetPipeSegmentStandard ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4318)
inline void TGAssembly::Pipe::PutPipeSegmentStandard ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4319)
inline _bstr_t TGAssembly::Pipe::GetPipeFittingStandard ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4320)
inline void TGAssembly::Pipe::PutPipeFittingStandard ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4321)
inline enum TGAssembly::PipeFittingEndTreatmentConstants TGAssembly::Pipe::GetDefaultEndTreatment ( ) {
    enum PipeFittingEndTreatmentConstants _result;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4322)
inline void TGAssembly::Pipe::PutDefaultEndTreatment ( enum PipeFittingEndTreatmentConstants _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4323)
inline HRESULT TGAssembly::Pipe::Delete ( ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4324)
inline HRESULT TGAssembly::Pipe::RotateFittings ( SAFEARRAY * PipeFittingOccurrences, double dValue ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x2009\x0005", PipeFittingOccurrences, dValue);
}

#pragma implementation_key(4325)
inline TGPart::SuppressVariablePtr TGAssembly::Pipe::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(4326)
inline TGPart::SuppressVariablePtr TGAssembly::Pipe::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(4327)
inline HRESULT TGAssembly::Pipe::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4328)
inline VARIANT_BOOL TGAssembly::Pipe::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IPipesAuto wrapper method implementations
//

#pragma implementation_key(4329)
inline TGFramework::ApplicationPtr TGAssembly::_IPipesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4330)
inline IDispatchPtr TGAssembly::_IPipesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4331)
inline TGAssembly::PipePtr TGAssembly::_IPipesAuto::Item ( const _variant_t & Index ) {
    struct Pipe * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PipePtr(_result, false);
}

#pragma implementation_key(4332)
inline long TGAssembly::_IPipesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4333)
inline IUnknownPtr TGAssembly::_IPipesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4334)
inline TGAssembly::PipePtr TGAssembly::_IPipesAuto::Add ( double dPipeDiameter, long NumPaths, SAFEARRAY * * Path, VARIANT_BOOL bAllowGradient, double dGradientValue, _bstr_t PipeFileName, _bstr_t ElbowFileName, _bstr_t TeeFileName, _bstr_t CrossFileName, _bstr_t CouplingFileName ) {
    struct Pipe * _result = 0;
    HRESULT _hr = raw_Add(dPipeDiameter, NumPaths, Path, bAllowGradient, dGradientValue, PipeFileName, ElbowFileName, TeeFileName, CrossFileName, CouplingFileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PipePtr(_result, false);
}

//
// interface _IPipeAuto wrapper method implementations
//

#pragma implementation_key(4335)
inline TGFramework::ApplicationPtr TGAssembly::_IPipeAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4336)
inline IDispatchPtr TGAssembly::_IPipeAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4337)
inline void TGAssembly::_IPipeAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4338)
inline _bstr_t TGAssembly::_IPipeAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4339)
inline void TGAssembly::_IPipeAuto::PutVisible ( VARIANT_BOOL bVisible ) {
    HRESULT _hr = put_Visible(bVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4340)
inline VARIANT_BOOL TGAssembly::_IPipeAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4341)
inline HRESULT TGAssembly::_IPipeAuto::GetPipeSegments ( long * NumPipeSegments, SAFEARRAY * * PipeSegmentOccurrences ) {
    HRESULT _hr = raw_GetPipeSegments(NumPipeSegments, PipeSegmentOccurrences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4342)
inline HRESULT TGAssembly::_IPipeAuto::GetPipeFittings ( long * NumPipeFittings, SAFEARRAY * * PipeFittingOccurrences, SAFEARRAY * * FittingTypes ) {
    HRESULT _hr = raw_GetPipeFittings(NumPipeFittings, PipeFittingOccurrences, FittingTypes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4343)
inline HRESULT TGAssembly::_IPipeAuto::GetPipeLengths ( long * NumPipeSegments, SAFEARRAY * * PipeSegmentOccurrences, SAFEARRAY * * LineSegments, SAFEARRAY * * PipeSegmentLength ) {
    HRESULT _hr = raw_GetPipeLengths(NumPipeSegments, PipeSegmentOccurrences, LineSegments, PipeSegmentLength);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4344)
inline _bstr_t TGAssembly::_IPipeAuto::GetPipeSegmentStandard ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PipeSegmentStandard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4345)
inline void TGAssembly::_IPipeAuto::PutPipeSegmentStandard ( _bstr_t PipeSegmentStandard ) {
    HRESULT _hr = put_PipeSegmentStandard(PipeSegmentStandard);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4346)
inline _bstr_t TGAssembly::_IPipeAuto::GetPipeFittingStandard ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PipeFittingStandard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4347)
inline void TGAssembly::_IPipeAuto::PutPipeFittingStandard ( _bstr_t PipeFittingStandard ) {
    HRESULT _hr = put_PipeFittingStandard(PipeFittingStandard);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4348)
inline enum TGAssembly::PipeFittingEndTreatmentConstants TGAssembly::_IPipeAuto::GetDefaultEndTreatment ( ) {
    enum PipeFittingEndTreatmentConstants _result;
    HRESULT _hr = get_DefaultEndTreatment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4349)
inline void TGAssembly::_IPipeAuto::PutDefaultEndTreatment ( enum PipeFittingEndTreatmentConstants DefaultEndTreatment ) {
    HRESULT _hr = put_DefaultEndTreatment(DefaultEndTreatment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4350)
inline HRESULT TGAssembly::_IPipeAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4351)
inline HRESULT TGAssembly::_IPipeAuto::RotateFittings ( SAFEARRAY * PipeFittingOccurrences, double dValue ) {
    HRESULT _hr = raw_RotateFittings(PipeFittingOccurrences, dValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4352)
inline TGPart::SuppressVariablePtr TGAssembly::_IPipeAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(4353)
inline TGPart::SuppressVariablePtr TGAssembly::_IPipeAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(4354)
inline HRESULT TGAssembly::_IPipeAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4355)
inline VARIANT_BOOL TGAssembly::_IPipeAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface ComponentLayouts wrapper method implementations
//

#pragma implementation_key(4356)
inline TGAssembly::ComponentLayoutPtr TGAssembly::ComponentLayouts::Item ( const _variant_t & Index ) {
    struct ComponentLayout * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ComponentLayoutPtr(_result, false);
}

#pragma implementation_key(4357)
inline TGFramework::ApplicationPtr TGAssembly::ComponentLayouts::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4358)
inline IDispatchPtr TGAssembly::ComponentLayouts::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4359)
inline long TGAssembly::ComponentLayouts::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4360)
inline TGAssembly::ComponentLayoutPtr TGAssembly::ComponentLayouts::Add ( struct AsmRefPlane * AsmRefPlane, const _variant_t & ReturnExisting, VARIANT * Status ) {
    struct ComponentLayout * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x080c\x480c", AsmRefPlane, &ReturnExisting, Status);
    return ComponentLayoutPtr(_result, false);
}

//
// dispinterface ComponentLayout wrapper method implementations
//

#pragma implementation_key(4361)
inline TGFramework::ApplicationPtr TGAssembly::ComponentLayout::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4362)
inline HRESULT TGAssembly::ComponentLayout::Delete ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4363)
inline IDispatchPtr TGAssembly::ComponentLayout::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4364)
inline IDispatchPtr TGAssembly::ComponentLayout::GetProfile ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4365)
inline _bstr_t TGAssembly::ComponentLayout::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4366)
inline void TGAssembly::ComponentLayout::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4367)
inline TGAssembly::AsmRefPlanePtr TGAssembly::ComponentLayout::GetRefPlane ( ) {
    struct AsmRefPlane * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(4368)
inline enum TGFramework::ObjectType TGAssembly::ComponentLayout::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4369)
inline IDispatchPtr TGAssembly::ComponentLayout::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4370)
inline VARIANT_BOOL TGAssembly::ComponentLayout::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IComponentLayoutsAuto wrapper method implementations
//

#pragma implementation_key(4371)
inline TGAssembly::ComponentLayoutPtr TGAssembly::_IComponentLayoutsAuto::Item ( const _variant_t & Index ) {
    struct ComponentLayout * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ComponentLayoutPtr(_result, false);
}

#pragma implementation_key(4372)
inline IUnknownPtr TGAssembly::_IComponentLayoutsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4373)
inline TGFramework::ApplicationPtr TGAssembly::_IComponentLayoutsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4374)
inline IDispatchPtr TGAssembly::_IComponentLayoutsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4375)
inline long TGAssembly::_IComponentLayoutsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4376)
inline TGAssembly::ComponentLayoutPtr TGAssembly::_IComponentLayoutsAuto::Add ( struct AsmRefPlane * AsmRefPlane, const _variant_t & ReturnExisting, VARIANT * Status ) {
    struct ComponentLayout * _result = 0;
    HRESULT _hr = raw_Add(AsmRefPlane, ReturnExisting, Status, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ComponentLayoutPtr(_result, false);
}

//
// interface _IComponentLayoutAuto wrapper method implementations
//

#pragma implementation_key(4377)
inline TGFramework::ApplicationPtr TGAssembly::_IComponentLayoutAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4378)
inline HRESULT TGAssembly::_IComponentLayoutAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4379)
inline IDispatchPtr TGAssembly::_IComponentLayoutAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4380)
inline IDispatchPtr TGAssembly::_IComponentLayoutAuto::GetProfile ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4381)
inline _bstr_t TGAssembly::_IComponentLayoutAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4382)
inline void TGAssembly::_IComponentLayoutAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4383)
inline TGAssembly::AsmRefPlanePtr TGAssembly::_IComponentLayoutAuto::GetRefPlane ( ) {
    struct AsmRefPlane * _result = 0;
    HRESULT _hr = get_RefPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanePtr(_result, false);
}

#pragma implementation_key(4384)
inline enum TGFramework::ObjectType TGAssembly::_IComponentLayoutAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4385)
inline IDispatchPtr TGAssembly::_IComponentLayoutAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4386)
inline VARIANT_BOOL TGAssembly::_IComponentLayoutAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface Paths wrapper method implementations
//

#pragma implementation_key(4387)
inline TGFramework::ApplicationPtr TGAssembly::Paths::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4388)
inline IDispatchPtr TGAssembly::Paths::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4389)
inline TGAssembly::PathPtr TGAssembly::Paths::Item ( const _variant_t & Index ) {
    struct Path * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return PathPtr(_result, false);
}

#pragma implementation_key(4390)
inline long TGAssembly::Paths::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4391)
inline TGAssembly::PathPtr TGAssembly::Paths::Add ( long NumPoints, SAFEARRAY * * PointTypeConstants, SAFEARRAY * * EdgeSet, SAFEARRAY * * KeyPointTypeConstants, SAFEARRAY * * Array, enum TGPart::KeypointEndConditionConstants StartpointEndType, const _variant_t & EndpointEndType ) {
    struct Path * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6003\x6009\x6003\x6005\x0003\x080c", NumPoints, PointTypeConstants, EdgeSet, KeyPointTypeConstants, Array, StartpointEndType, &EndpointEndType);
    return PathPtr(_result, false);
}

//
// dispinterface Path wrapper method implementations
//

#pragma implementation_key(4392)
inline TGFramework::ApplicationPtr TGAssembly::Path::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4393)
inline IDispatchPtr TGAssembly::Path::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4394)
inline _bstr_t TGAssembly::Path::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4395)
inline HRESULT TGAssembly::Path::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4396)
inline long TGAssembly::Path::GetStatus ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4397)
inline HRESULT TGAssembly::Path::InsertKeyPoint ( IDispatch * EdgeToInsert, enum TGFramework::KeyPointType KeypointConstant, long KeypointIndexToInsertBefore ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003\x0003", EdgeToInsert, KeypointConstant, KeypointIndexToInsertBefore);
}

#pragma implementation_key(4398)
inline HRESULT TGAssembly::Path::InserttCylinderAxis ( IDispatch * CylinderFace, IDispatch * CylinderEdge, long KeypointIndexToInsertBefore ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x0003", CylinderFace, CylinderEdge, KeypointIndexToInsertBefore);
}

#pragma implementation_key(4399)
inline HRESULT TGAssembly::Path::InsertSpacePoint ( double XPos, double YPos, double ZPos, long KeypointIndexToInsertBefore ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0003", XPos, YPos, ZPos, KeypointIndexToInsertBefore);
}

#pragma implementation_key(4400)
inline IDispatchPtr TGAssembly::Path::GetEndParentEdge ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4401)
inline enum TGPart::KeypointEndConditionConstants TGAssembly::Path::GetEndpointEndCondition ( ) {
    enum TGPart::KeypointEndConditionConstants _result;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4402)
inline double TGAssembly::Path::GetEndpointMagnitude ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4403)
inline HRESULT TGAssembly::Path::RemovePoint ( long KeypointIndex ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", KeypointIndex);
}

#pragma implementation_key(4404)
inline IDispatchPtr TGAssembly::Path::GetStartParentEdge ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4405)
inline enum TGPart::KeypointEndConditionConstants TGAssembly::Path::GetStartpointEndCondition ( ) {
    enum TGPart::KeypointEndConditionConstants _result;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4406)
inline double TGAssembly::Path::GetStartpointMagnitude ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4407)
inline HRESULT TGAssembly::Path::GetAllPoints ( long * NumPoints, SAFEARRAY * * PointPositions ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6005", NumPoints, PointPositions);
}

#pragma implementation_key(4408)
inline HRESULT TGAssembly::Path::GetEndPoints ( SAFEARRAY * * EndPointPositions ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", EndPointPositions);
}

#pragma implementation_key(4409)
inline HRESULT TGAssembly::Path::GetLength ( double * PathLength ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005", PathLength);
}

#pragma implementation_key(4410)
inline HRESULT TGAssembly::Path::SetFixedLength ( double dCurveLength, enum TGPart::SEFixedLengthConstraintDirection FixedLengthConstraintDirection, IDispatch * ConstraintGeometry ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0003\x0009", dCurveLength, FixedLengthConstraintDirection, ConstraintGeometry);
}

#pragma implementation_key(4411)
inline HRESULT TGAssembly::Path::GetFixedLength ( double * pdCurveLength, enum TGPart::SEFixedLengthConstraintDirection * pFixedLengthConstraintDirection, IDispatch * * pConstraintGeometry ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4003\x4009", pdCurveLength, pFixedLengthConstraintDirection, pConstraintGeometry);
}

#pragma implementation_key(4412)
inline HRESULT TGAssembly::Path::EditSpacePoint ( long KeypointIndexToEdit, double XPos, double YPos, double ZPos ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", KeypointIndexToEdit, XPos, YPos, ZPos);
}

#pragma implementation_key(4413)
inline HRESULT TGAssembly::Path::SplitPath ( double XPos, double YPos, double ZPos, IDispatch * * pNewPath ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4009", XPos, YPos, ZPos, pNewPath);
}

//
// interface _IPathsAuto wrapper method implementations
//

#pragma implementation_key(4414)
inline TGFramework::ApplicationPtr TGAssembly::_IPathsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4415)
inline IDispatchPtr TGAssembly::_IPathsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4416)
inline TGAssembly::PathPtr TGAssembly::_IPathsAuto::Item ( const _variant_t & Index ) {
    struct Path * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PathPtr(_result, false);
}

#pragma implementation_key(4417)
inline IUnknownPtr TGAssembly::_IPathsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4418)
inline long TGAssembly::_IPathsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4419)
inline TGAssembly::PathPtr TGAssembly::_IPathsAuto::Add ( long NumPoints, SAFEARRAY * * PointTypeConstants, SAFEARRAY * * EdgeSet, SAFEARRAY * * KeyPointTypeConstants, SAFEARRAY * * Array, enum TGPart::KeypointEndConditionConstants StartpointEndType, const _variant_t & EndpointEndType ) {
    struct Path * _result = 0;
    HRESULT _hr = raw_Add(NumPoints, PointTypeConstants, EdgeSet, KeyPointTypeConstants, Array, StartpointEndType, EndpointEndType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PathPtr(_result, false);
}

//
// interface _IPathAuto wrapper method implementations
//

#pragma implementation_key(4420)
inline TGFramework::ApplicationPtr TGAssembly::_IPathAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4421)
inline IDispatchPtr TGAssembly::_IPathAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4422)
inline _bstr_t TGAssembly::_IPathAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4423)
inline HRESULT TGAssembly::_IPathAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4424)
inline long TGAssembly::_IPathAuto::GetStatus ( ) {
    long _result = 0;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4425)
inline HRESULT TGAssembly::_IPathAuto::InsertKeyPoint ( IDispatch * EdgeToInsert, enum TGFramework::KeyPointType KeypointConstant, long KeypointIndexToInsertBefore ) {
    HRESULT _hr = raw_InsertKeyPoint(EdgeToInsert, KeypointConstant, KeypointIndexToInsertBefore);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4426)
inline HRESULT TGAssembly::_IPathAuto::InserttCylinderAxis ( IDispatch * CylinderFace, IDispatch * CylinderEdge, long KeypointIndexToInsertBefore ) {
    HRESULT _hr = raw_InserttCylinderAxis(CylinderFace, CylinderEdge, KeypointIndexToInsertBefore);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4427)
inline HRESULT TGAssembly::_IPathAuto::InsertSpacePoint ( double XPos, double YPos, double ZPos, long KeypointIndexToInsertBefore ) {
    HRESULT _hr = raw_InsertSpacePoint(XPos, YPos, ZPos, KeypointIndexToInsertBefore);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4428)
inline IDispatchPtr TGAssembly::_IPathAuto::GetEndParentEdge ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_EndParentEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4429)
inline enum TGPart::KeypointEndConditionConstants TGAssembly::_IPathAuto::GetEndpointEndCondition ( ) {
    enum TGPart::KeypointEndConditionConstants _result;
    HRESULT _hr = get_EndpointEndCondition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4430)
inline double TGAssembly::_IPathAuto::GetEndpointMagnitude ( ) {
    double _result = 0;
    HRESULT _hr = get_EndpointMagnitude(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4431)
inline HRESULT TGAssembly::_IPathAuto::RemovePoint ( long KeypointIndex ) {
    HRESULT _hr = raw_RemovePoint(KeypointIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4432)
inline IDispatchPtr TGAssembly::_IPathAuto::GetStartParentEdge ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_StartParentEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4433)
inline enum TGPart::KeypointEndConditionConstants TGAssembly::_IPathAuto::GetStartpointEndCondition ( ) {
    enum TGPart::KeypointEndConditionConstants _result;
    HRESULT _hr = get_StartpointEndCondition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4434)
inline double TGAssembly::_IPathAuto::GetStartpointMagnitude ( ) {
    double _result = 0;
    HRESULT _hr = get_StartpointMagnitude(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4435)
inline HRESULT TGAssembly::_IPathAuto::GetAllPoints ( long * NumPoints, SAFEARRAY * * PointPositions ) {
    HRESULT _hr = raw_GetAllPoints(NumPoints, PointPositions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4436)
inline HRESULT TGAssembly::_IPathAuto::GetEndPoints ( SAFEARRAY * * EndPointPositions ) {
    HRESULT _hr = raw_GetEndPoints(EndPointPositions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4437)
inline HRESULT TGAssembly::_IPathAuto::GetLength ( double * PathLength ) {
    HRESULT _hr = raw_GetLength(PathLength);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4438)
inline HRESULT TGAssembly::_IPathAuto::SetFixedLength ( double dCurveLength, enum TGPart::SEFixedLengthConstraintDirection FixedLengthConstraintDirection, IDispatch * ConstraintGeometry ) {
    HRESULT _hr = raw_SetFixedLength(dCurveLength, FixedLengthConstraintDirection, ConstraintGeometry);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4439)
inline HRESULT TGAssembly::_IPathAuto::GetFixedLength ( double * pdCurveLength, enum TGPart::SEFixedLengthConstraintDirection * pFixedLengthConstraintDirection, IDispatch * * pConstraintGeometry ) {
    HRESULT _hr = raw_GetFixedLength(pdCurveLength, pFixedLengthConstraintDirection, pConstraintGeometry);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4440)
inline HRESULT TGAssembly::_IPathAuto::EditSpacePoint ( long KeypointIndexToEdit, double XPos, double YPos, double ZPos ) {
    HRESULT _hr = raw_EditSpacePoint(KeypointIndexToEdit, XPos, YPos, ZPos);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4441)
inline HRESULT TGAssembly::_IPathAuto::SplitPath ( double XPos, double YPos, double ZPos, IDispatch * * pNewPath ) {
    HRESULT _hr = raw_SplitPath(XPos, YPos, ZPos, pNewPath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Harnesses wrapper method implementations
//

#pragma implementation_key(4442)
inline TGFramework::ApplicationPtr TGAssembly::Harnesses::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4443)
inline IDispatchPtr TGAssembly::Harnesses::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4444)
inline long TGAssembly::Harnesses::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4445)
inline TGAssembly::HarnessPtr TGAssembly::Harnesses::Item ( const _variant_t & Index ) {
    struct Harness * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return HarnessPtr(_result, false);
}

#pragma implementation_key(4446)
inline TGAssembly::HarnessPtr TGAssembly::Harnesses::Add ( ) {
    struct Harness * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return HarnessPtr(_result, false);
}

#pragma implementation_key(4447)
inline HRESULT TGAssembly::Harnesses::CreateFromNetlistImporter ( _bstr_t CompanyName, _bstr_t ComponentFilePath, _bstr_t ConnectionFilePath, const _variant_t & vbSaveHarnessImportOnFailure ) {
    return _com_dispatch_method(this, 0x88, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x080c", (BSTR)CompanyName, (BSTR)ComponentFilePath, (BSTR)ConnectionFilePath, &vbSaveHarnessImportOnFailure);
}

//
// dispinterface Harness wrapper method implementations
//

#pragma implementation_key(4448)
inline TGFramework::ApplicationPtr TGAssembly::Harness::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4449)
inline IDispatchPtr TGAssembly::Harness::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4450)
inline TGAssembly::WiresPtr TGAssembly::Harness::GetWires ( ) {
    struct Wires * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return WiresPtr(_result, false);
}

#pragma implementation_key(4451)
inline TGAssembly::CablesPtr TGAssembly::Harness::GetCables ( ) {
    struct Cables * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CablesPtr(_result, false);
}

#pragma implementation_key(4452)
inline TGAssembly::BundlesPtr TGAssembly::Harness::GetBundles ( ) {
    struct Bundles * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BundlesPtr(_result, false);
}

#pragma implementation_key(4453)
inline TGAssembly::SplicesPtr TGAssembly::Harness::GetSplices ( ) {
    struct Splices * _result = 0;
    _com_dispatch_method(this, 0x93, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SplicesPtr(_result, false);
}

#pragma implementation_key(4454)
inline HRESULT TGAssembly::Harness::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x8c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumberOfConductors, ConductorArray);
}

#pragma implementation_key(4455)
inline HRESULT TGAssembly::Harness::SaveAsEcad ( enum HarnessSaveAsEcadStatusConstants * HarnessSaveAsEcadStatus, _bstr_t CompanyName, const _variant_t & ComponentFilePath, const _variant_t & ConnectionFilePath ) {
    return _com_dispatch_method(this, 0x90, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x0008\x080c\x080c", HarnessSaveAsEcadStatus, (BSTR)CompanyName, &ComponentFilePath, &ConnectionFilePath);
}

#pragma implementation_key(4456)
inline HRESULT TGAssembly::Harness::CreatePhysicalConductor ( ) {
    return _com_dispatch_method(this, 0x91, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4457)
inline HRESULT TGAssembly::Harness::DeletePhysicalConductor ( ) {
    return _com_dispatch_method(this, 0x92, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4458)
inline HRESULT TGAssembly::Harness::SaveAsHarnessTopology ( enum SaveAsHarnessTopologyStatusConstants * SaveAsHarnessTopologyStatus, const _variant_t & HarnessFilePath ) {
    return _com_dispatch_method(this, 0x98, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x000c", SaveAsHarnessTopologyStatus, &HarnessFilePath);
}

#pragma implementation_key(4459)
inline HRESULT TGAssembly::Harness::SaveAsHarnessTopologyEx ( enum SaveAsHarnessTopologyStatusConstants * SaveAsHarnessTopologyStatus, const _variant_t & HarnessFilePath, enum SaveAsHarnessFileFormats SaveAsHarnessFileFormat ) {
    return _com_dispatch_method(this, 0x99, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x000c\x0003", SaveAsHarnessTopologyStatus, &HarnessFilePath, SaveAsHarnessFileFormat);
}

//
// interface _IHarnessesAuto wrapper method implementations
//

#pragma implementation_key(4460)
inline TGFramework::ApplicationPtr TGAssembly::_IHarnessesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4461)
inline IDispatchPtr TGAssembly::_IHarnessesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4462)
inline long TGAssembly::_IHarnessesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4463)
inline IUnknownPtr TGAssembly::_IHarnessesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4464)
inline TGAssembly::HarnessPtr TGAssembly::_IHarnessesAuto::Item ( const _variant_t & Index ) {
    struct Harness * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return HarnessPtr(_result, false);
}

#pragma implementation_key(4465)
inline TGAssembly::HarnessPtr TGAssembly::_IHarnessesAuto::Add ( ) {
    struct Harness * _result = 0;
    HRESULT _hr = raw_Add(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return HarnessPtr(_result, false);
}

#pragma implementation_key(4466)
inline HRESULT TGAssembly::_IHarnessesAuto::CreateFromNetlistImporter ( _bstr_t CompanyName, _bstr_t ComponentFilePath, _bstr_t ConnectionFilePath, const _variant_t & vbSaveHarnessImportOnFailure ) {
    HRESULT _hr = raw_CreateFromNetlistImporter(CompanyName, ComponentFilePath, ConnectionFilePath, vbSaveHarnessImportOnFailure);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Wires wrapper method implementations
//

#pragma implementation_key(4467)
inline TGFramework::ApplicationPtr TGAssembly::Wires::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4468)
inline IDispatchPtr TGAssembly::Wires::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4469)
inline long TGAssembly::Wires::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4470)
inline TGAssembly::WirePtr TGAssembly::Wires::Item ( const _variant_t & Index ) {
    struct Wire * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return WirePtr(_result, false);
}

#pragma implementation_key(4471)
inline TGAssembly::WirePtr TGAssembly::Wires::Add ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, _bstr_t ConductorDescription ) {
    struct Wire * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x600b\x0008", NumberOfPaths, PathArray, PathDirectionArray, (BSTR)ConductorDescription);
    return WirePtr(_result, false);
}

#pragma implementation_key(4472)
inline enum TGAssembly::HarnessTypeConstants TGAssembly::Wires::GetType ( ) {
    enum HarnessTypeConstants _result;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface Wire wrapper method implementations
//

#pragma implementation_key(4473)
inline TGFramework::ApplicationPtr TGAssembly::Wire::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4474)
inline IDispatchPtr TGAssembly::Wire::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4475)
inline IDispatchPtr TGAssembly::Wire::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4476)
inline VARIANT_BOOL TGAssembly::Wire::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(4477)
inline VARIANT_BOOL TGAssembly::Wire::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x400a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4478)
inline void TGAssembly::Wire::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x400a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4479)
inline HRESULT TGAssembly::Wire::GetPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray ) {
    return _com_dispatch_method(this, 0x6f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009\x600b", NumberOfPaths, PathArray, PathDirectionArray);
}

#pragma implementation_key(4480)
inline HRESULT TGAssembly::Wire::GetAllPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray ) {
    return _com_dispatch_method(this, 0x8e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumberOfPaths, PathArray);
}

#pragma implementation_key(4481)
inline HRESULT TGAssembly::Wire::GetOuterConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x8b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumberOfConductors, ConductorArray);
}

#pragma implementation_key(4482)
inline HRESULT TGAssembly::Wire::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x8c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumberOfConductors, ConductorArray);
}

#pragma implementation_key(4483)
inline HRESULT TGAssembly::Wire::GetEndPoints ( double * dStartX, double * dStartY, double * dStartZ, double * dEndX, double * dEndY, double * dEndZ ) {
    return _com_dispatch_method(this, 0x8d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", dStartX, dStartY, dStartZ, dEndX, dEndY, dEndZ);
}

#pragma implementation_key(4484)
inline HRESULT TGAssembly::Wire::Remove ( long NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009", NumberOfConductors, ConductorArray);
}

#pragma implementation_key(4485)
inline HRESULT TGAssembly::Wire::Delete ( ) {
    return _com_dispatch_method(this, 0x8f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4486)
inline VARIANT_BOOL TGAssembly::Wire::GetUseGlobalAdders ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4487)
inline void TGAssembly::Wire::PutUseGlobalAdders ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4488)
inline HRESULT TGAssembly::Wire::GetAdders ( double * dSlackAdder, double * dPureAdder, double * dHoleDiameterAdder, double * dBundleDiameterAdder ) {
    return _com_dispatch_method(this, 0x72, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", dSlackAdder, dPureAdder, dHoleDiameterAdder, dBundleDiameterAdder);
}

#pragma implementation_key(4489)
inline HRESULT TGAssembly::Wire::SetAdders ( double dSlackAdder, double dPureAdder, double dHoleDiameterAdder, double dBundleDiameterAdder ) {
    return _com_dispatch_method(this, 0x73, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", dSlackAdder, dPureAdder, dHoleDiameterAdder, dBundleDiameterAdder);
}

#pragma implementation_key(4490)
inline double TGAssembly::Wire::GetTrueLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4491)
inline double TGAssembly::Wire::GetCutLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4492)
inline double TGAssembly::Wire::GetMass ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4493)
inline TGAssembly::AssemblyPropertyPtr TGAssembly::Wire::GetAssemblyProperty ( ) {
    struct AssemblyProperty * _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyPropertyPtr(_result, false);
}

#pragma implementation_key(4494)
inline enum TGAssembly::HarnessTypeConstants TGAssembly::Wire::GetType ( ) {
    enum HarnessTypeConstants _result;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4495)
inline void TGAssembly::Wire::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4496)
inline _bstr_t TGAssembly::Wire::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4497)
inline void TGAssembly::Wire::PutColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4498)
inline long TGAssembly::Wire::GetColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4499)
inline void TGAssembly::Wire::PutDescription ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4500)
inline _bstr_t TGAssembly::Wire::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4501)
inline void TGAssembly::Wire::PutOuterDiameter ( double _arg1 ) {
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4502)
inline double TGAssembly::Wire::GetOuterDiameter ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4503)
inline void TGAssembly::Wire::PutPartNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4504)
inline _bstr_t TGAssembly::Wire::GetPartNumber ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4505)
inline void TGAssembly::Wire::PutLinearDensity ( double _arg1 ) {
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4506)
inline double TGAssembly::Wire::GetLinearDensity ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4507)
inline void TGAssembly::Wire::PutMinimumBendRadius ( double _arg1 ) {
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4508)
inline double TGAssembly::Wire::GetMinimumBendRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4509)
inline HRESULT TGAssembly::Wire::CreatePhysicalConductor ( ) {
    return _com_dispatch_method(this, 0x91, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4510)
inline HRESULT TGAssembly::Wire::DeletePhysicalConductor ( ) {
    return _com_dispatch_method(this, 0x92, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4511)
inline void TGAssembly::Wire::PutDiameter ( double _arg1 ) {
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4512)
inline double TGAssembly::Wire::GetDiameter ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4513)
inline void TGAssembly::Wire::PutGage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4514)
inline _bstr_t TGAssembly::Wire::GetGage ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4515)
inline void TGAssembly::Wire::PutMaterialType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4516)
inline _bstr_t TGAssembly::Wire::GetMaterialType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4517)
inline void TGAssembly::Wire::PutMaterial ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4518)
inline _bstr_t TGAssembly::Wire::GetMaterial ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4519)
inline void TGAssembly::Wire::PutFromTerminalName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4520)
inline _bstr_t TGAssembly::Wire::GetFromTerminalName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4521)
inline void TGAssembly::Wire::PutToTerminalName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4522)
inline _bstr_t TGAssembly::Wire::GetToTerminalName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4523)
inline void TGAssembly::Wire::PutFromComponentName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4524)
inline _bstr_t TGAssembly::Wire::GetFromComponentName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4525)
inline void TGAssembly::Wire::PutToComponentName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4526)
inline _bstr_t TGAssembly::Wire::GetToComponentName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4527)
inline HRESULT TGAssembly::Wire::Edit ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray ) {
    return _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x600b", NumberOfPaths, PathArray, PathDirectionArray);
}

//
// interface _IWiresAuto wrapper method implementations
//

#pragma implementation_key(4528)
inline TGFramework::ApplicationPtr TGAssembly::_IWiresAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4529)
inline IDispatchPtr TGAssembly::_IWiresAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4530)
inline long TGAssembly::_IWiresAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4531)
inline IUnknownPtr TGAssembly::_IWiresAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4532)
inline TGAssembly::WirePtr TGAssembly::_IWiresAuto::Item ( const _variant_t & Index ) {
    struct Wire * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WirePtr(_result, false);
}

#pragma implementation_key(4533)
inline TGAssembly::WirePtr TGAssembly::_IWiresAuto::Add ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, _bstr_t ConductorDescription ) {
    struct Wire * _result = 0;
    HRESULT _hr = raw_Add(NumberOfPaths, PathArray, PathDirectionArray, ConductorDescription, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WirePtr(_result, false);
}

#pragma implementation_key(4534)
inline enum TGAssembly::HarnessTypeConstants TGAssembly::_IWiresAuto::GetType ( ) {
    enum HarnessTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IWireAuto wrapper method implementations
//

#pragma implementation_key(4535)
inline TGFramework::ApplicationPtr TGAssembly::_IWireAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4536)
inline IDispatchPtr TGAssembly::_IWireAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4537)
inline IDispatchPtr TGAssembly::_IWireAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4538)
inline VARIANT_BOOL TGAssembly::_IWireAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4539)
inline VARIANT_BOOL TGAssembly::_IWireAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4540)
inline void TGAssembly::_IWireAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4541)
inline HRESULT TGAssembly::_IWireAuto::GetPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray ) {
    HRESULT _hr = raw_GetPaths(NumberOfPaths, PathArray, PathDirectionArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4542)
inline HRESULT TGAssembly::_IWireAuto::GetAllPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray ) {
    HRESULT _hr = raw_GetAllPaths(NumberOfPaths, PathArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4543)
inline HRESULT TGAssembly::_IWireAuto::GetOuterConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_GetOuterConductors(NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4544)
inline HRESULT TGAssembly::_IWireAuto::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_GetTopMostConductors(NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4545)
inline HRESULT TGAssembly::_IWireAuto::GetEndPoints ( double * dStartX, double * dStartY, double * dStartZ, double * dEndX, double * dEndY, double * dEndZ ) {
    HRESULT _hr = raw_GetEndPoints(dStartX, dStartY, dStartZ, dEndX, dEndY, dEndZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4546)
inline HRESULT TGAssembly::_IWireAuto::Remove ( long NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_Remove(NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4547)
inline HRESULT TGAssembly::_IWireAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4548)
inline VARIANT_BOOL TGAssembly::_IWireAuto::GetUseGlobalAdders ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseGlobalAdders(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4549)
inline void TGAssembly::_IWireAuto::PutUseGlobalAdders ( VARIANT_BOOL UseGlobalAdders ) {
    HRESULT _hr = put_UseGlobalAdders(UseGlobalAdders);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4550)
inline HRESULT TGAssembly::_IWireAuto::GetAdders ( double * dSlackAdder, double * dPureAdder, double * dHoleDiameterAdder, double * dBundleDiameterAdder ) {
    HRESULT _hr = raw_GetAdders(dSlackAdder, dPureAdder, dHoleDiameterAdder, dBundleDiameterAdder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4551)
inline HRESULT TGAssembly::_IWireAuto::SetAdders ( double dSlackAdder, double dPureAdder, double dHoleDiameterAdder, double dBundleDiameterAdder ) {
    HRESULT _hr = raw_SetAdders(dSlackAdder, dPureAdder, dHoleDiameterAdder, dBundleDiameterAdder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4552)
inline double TGAssembly::_IWireAuto::GetTrueLength ( ) {
    double _result = 0;
    HRESULT _hr = get_TrueLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4553)
inline double TGAssembly::_IWireAuto::GetCutLength ( ) {
    double _result = 0;
    HRESULT _hr = get_CutLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4554)
inline double TGAssembly::_IWireAuto::GetMass ( ) {
    double _result = 0;
    HRESULT _hr = get_Mass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4555)
inline TGAssembly::AssemblyPropertyPtr TGAssembly::_IWireAuto::GetAssemblyProperty ( ) {
    struct AssemblyProperty * _result = 0;
    HRESULT _hr = get_AssemblyProperty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPropertyPtr(_result, false);
}

#pragma implementation_key(4556)
inline enum TGAssembly::HarnessTypeConstants TGAssembly::_IWireAuto::GetType ( ) {
    enum HarnessTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4557)
inline void TGAssembly::_IWireAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4558)
inline _bstr_t TGAssembly::_IWireAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4559)
inline void TGAssembly::_IWireAuto::PutColor ( long Color ) {
    HRESULT _hr = put_Color(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4560)
inline long TGAssembly::_IWireAuto::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4561)
inline void TGAssembly::_IWireAuto::PutDescription ( _bstr_t Description ) {
    HRESULT _hr = put_Description(Description);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4562)
inline _bstr_t TGAssembly::_IWireAuto::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4563)
inline void TGAssembly::_IWireAuto::PutOuterDiameter ( double OuterDiameter ) {
    HRESULT _hr = put_OuterDiameter(OuterDiameter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4564)
inline double TGAssembly::_IWireAuto::GetOuterDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_OuterDiameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4565)
inline void TGAssembly::_IWireAuto::PutPartNumber ( _bstr_t PartNumber ) {
    HRESULT _hr = put_PartNumber(PartNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4566)
inline _bstr_t TGAssembly::_IWireAuto::GetPartNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PartNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4567)
inline void TGAssembly::_IWireAuto::PutLinearDensity ( double LinearDensity ) {
    HRESULT _hr = put_LinearDensity(LinearDensity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4568)
inline double TGAssembly::_IWireAuto::GetLinearDensity ( ) {
    double _result = 0;
    HRESULT _hr = get_LinearDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4569)
inline void TGAssembly::_IWireAuto::PutMinimumBendRadius ( double MinimumBendRadius ) {
    HRESULT _hr = put_MinimumBendRadius(MinimumBendRadius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4570)
inline double TGAssembly::_IWireAuto::GetMinimumBendRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_MinimumBendRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4571)
inline HRESULT TGAssembly::_IWireAuto::CreatePhysicalConductor ( ) {
    HRESULT _hr = raw_CreatePhysicalConductor();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4572)
inline HRESULT TGAssembly::_IWireAuto::DeletePhysicalConductor ( ) {
    HRESULT _hr = raw_DeletePhysicalConductor();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4573)
inline void TGAssembly::_IWireAuto::PutDiameter ( double Diameter ) {
    HRESULT _hr = put_Diameter(Diameter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4574)
inline double TGAssembly::_IWireAuto::GetDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4575)
inline void TGAssembly::_IWireAuto::PutGage ( _bstr_t Gage ) {
    HRESULT _hr = put_Gage(Gage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4576)
inline _bstr_t TGAssembly::_IWireAuto::GetGage ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Gage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4577)
inline void TGAssembly::_IWireAuto::PutMaterialType ( _bstr_t MaterialType ) {
    HRESULT _hr = put_MaterialType(MaterialType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4578)
inline _bstr_t TGAssembly::_IWireAuto::GetMaterialType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MaterialType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4579)
inline void TGAssembly::_IWireAuto::PutMaterial ( _bstr_t Material ) {
    HRESULT _hr = put_Material(Material);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4580)
inline _bstr_t TGAssembly::_IWireAuto::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4581)
inline void TGAssembly::_IWireAuto::PutFromTerminalName ( _bstr_t Name ) {
    HRESULT _hr = put_FromTerminalName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4582)
inline _bstr_t TGAssembly::_IWireAuto::GetFromTerminalName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FromTerminalName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4583)
inline void TGAssembly::_IWireAuto::PutToTerminalName ( _bstr_t Name ) {
    HRESULT _hr = put_ToTerminalName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4584)
inline _bstr_t TGAssembly::_IWireAuto::GetToTerminalName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ToTerminalName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4585)
inline void TGAssembly::_IWireAuto::PutFromComponentName ( _bstr_t Name ) {
    HRESULT _hr = put_FromComponentName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4586)
inline _bstr_t TGAssembly::_IWireAuto::GetFromComponentName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FromComponentName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4587)
inline void TGAssembly::_IWireAuto::PutToComponentName ( _bstr_t Name ) {
    HRESULT _hr = put_ToComponentName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4588)
inline _bstr_t TGAssembly::_IWireAuto::GetToComponentName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ToComponentName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4589)
inline HRESULT TGAssembly::_IWireAuto::Edit ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray ) {
    HRESULT _hr = raw_Edit(NumberOfPaths, PathArray, PathDirectionArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Cables wrapper method implementations
//

#pragma implementation_key(4590)
inline TGFramework::ApplicationPtr TGAssembly::Cables::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4591)
inline IDispatchPtr TGAssembly::Cables::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4592)
inline long TGAssembly::Cables::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4593)
inline TGAssembly::CablePtr TGAssembly::Cables::Item ( const _variant_t & Index ) {
    struct Cable * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return CablePtr(_result, false);
}

#pragma implementation_key(4594)
inline TGAssembly::CablePtr TGAssembly::Cables::Add ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, long NumberOfWires, SAFEARRAY * * WireArray, SAFEARRAY * * SplitPathArray, SAFEARRAY * * SplitPathDirectionArray, _bstr_t ConductorDescription ) {
    struct Cable * _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x600b\x0003\x6009\x6009\x600b\x0008", NumberOfPaths, PathArray, PathDirectionArray, NumberOfWires, WireArray, SplitPathArray, SplitPathDirectionArray, (BSTR)ConductorDescription);
    return CablePtr(_result, false);
}

#pragma implementation_key(4595)
inline enum TGAssembly::HarnessTypeConstants TGAssembly::Cables::GetType ( ) {
    enum HarnessTypeConstants _result;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface Cable wrapper method implementations
//

#pragma implementation_key(4596)
inline TGFramework::ApplicationPtr TGAssembly::Cable::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4597)
inline IDispatchPtr TGAssembly::Cable::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4598)
inline IDispatchPtr TGAssembly::Cable::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4599)
inline VARIANT_BOOL TGAssembly::Cable::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(4600)
inline VARIANT_BOOL TGAssembly::Cable::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x400a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4601)
inline void TGAssembly::Cable::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x400a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4602)
inline HRESULT TGAssembly::Cable::GetPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray ) {
    return _com_dispatch_method(this, 0x6f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009\x600b", NumberOfPaths, PathArray, PathDirectionArray);
}

#pragma implementation_key(4603)
inline HRESULT TGAssembly::Cable::GetAllPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray ) {
    return _com_dispatch_method(this, 0x8e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumberOfPaths, PathArray);
}

#pragma implementation_key(4604)
inline HRESULT TGAssembly::Cable::GetOuterConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x8b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumberOfConductors, ConductorArray);
}

#pragma implementation_key(4605)
inline HRESULT TGAssembly::Cable::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x8c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumberOfConductors, ConductorArray);
}

#pragma implementation_key(4606)
inline HRESULT TGAssembly::Cable::GetEndPoints ( double * dStartX, double * dStartY, double * dStartZ, double * dEndX, double * dEndY, double * dEndZ ) {
    return _com_dispatch_method(this, 0x8d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", dStartX, dStartY, dStartZ, dEndX, dEndY, dEndZ);
}

#pragma implementation_key(4607)
inline HRESULT TGAssembly::Cable::Remove ( long NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009", NumberOfConductors, ConductorArray);
}

#pragma implementation_key(4608)
inline HRESULT TGAssembly::Cable::Delete ( ) {
    return _com_dispatch_method(this, 0x8f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4609)
inline VARIANT_BOOL TGAssembly::Cable::GetUseGlobalAdders ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4610)
inline void TGAssembly::Cable::PutUseGlobalAdders ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4611)
inline HRESULT TGAssembly::Cable::GetAdders ( double * dSlackAdder, double * dPureAdder, double * dHoleDiameterAdder, double * dBundleDiameterAdder ) {
    return _com_dispatch_method(this, 0x72, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", dSlackAdder, dPureAdder, dHoleDiameterAdder, dBundleDiameterAdder);
}

#pragma implementation_key(4612)
inline HRESULT TGAssembly::Cable::SetAdders ( double dSlackAdder, double dPureAdder, double dHoleDiameterAdder, double dBundleDiameterAdder ) {
    return _com_dispatch_method(this, 0x73, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", dSlackAdder, dPureAdder, dHoleDiameterAdder, dBundleDiameterAdder);
}

#pragma implementation_key(4613)
inline double TGAssembly::Cable::GetTrueLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4614)
inline double TGAssembly::Cable::GetCutLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4615)
inline double TGAssembly::Cable::GetMass ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4616)
inline TGAssembly::AssemblyPropertyPtr TGAssembly::Cable::GetAssemblyProperty ( ) {
    struct AssemblyProperty * _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyPropertyPtr(_result, false);
}

#pragma implementation_key(4617)
inline enum TGAssembly::HarnessTypeConstants TGAssembly::Cable::GetType ( ) {
    enum HarnessTypeConstants _result;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4618)
inline void TGAssembly::Cable::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4619)
inline _bstr_t TGAssembly::Cable::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4620)
inline void TGAssembly::Cable::PutColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4621)
inline long TGAssembly::Cable::GetColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4622)
inline void TGAssembly::Cable::PutDescription ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4623)
inline _bstr_t TGAssembly::Cable::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4624)
inline void TGAssembly::Cable::PutOuterDiameter ( double _arg1 ) {
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4625)
inline double TGAssembly::Cable::GetOuterDiameter ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4626)
inline void TGAssembly::Cable::PutPartNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4627)
inline _bstr_t TGAssembly::Cable::GetPartNumber ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4628)
inline void TGAssembly::Cable::PutLinearDensity ( double _arg1 ) {
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4629)
inline double TGAssembly::Cable::GetLinearDensity ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4630)
inline void TGAssembly::Cable::PutMinimumBendRadius ( double _arg1 ) {
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4631)
inline double TGAssembly::Cable::GetMinimumBendRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4632)
inline HRESULT TGAssembly::Cable::CreatePhysicalConductor ( ) {
    return _com_dispatch_method(this, 0x91, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4633)
inline HRESULT TGAssembly::Cable::DeletePhysicalConductor ( ) {
    return _com_dispatch_method(this, 0x92, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4634)
inline void TGAssembly::Cable::PutDiameter ( double _arg1 ) {
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4635)
inline double TGAssembly::Cable::GetDiameter ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4636)
inline void TGAssembly::Cable::PutGage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4637)
inline _bstr_t TGAssembly::Cable::GetGage ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4638)
inline void TGAssembly::Cable::PutNumberOfConductors ( long _arg1 ) {
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4639)
inline long TGAssembly::Cable::GetNumberOfConductors ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4640)
inline void TGAssembly::Cable::PutMaterialType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4641)
inline _bstr_t TGAssembly::Cable::GetMaterialType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4642)
inline void TGAssembly::Cable::PutMaterial ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4643)
inline _bstr_t TGAssembly::Cable::GetMaterial ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4644)
inline void TGAssembly::Cable::PutFromTerminalName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4645)
inline _bstr_t TGAssembly::Cable::GetFromTerminalName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4646)
inline void TGAssembly::Cable::PutToTerminalName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4647)
inline _bstr_t TGAssembly::Cable::GetToTerminalName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4648)
inline void TGAssembly::Cable::PutFromComponentName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4649)
inline _bstr_t TGAssembly::Cable::GetFromComponentName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4650)
inline void TGAssembly::Cable::PutToComponentName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4651)
inline _bstr_t TGAssembly::Cable::GetToComponentName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4652)
inline HRESULT TGAssembly::Cable::GetWires ( long * NumberOfWires, SAFEARRAY * * WireArray ) {
    return _com_dispatch_method(this, 0x8a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumberOfWires, WireArray);
}

#pragma implementation_key(4653)
inline HRESULT TGAssembly::Cable::Edit ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, long NumberOfWires, SAFEARRAY * * WireArray, SAFEARRAY * * SplitPathArray, SAFEARRAY * * SplitPathDirectionArray ) {
    return _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x600b\x0003\x6009\x6009\x600b", NumberOfPaths, PathArray, PathDirectionArray, NumberOfWires, WireArray, SplitPathArray, SplitPathDirectionArray);
}

//
// interface _ICablesAuto wrapper method implementations
//

#pragma implementation_key(4654)
inline TGFramework::ApplicationPtr TGAssembly::_ICablesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4655)
inline IDispatchPtr TGAssembly::_ICablesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4656)
inline long TGAssembly::_ICablesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4657)
inline IUnknownPtr TGAssembly::_ICablesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4658)
inline TGAssembly::CablePtr TGAssembly::_ICablesAuto::Item ( const _variant_t & Index ) {
    struct Cable * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CablePtr(_result, false);
}

#pragma implementation_key(4659)
inline TGAssembly::CablePtr TGAssembly::_ICablesAuto::Add ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, long NumberOfWires, SAFEARRAY * * WireArray, SAFEARRAY * * SplitPathArray, SAFEARRAY * * SplitPathDirectionArray, _bstr_t ConductorDescription ) {
    struct Cable * _result = 0;
    HRESULT _hr = raw_Add(NumberOfPaths, PathArray, PathDirectionArray, NumberOfWires, WireArray, SplitPathArray, SplitPathDirectionArray, ConductorDescription, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CablePtr(_result, false);
}

#pragma implementation_key(4660)
inline enum TGAssembly::HarnessTypeConstants TGAssembly::_ICablesAuto::GetType ( ) {
    enum HarnessTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _ICableAuto wrapper method implementations
//

#pragma implementation_key(4661)
inline TGFramework::ApplicationPtr TGAssembly::_ICableAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4662)
inline IDispatchPtr TGAssembly::_ICableAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4663)
inline IDispatchPtr TGAssembly::_ICableAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4664)
inline VARIANT_BOOL TGAssembly::_ICableAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4665)
inline VARIANT_BOOL TGAssembly::_ICableAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4666)
inline void TGAssembly::_ICableAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4667)
inline HRESULT TGAssembly::_ICableAuto::GetPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray ) {
    HRESULT _hr = raw_GetPaths(NumberOfPaths, PathArray, PathDirectionArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4668)
inline HRESULT TGAssembly::_ICableAuto::GetAllPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray ) {
    HRESULT _hr = raw_GetAllPaths(NumberOfPaths, PathArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4669)
inline HRESULT TGAssembly::_ICableAuto::GetOuterConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_GetOuterConductors(NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4670)
inline HRESULT TGAssembly::_ICableAuto::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_GetTopMostConductors(NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4671)
inline HRESULT TGAssembly::_ICableAuto::GetEndPoints ( double * dStartX, double * dStartY, double * dStartZ, double * dEndX, double * dEndY, double * dEndZ ) {
    HRESULT _hr = raw_GetEndPoints(dStartX, dStartY, dStartZ, dEndX, dEndY, dEndZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4672)
inline HRESULT TGAssembly::_ICableAuto::Remove ( long NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_Remove(NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4673)
inline HRESULT TGAssembly::_ICableAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4674)
inline VARIANT_BOOL TGAssembly::_ICableAuto::GetUseGlobalAdders ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseGlobalAdders(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4675)
inline void TGAssembly::_ICableAuto::PutUseGlobalAdders ( VARIANT_BOOL UseGlobalAdders ) {
    HRESULT _hr = put_UseGlobalAdders(UseGlobalAdders);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4676)
inline HRESULT TGAssembly::_ICableAuto::GetAdders ( double * dSlackAdder, double * dPureAdder, double * dHoleDiameterAdder, double * dBundleDiameterAdder ) {
    HRESULT _hr = raw_GetAdders(dSlackAdder, dPureAdder, dHoleDiameterAdder, dBundleDiameterAdder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4677)
inline HRESULT TGAssembly::_ICableAuto::SetAdders ( double dSlackAdder, double dPureAdder, double dHoleDiameterAdder, double dBundleDiameterAdder ) {
    HRESULT _hr = raw_SetAdders(dSlackAdder, dPureAdder, dHoleDiameterAdder, dBundleDiameterAdder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4678)
inline double TGAssembly::_ICableAuto::GetTrueLength ( ) {
    double _result = 0;
    HRESULT _hr = get_TrueLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4679)
inline double TGAssembly::_ICableAuto::GetCutLength ( ) {
    double _result = 0;
    HRESULT _hr = get_CutLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4680)
inline double TGAssembly::_ICableAuto::GetMass ( ) {
    double _result = 0;
    HRESULT _hr = get_Mass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4681)
inline TGAssembly::AssemblyPropertyPtr TGAssembly::_ICableAuto::GetAssemblyProperty ( ) {
    struct AssemblyProperty * _result = 0;
    HRESULT _hr = get_AssemblyProperty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPropertyPtr(_result, false);
}

#pragma implementation_key(4682)
inline enum TGAssembly::HarnessTypeConstants TGAssembly::_ICableAuto::GetType ( ) {
    enum HarnessTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4683)
inline void TGAssembly::_ICableAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4684)
inline _bstr_t TGAssembly::_ICableAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4685)
inline void TGAssembly::_ICableAuto::PutColor ( long Color ) {
    HRESULT _hr = put_Color(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4686)
inline long TGAssembly::_ICableAuto::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4687)
inline void TGAssembly::_ICableAuto::PutDescription ( _bstr_t Description ) {
    HRESULT _hr = put_Description(Description);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4688)
inline _bstr_t TGAssembly::_ICableAuto::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4689)
inline void TGAssembly::_ICableAuto::PutOuterDiameter ( double OuterDiameter ) {
    HRESULT _hr = put_OuterDiameter(OuterDiameter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4690)
inline double TGAssembly::_ICableAuto::GetOuterDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_OuterDiameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4691)
inline void TGAssembly::_ICableAuto::PutPartNumber ( _bstr_t PartNumber ) {
    HRESULT _hr = put_PartNumber(PartNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4692)
inline _bstr_t TGAssembly::_ICableAuto::GetPartNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PartNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4693)
inline void TGAssembly::_ICableAuto::PutLinearDensity ( double LinearDensity ) {
    HRESULT _hr = put_LinearDensity(LinearDensity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4694)
inline double TGAssembly::_ICableAuto::GetLinearDensity ( ) {
    double _result = 0;
    HRESULT _hr = get_LinearDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4695)
inline void TGAssembly::_ICableAuto::PutMinimumBendRadius ( double MinimumBendRadius ) {
    HRESULT _hr = put_MinimumBendRadius(MinimumBendRadius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4696)
inline double TGAssembly::_ICableAuto::GetMinimumBendRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_MinimumBendRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4697)
inline HRESULT TGAssembly::_ICableAuto::CreatePhysicalConductor ( ) {
    HRESULT _hr = raw_CreatePhysicalConductor();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4698)
inline HRESULT TGAssembly::_ICableAuto::DeletePhysicalConductor ( ) {
    HRESULT _hr = raw_DeletePhysicalConductor();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4699)
inline void TGAssembly::_ICableAuto::PutDiameter ( double Diameter ) {
    HRESULT _hr = put_Diameter(Diameter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4700)
inline double TGAssembly::_ICableAuto::GetDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4701)
inline void TGAssembly::_ICableAuto::PutGage ( _bstr_t Gage ) {
    HRESULT _hr = put_Gage(Gage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4702)
inline _bstr_t TGAssembly::_ICableAuto::GetGage ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Gage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4703)
inline void TGAssembly::_ICableAuto::PutNumberOfConductors ( long NumberOfConductors ) {
    HRESULT _hr = put_NumberOfConductors(NumberOfConductors);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4704)
inline long TGAssembly::_ICableAuto::GetNumberOfConductors ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfConductors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4705)
inline void TGAssembly::_ICableAuto::PutMaterialType ( _bstr_t MaterialType ) {
    HRESULT _hr = put_MaterialType(MaterialType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4706)
inline _bstr_t TGAssembly::_ICableAuto::GetMaterialType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MaterialType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4707)
inline void TGAssembly::_ICableAuto::PutMaterial ( _bstr_t Material ) {
    HRESULT _hr = put_Material(Material);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4708)
inline _bstr_t TGAssembly::_ICableAuto::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4709)
inline void TGAssembly::_ICableAuto::PutFromTerminalName ( _bstr_t Name ) {
    HRESULT _hr = put_FromTerminalName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4710)
inline _bstr_t TGAssembly::_ICableAuto::GetFromTerminalName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FromTerminalName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4711)
inline void TGAssembly::_ICableAuto::PutToTerminalName ( _bstr_t Name ) {
    HRESULT _hr = put_ToTerminalName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4712)
inline _bstr_t TGAssembly::_ICableAuto::GetToTerminalName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ToTerminalName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4713)
inline void TGAssembly::_ICableAuto::PutFromComponentName ( _bstr_t Name ) {
    HRESULT _hr = put_FromComponentName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4714)
inline _bstr_t TGAssembly::_ICableAuto::GetFromComponentName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FromComponentName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4715)
inline void TGAssembly::_ICableAuto::PutToComponentName ( _bstr_t Name ) {
    HRESULT _hr = put_ToComponentName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4716)
inline _bstr_t TGAssembly::_ICableAuto::GetToComponentName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ToComponentName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4717)
inline HRESULT TGAssembly::_ICableAuto::GetWires ( long * NumberOfWires, SAFEARRAY * * WireArray ) {
    HRESULT _hr = raw_GetWires(NumberOfWires, WireArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4718)
inline HRESULT TGAssembly::_ICableAuto::Edit ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, long NumberOfWires, SAFEARRAY * * WireArray, SAFEARRAY * * SplitPathArray, SAFEARRAY * * SplitPathDirectionArray ) {
    HRESULT _hr = raw_Edit(NumberOfPaths, PathArray, PathDirectionArray, NumberOfWires, WireArray, SplitPathArray, SplitPathDirectionArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Bundles wrapper method implementations
//

#pragma implementation_key(4719)
inline TGFramework::ApplicationPtr TGAssembly::Bundles::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4720)
inline IDispatchPtr TGAssembly::Bundles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4721)
inline long TGAssembly::Bundles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4722)
inline TGAssembly::BundlePtr TGAssembly::Bundles::Item ( const _variant_t & Index ) {
    struct Bundle * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return BundlePtr(_result, false);
}

#pragma implementation_key(4723)
inline TGAssembly::BundlePtr TGAssembly::Bundles::Add ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, long NumberOfConductors, SAFEARRAY * * ConductorArray, SAFEARRAY * * SplitPathArray, SAFEARRAY * * SplitPathDirectionArray, _bstr_t ConductorDescription ) {
    struct Bundle * _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x600b\x0003\x6009\x6009\x600b\x0008", NumberOfPaths, PathArray, PathDirectionArray, NumberOfConductors, ConductorArray, SplitPathArray, SplitPathDirectionArray, (BSTR)ConductorDescription);
    return BundlePtr(_result, false);
}

#pragma implementation_key(4724)
inline enum TGAssembly::HarnessTypeConstants TGAssembly::Bundles::GetType ( ) {
    enum HarnessTypeConstants _result;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface Bundle wrapper method implementations
//

#pragma implementation_key(4725)
inline TGFramework::ApplicationPtr TGAssembly::Bundle::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4726)
inline IDispatchPtr TGAssembly::Bundle::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4727)
inline IDispatchPtr TGAssembly::Bundle::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4728)
inline VARIANT_BOOL TGAssembly::Bundle::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(4729)
inline VARIANT_BOOL TGAssembly::Bundle::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x400a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4730)
inline void TGAssembly::Bundle::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x400a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4731)
inline HRESULT TGAssembly::Bundle::GetPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray ) {
    return _com_dispatch_method(this, 0x6f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009\x600b", NumberOfPaths, PathArray, PathDirectionArray);
}

#pragma implementation_key(4732)
inline HRESULT TGAssembly::Bundle::GetAllPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray ) {
    return _com_dispatch_method(this, 0x8e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumberOfPaths, PathArray);
}

#pragma implementation_key(4733)
inline HRESULT TGAssembly::Bundle::GetOuterConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x8b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumberOfConductors, ConductorArray);
}

#pragma implementation_key(4734)
inline HRESULT TGAssembly::Bundle::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x8c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumberOfConductors, ConductorArray);
}

#pragma implementation_key(4735)
inline HRESULT TGAssembly::Bundle::GetEndPoints ( double * dStartX, double * dStartY, double * dStartZ, double * dEndX, double * dEndY, double * dEndZ ) {
    return _com_dispatch_method(this, 0x8d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", dStartX, dStartY, dStartZ, dEndX, dEndY, dEndZ);
}

#pragma implementation_key(4736)
inline HRESULT TGAssembly::Bundle::Remove ( long NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009", NumberOfConductors, ConductorArray);
}

#pragma implementation_key(4737)
inline HRESULT TGAssembly::Bundle::Delete ( ) {
    return _com_dispatch_method(this, 0x8f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4738)
inline VARIANT_BOOL TGAssembly::Bundle::GetUseGlobalAdders ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4739)
inline void TGAssembly::Bundle::PutUseGlobalAdders ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4740)
inline HRESULT TGAssembly::Bundle::GetAdders ( double * dSlackAdder, double * dPureAdder, double * dHoleDiameterAdder, double * dBundleDiameterAdder ) {
    return _com_dispatch_method(this, 0x72, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", dSlackAdder, dPureAdder, dHoleDiameterAdder, dBundleDiameterAdder);
}

#pragma implementation_key(4741)
inline HRESULT TGAssembly::Bundle::SetAdders ( double dSlackAdder, double dPureAdder, double dHoleDiameterAdder, double dBundleDiameterAdder ) {
    return _com_dispatch_method(this, 0x73, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", dSlackAdder, dPureAdder, dHoleDiameterAdder, dBundleDiameterAdder);
}

#pragma implementation_key(4742)
inline double TGAssembly::Bundle::GetTrueLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4743)
inline double TGAssembly::Bundle::GetCutLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4744)
inline double TGAssembly::Bundle::GetMass ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4745)
inline TGAssembly::AssemblyPropertyPtr TGAssembly::Bundle::GetAssemblyProperty ( ) {
    struct AssemblyProperty * _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyPropertyPtr(_result, false);
}

#pragma implementation_key(4746)
inline enum TGAssembly::HarnessTypeConstants TGAssembly::Bundle::GetType ( ) {
    enum HarnessTypeConstants _result;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4747)
inline void TGAssembly::Bundle::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4748)
inline _bstr_t TGAssembly::Bundle::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4749)
inline void TGAssembly::Bundle::PutColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4750)
inline long TGAssembly::Bundle::GetColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4751)
inline void TGAssembly::Bundle::PutDescription ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4752)
inline _bstr_t TGAssembly::Bundle::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4753)
inline void TGAssembly::Bundle::PutOuterDiameter ( double _arg1 ) {
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4754)
inline double TGAssembly::Bundle::GetOuterDiameter ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4755)
inline void TGAssembly::Bundle::PutPartNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4756)
inline _bstr_t TGAssembly::Bundle::GetPartNumber ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4757)
inline void TGAssembly::Bundle::PutLinearDensity ( double _arg1 ) {
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4758)
inline double TGAssembly::Bundle::GetLinearDensity ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4759)
inline void TGAssembly::Bundle::PutMinimumBendRadius ( double _arg1 ) {
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4760)
inline double TGAssembly::Bundle::GetMinimumBendRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4761)
inline HRESULT TGAssembly::Bundle::CreatePhysicalConductor ( ) {
    return _com_dispatch_method(this, 0x91, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4762)
inline HRESULT TGAssembly::Bundle::DeletePhysicalConductor ( ) {
    return _com_dispatch_method(this, 0x92, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4763)
inline HRESULT TGAssembly::Bundle::GetConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x6b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumberOfConductors, ConductorArray);
}

#pragma implementation_key(4764)
inline HRESULT TGAssembly::Bundle::Edit ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, long NumberOfConductors, SAFEARRAY * * ConductorArray, SAFEARRAY * * SplitPathArray, SAFEARRAY * * SplitPathDirectionArray ) {
    return _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x600b\x0003\x6009\x6009\x600b", NumberOfPaths, PathArray, PathDirectionArray, NumberOfConductors, ConductorArray, SplitPathArray, SplitPathDirectionArray);
}

//
// interface _IBundlesAuto wrapper method implementations
//

#pragma implementation_key(4765)
inline TGFramework::ApplicationPtr TGAssembly::_IBundlesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4766)
inline IDispatchPtr TGAssembly::_IBundlesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4767)
inline long TGAssembly::_IBundlesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4768)
inline IUnknownPtr TGAssembly::_IBundlesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4769)
inline TGAssembly::BundlePtr TGAssembly::_IBundlesAuto::Item ( const _variant_t & Index ) {
    struct Bundle * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BundlePtr(_result, false);
}

#pragma implementation_key(4770)
inline TGAssembly::BundlePtr TGAssembly::_IBundlesAuto::Add ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, long NumberOfConductors, SAFEARRAY * * ConductorArray, SAFEARRAY * * SplitPathArray, SAFEARRAY * * SplitPathDirectionArray, _bstr_t ConductorDescription ) {
    struct Bundle * _result = 0;
    HRESULT _hr = raw_Add(NumberOfPaths, PathArray, PathDirectionArray, NumberOfConductors, ConductorArray, SplitPathArray, SplitPathDirectionArray, ConductorDescription, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BundlePtr(_result, false);
}

#pragma implementation_key(4771)
inline enum TGAssembly::HarnessTypeConstants TGAssembly::_IBundlesAuto::GetType ( ) {
    enum HarnessTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IBundleAuto wrapper method implementations
//

#pragma implementation_key(4772)
inline TGFramework::ApplicationPtr TGAssembly::_IBundleAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4773)
inline IDispatchPtr TGAssembly::_IBundleAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4774)
inline IDispatchPtr TGAssembly::_IBundleAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4775)
inline VARIANT_BOOL TGAssembly::_IBundleAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4776)
inline VARIANT_BOOL TGAssembly::_IBundleAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4777)
inline void TGAssembly::_IBundleAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4778)
inline HRESULT TGAssembly::_IBundleAuto::GetPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray ) {
    HRESULT _hr = raw_GetPaths(NumberOfPaths, PathArray, PathDirectionArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4779)
inline HRESULT TGAssembly::_IBundleAuto::GetAllPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray ) {
    HRESULT _hr = raw_GetAllPaths(NumberOfPaths, PathArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4780)
inline HRESULT TGAssembly::_IBundleAuto::GetOuterConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_GetOuterConductors(NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4781)
inline HRESULT TGAssembly::_IBundleAuto::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_GetTopMostConductors(NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4782)
inline HRESULT TGAssembly::_IBundleAuto::GetEndPoints ( double * dStartX, double * dStartY, double * dStartZ, double * dEndX, double * dEndY, double * dEndZ ) {
    HRESULT _hr = raw_GetEndPoints(dStartX, dStartY, dStartZ, dEndX, dEndY, dEndZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4783)
inline HRESULT TGAssembly::_IBundleAuto::Remove ( long NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_Remove(NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4784)
inline HRESULT TGAssembly::_IBundleAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4785)
inline VARIANT_BOOL TGAssembly::_IBundleAuto::GetUseGlobalAdders ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseGlobalAdders(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4786)
inline void TGAssembly::_IBundleAuto::PutUseGlobalAdders ( VARIANT_BOOL UseGlobalAdders ) {
    HRESULT _hr = put_UseGlobalAdders(UseGlobalAdders);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4787)
inline HRESULT TGAssembly::_IBundleAuto::GetAdders ( double * dSlackAdder, double * dPureAdder, double * dHoleDiameterAdder, double * dBundleDiameterAdder ) {
    HRESULT _hr = raw_GetAdders(dSlackAdder, dPureAdder, dHoleDiameterAdder, dBundleDiameterAdder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4788)
inline HRESULT TGAssembly::_IBundleAuto::SetAdders ( double dSlackAdder, double dPureAdder, double dHoleDiameterAdder, double dBundleDiameterAdder ) {
    HRESULT _hr = raw_SetAdders(dSlackAdder, dPureAdder, dHoleDiameterAdder, dBundleDiameterAdder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4789)
inline double TGAssembly::_IBundleAuto::GetTrueLength ( ) {
    double _result = 0;
    HRESULT _hr = get_TrueLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4790)
inline double TGAssembly::_IBundleAuto::GetCutLength ( ) {
    double _result = 0;
    HRESULT _hr = get_CutLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4791)
inline double TGAssembly::_IBundleAuto::GetMass ( ) {
    double _result = 0;
    HRESULT _hr = get_Mass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4792)
inline TGAssembly::AssemblyPropertyPtr TGAssembly::_IBundleAuto::GetAssemblyProperty ( ) {
    struct AssemblyProperty * _result = 0;
    HRESULT _hr = get_AssemblyProperty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPropertyPtr(_result, false);
}

#pragma implementation_key(4793)
inline enum TGAssembly::HarnessTypeConstants TGAssembly::_IBundleAuto::GetType ( ) {
    enum HarnessTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4794)
inline void TGAssembly::_IBundleAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4795)
inline _bstr_t TGAssembly::_IBundleAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4796)
inline void TGAssembly::_IBundleAuto::PutColor ( long Color ) {
    HRESULT _hr = put_Color(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4797)
inline long TGAssembly::_IBundleAuto::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4798)
inline void TGAssembly::_IBundleAuto::PutDescription ( _bstr_t Description ) {
    HRESULT _hr = put_Description(Description);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4799)
inline _bstr_t TGAssembly::_IBundleAuto::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4800)
inline void TGAssembly::_IBundleAuto::PutOuterDiameter ( double OuterDiameter ) {
    HRESULT _hr = put_OuterDiameter(OuterDiameter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4801)
inline double TGAssembly::_IBundleAuto::GetOuterDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_OuterDiameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4802)
inline void TGAssembly::_IBundleAuto::PutPartNumber ( _bstr_t PartNumber ) {
    HRESULT _hr = put_PartNumber(PartNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4803)
inline _bstr_t TGAssembly::_IBundleAuto::GetPartNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PartNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4804)
inline void TGAssembly::_IBundleAuto::PutLinearDensity ( double LinearDensity ) {
    HRESULT _hr = put_LinearDensity(LinearDensity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4805)
inline double TGAssembly::_IBundleAuto::GetLinearDensity ( ) {
    double _result = 0;
    HRESULT _hr = get_LinearDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4806)
inline void TGAssembly::_IBundleAuto::PutMinimumBendRadius ( double MinimumBendRadius ) {
    HRESULT _hr = put_MinimumBendRadius(MinimumBendRadius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4807)
inline double TGAssembly::_IBundleAuto::GetMinimumBendRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_MinimumBendRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4808)
inline HRESULT TGAssembly::_IBundleAuto::CreatePhysicalConductor ( ) {
    HRESULT _hr = raw_CreatePhysicalConductor();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4809)
inline HRESULT TGAssembly::_IBundleAuto::DeletePhysicalConductor ( ) {
    HRESULT _hr = raw_DeletePhysicalConductor();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4810)
inline HRESULT TGAssembly::_IBundleAuto::GetConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_GetConductors(NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4811)
inline HRESULT TGAssembly::_IBundleAuto::Edit ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, long NumberOfConductors, SAFEARRAY * * ConductorArray, SAFEARRAY * * SplitPathArray, SAFEARRAY * * SplitPathDirectionArray ) {
    HRESULT _hr = raw_Edit(NumberOfPaths, PathArray, PathDirectionArray, NumberOfConductors, ConductorArray, SplitPathArray, SplitPathDirectionArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Splices wrapper method implementations
//

#pragma implementation_key(4812)
inline TGFramework::ApplicationPtr TGAssembly::Splices::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4813)
inline IDispatchPtr TGAssembly::Splices::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4814)
inline long TGAssembly::Splices::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4815)
inline TGAssembly::SplicePtr TGAssembly::Splices::Item ( const _variant_t & Index ) {
    struct Splice * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return SplicePtr(_result, false);
}

#pragma implementation_key(4816)
inline TGAssembly::SplicePtr TGAssembly::Splices::Add ( double dSpliceX, double dSpliceY, double dSpliceZ, long NumberOfConductors, SAFEARRAY * * ConductorArray, _bstr_t ConductorDescription ) {
    struct Splice * _result = 0;
    _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0003\x6009\x0008", dSpliceX, dSpliceY, dSpliceZ, NumberOfConductors, ConductorArray, (BSTR)ConductorDescription);
    return SplicePtr(_result, false);
}

#pragma implementation_key(4817)
inline enum TGAssembly::HarnessTypeConstants TGAssembly::Splices::GetType ( ) {
    enum HarnessTypeConstants _result;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface Splice wrapper method implementations
//

#pragma implementation_key(4818)
inline TGFramework::ApplicationPtr TGAssembly::Splice::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4819)
inline IDispatchPtr TGAssembly::Splice::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4820)
inline IDispatchPtr TGAssembly::Splice::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4821)
inline VARIANT_BOOL TGAssembly::Splice::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(4822)
inline VARIANT_BOOL TGAssembly::Splice::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x400a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4823)
inline void TGAssembly::Splice::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x400a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4824)
inline void TGAssembly::Splice::PutGage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4825)
inline _bstr_t TGAssembly::Splice::GetGage ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4826)
inline void TGAssembly::Splice::PutMaterialType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4827)
inline _bstr_t TGAssembly::Splice::GetMaterialType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4828)
inline void TGAssembly::Splice::PutMaterial ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4829)
inline _bstr_t TGAssembly::Splice::GetMaterial ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4830)
inline HRESULT TGAssembly::Splice::GetOuterConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x8b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumberOfConductors, ConductorArray);
}

#pragma implementation_key(4831)
inline HRESULT TGAssembly::Splice::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x8c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumberOfConductors, ConductorArray);
}

#pragma implementation_key(4832)
inline HRESULT TGAssembly::Splice::Remove ( long NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009", NumberOfConductors, ConductorArray);
}

#pragma implementation_key(4833)
inline HRESULT TGAssembly::Splice::Delete ( ) {
    return _com_dispatch_method(this, 0x8f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4834)
inline TGAssembly::AssemblyPropertyPtr TGAssembly::Splice::GetAssemblyProperty ( ) {
    struct AssemblyProperty * _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AssemblyPropertyPtr(_result, false);
}

#pragma implementation_key(4835)
inline enum TGAssembly::HarnessTypeConstants TGAssembly::Splice::GetType ( ) {
    enum HarnessTypeConstants _result;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4836)
inline void TGAssembly::Splice::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4837)
inline _bstr_t TGAssembly::Splice::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4838)
inline void TGAssembly::Splice::PutColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4839)
inline long TGAssembly::Splice::GetColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4840)
inline void TGAssembly::Splice::PutDescription ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4841)
inline _bstr_t TGAssembly::Splice::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4842)
inline void TGAssembly::Splice::PutOuterDiameter ( double _arg1 ) {
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4843)
inline double TGAssembly::Splice::GetOuterDiameter ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4844)
inline void TGAssembly::Splice::PutPartNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4845)
inline _bstr_t TGAssembly::Splice::GetPartNumber ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4846)
inline HRESULT TGAssembly::Splice::CreatePhysicalConductor ( ) {
    return _com_dispatch_method(this, 0x91, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4847)
inline HRESULT TGAssembly::Splice::DeletePhysicalConductor ( ) {
    return _com_dispatch_method(this, 0x92, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4848)
inline HRESULT TGAssembly::Splice::GetSplicePosition ( double * dSpliceX, double * dSpliceY, double * dSpliceZ ) {
    return _com_dispatch_method(this, 0x97, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", dSpliceX, dSpliceY, dSpliceZ);
}

#pragma implementation_key(4849)
inline HRESULT TGAssembly::Splice::GetConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x6b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumberOfConductors, ConductorArray);
}

#pragma implementation_key(4850)
inline HRESULT TGAssembly::Splice::AddConductors ( long NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x96, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009", NumberOfConductors, ConductorArray);
}

#pragma implementation_key(4851)
inline HRESULT TGAssembly::Splice::Edit ( double dSpliceX, double dSpliceY, double dSpliceZ, long NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    return _com_dispatch_method(this, 0x95, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0003\x6009", dSpliceX, dSpliceY, dSpliceZ, NumberOfConductors, ConductorArray);
}

//
// interface _ISplicesAuto wrapper method implementations
//

#pragma implementation_key(4852)
inline TGFramework::ApplicationPtr TGAssembly::_ISplicesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4853)
inline IDispatchPtr TGAssembly::_ISplicesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4854)
inline long TGAssembly::_ISplicesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4855)
inline IUnknownPtr TGAssembly::_ISplicesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4856)
inline TGAssembly::SplicePtr TGAssembly::_ISplicesAuto::Item ( const _variant_t & Index ) {
    struct Splice * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SplicePtr(_result, false);
}

#pragma implementation_key(4857)
inline TGAssembly::SplicePtr TGAssembly::_ISplicesAuto::Add ( double dSpliceX, double dSpliceY, double dSpliceZ, long NumberOfConductors, SAFEARRAY * * ConductorArray, _bstr_t ConductorDescription ) {
    struct Splice * _result = 0;
    HRESULT _hr = raw_Add(dSpliceX, dSpliceY, dSpliceZ, NumberOfConductors, ConductorArray, ConductorDescription, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SplicePtr(_result, false);
}

#pragma implementation_key(4858)
inline enum TGAssembly::HarnessTypeConstants TGAssembly::_ISplicesAuto::GetType ( ) {
    enum HarnessTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _ISpliceAuto wrapper method implementations
//

#pragma implementation_key(4859)
inline TGFramework::ApplicationPtr TGAssembly::_ISpliceAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4860)
inline IDispatchPtr TGAssembly::_ISpliceAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4861)
inline IDispatchPtr TGAssembly::_ISpliceAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4862)
inline VARIANT_BOOL TGAssembly::_ISpliceAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4863)
inline VARIANT_BOOL TGAssembly::_ISpliceAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4864)
inline void TGAssembly::_ISpliceAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4865)
inline void TGAssembly::_ISpliceAuto::PutGage ( _bstr_t Gage ) {
    HRESULT _hr = put_Gage(Gage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4866)
inline _bstr_t TGAssembly::_ISpliceAuto::GetGage ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Gage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4867)
inline void TGAssembly::_ISpliceAuto::PutMaterialType ( _bstr_t MaterialType ) {
    HRESULT _hr = put_MaterialType(MaterialType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4868)
inline _bstr_t TGAssembly::_ISpliceAuto::GetMaterialType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MaterialType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4869)
inline void TGAssembly::_ISpliceAuto::PutMaterial ( _bstr_t Material ) {
    HRESULT _hr = put_Material(Material);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4870)
inline _bstr_t TGAssembly::_ISpliceAuto::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4871)
inline HRESULT TGAssembly::_ISpliceAuto::GetOuterConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_GetOuterConductors(NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4872)
inline HRESULT TGAssembly::_ISpliceAuto::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_GetTopMostConductors(NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4873)
inline HRESULT TGAssembly::_ISpliceAuto::Remove ( long NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_Remove(NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4874)
inline HRESULT TGAssembly::_ISpliceAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4875)
inline TGAssembly::AssemblyPropertyPtr TGAssembly::_ISpliceAuto::GetAssemblyProperty ( ) {
    struct AssemblyProperty * _result = 0;
    HRESULT _hr = get_AssemblyProperty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPropertyPtr(_result, false);
}

#pragma implementation_key(4876)
inline enum TGAssembly::HarnessTypeConstants TGAssembly::_ISpliceAuto::GetType ( ) {
    enum HarnessTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4877)
inline void TGAssembly::_ISpliceAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4878)
inline _bstr_t TGAssembly::_ISpliceAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4879)
inline void TGAssembly::_ISpliceAuto::PutColor ( long Color ) {
    HRESULT _hr = put_Color(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4880)
inline long TGAssembly::_ISpliceAuto::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4881)
inline void TGAssembly::_ISpliceAuto::PutDescription ( _bstr_t Description ) {
    HRESULT _hr = put_Description(Description);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4882)
inline _bstr_t TGAssembly::_ISpliceAuto::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4883)
inline void TGAssembly::_ISpliceAuto::PutOuterDiameter ( double OuterDiameter ) {
    HRESULT _hr = put_OuterDiameter(OuterDiameter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4884)
inline double TGAssembly::_ISpliceAuto::GetOuterDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_OuterDiameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4885)
inline void TGAssembly::_ISpliceAuto::PutPartNumber ( _bstr_t PartNumber ) {
    HRESULT _hr = put_PartNumber(PartNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4886)
inline _bstr_t TGAssembly::_ISpliceAuto::GetPartNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PartNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4887)
inline HRESULT TGAssembly::_ISpliceAuto::CreatePhysicalConductor ( ) {
    HRESULT _hr = raw_CreatePhysicalConductor();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4888)
inline HRESULT TGAssembly::_ISpliceAuto::DeletePhysicalConductor ( ) {
    HRESULT _hr = raw_DeletePhysicalConductor();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4889)
inline HRESULT TGAssembly::_ISpliceAuto::GetSplicePosition ( double * dSpliceX, double * dSpliceY, double * dSpliceZ ) {
    HRESULT _hr = raw_GetSplicePosition(dSpliceX, dSpliceY, dSpliceZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4890)
inline HRESULT TGAssembly::_ISpliceAuto::GetConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_GetConductors(NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4891)
inline HRESULT TGAssembly::_ISpliceAuto::AddConductors ( long NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_AddConductors(NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4892)
inline HRESULT TGAssembly::_ISpliceAuto::Edit ( double dSpliceX, double dSpliceY, double dSpliceZ, long NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_Edit(dSpliceX, dSpliceY, dSpliceZ, NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IHarnessAuto wrapper method implementations
//

#pragma implementation_key(4893)
inline TGFramework::ApplicationPtr TGAssembly::_IHarnessAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4894)
inline IDispatchPtr TGAssembly::_IHarnessAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4895)
inline TGAssembly::WiresPtr TGAssembly::_IHarnessAuto::GetWires ( ) {
    struct Wires * _result = 0;
    HRESULT _hr = get_Wires(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WiresPtr(_result, false);
}

#pragma implementation_key(4896)
inline TGAssembly::CablesPtr TGAssembly::_IHarnessAuto::GetCables ( ) {
    struct Cables * _result = 0;
    HRESULT _hr = get_Cables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CablesPtr(_result, false);
}

#pragma implementation_key(4897)
inline TGAssembly::BundlesPtr TGAssembly::_IHarnessAuto::GetBundles ( ) {
    struct Bundles * _result = 0;
    HRESULT _hr = get_Bundles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BundlesPtr(_result, false);
}

#pragma implementation_key(4898)
inline TGAssembly::SplicesPtr TGAssembly::_IHarnessAuto::GetSplices ( ) {
    struct Splices * _result = 0;
    HRESULT _hr = get_Splices(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SplicesPtr(_result, false);
}

#pragma implementation_key(4899)
inline HRESULT TGAssembly::_IHarnessAuto::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray ) {
    HRESULT _hr = raw_GetTopMostConductors(NumberOfConductors, ConductorArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4900)
inline HRESULT TGAssembly::_IHarnessAuto::SaveAsEcad ( enum HarnessSaveAsEcadStatusConstants * HarnessSaveAsEcadStatus, _bstr_t CompanyName, const _variant_t & ComponentFilePath, const _variant_t & ConnectionFilePath ) {
    HRESULT _hr = raw_SaveAsEcad(HarnessSaveAsEcadStatus, CompanyName, ComponentFilePath, ConnectionFilePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4901)
inline HRESULT TGAssembly::_IHarnessAuto::CreatePhysicalConductor ( ) {
    HRESULT _hr = raw_CreatePhysicalConductor();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4902)
inline HRESULT TGAssembly::_IHarnessAuto::DeletePhysicalConductor ( ) {
    HRESULT _hr = raw_DeletePhysicalConductor();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4903)
inline HRESULT TGAssembly::_IHarnessAuto::SaveAsHarnessTopology ( enum SaveAsHarnessTopologyStatusConstants * SaveAsHarnessTopologyStatus, const _variant_t & HarnessFilePath ) {
    HRESULT _hr = raw_SaveAsHarnessTopology(SaveAsHarnessTopologyStatus, HarnessFilePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4904)
inline HRESULT TGAssembly::_IHarnessAuto::SaveAsHarnessTopologyEx ( enum SaveAsHarnessTopologyStatusConstants * SaveAsHarnessTopologyStatus, const _variant_t & HarnessFilePath, enum SaveAsHarnessFileFormats SaveAsHarnessFileFormat ) {
    HRESULT _hr = raw_SaveAsHarnessTopologyEx(SaveAsHarnessTopologyStatus, HarnessFilePath, SaveAsHarnessFileFormat);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface AssemblyBodies wrapper method implementations
//

#pragma implementation_key(4905)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyBodies::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4906)
inline long TGAssembly::AssemblyBodies::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4907)
inline IDispatchPtr TGAssembly::AssemblyBodies::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4908)
inline TGAssembly::AssemblyBodyPtr TGAssembly::AssemblyBodies::Item ( const _variant_t & Index ) {
    struct AssemblyBody * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyBodyPtr(_result, false);
}

#pragma implementation_key(4909)
inline enum TGFramework::ObjectType TGAssembly::AssemblyBodies::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4910)
inline IDispatchPtr TGAssembly::AssemblyBodies::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4911)
inline VARIANT_BOOL TGAssembly::AssemblyBodies::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IAssemblyBodiesAuto wrapper method implementations
//

#pragma implementation_key(4912)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyBodiesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4913)
inline long TGAssembly::_IAssemblyBodiesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4914)
inline IDispatchPtr TGAssembly::_IAssemblyBodiesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4915)
inline TGAssembly::AssemblyBodyPtr TGAssembly::_IAssemblyBodiesAuto::Item ( const _variant_t & Index ) {
    struct AssemblyBody * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyBodyPtr(_result, false);
}

#pragma implementation_key(4916)
inline IUnknownPtr TGAssembly::_IAssemblyBodiesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4917)
inline enum TGFramework::ObjectType TGAssembly::_IAssemblyBodiesAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4918)
inline IDispatchPtr TGAssembly::_IAssemblyBodiesAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4919)
inline VARIANT_BOOL TGAssembly::_IAssemblyBodiesAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface Zones wrapper method implementations
//

#pragma implementation_key(4920)
inline TGFramework::ApplicationPtr TGAssembly::Zones::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4921)
inline IDispatchPtr TGAssembly::Zones::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4922)
inline long TGAssembly::Zones::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4923)
inline TGAssembly::ZonePtr TGAssembly::Zones::Item ( const _variant_t & Index ) {
    struct Zone * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ZonePtr(_result, false);
}

#pragma implementation_key(4924)
inline TGAssembly::ZonePtr TGAssembly::Zones::Add ( double Point1x, double Point1y, double Point1z, double Point2x, double Point2y, double Point2z ) {
    struct Zone * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", Point1x, Point1y, Point1z, Point2x, Point2y, Point2z);
    return ZonePtr(_result, false);
}

#pragma implementation_key(4925)
inline HRESULT TGAssembly::Zones::Delete ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

#pragma implementation_key(4926)
inline HRESULT TGAssembly::Zones::Save ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4927)
inline HRESULT TGAssembly::Zones::Cut ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

#pragma implementation_key(4928)
inline TGAssembly::ZonePtr TGAssembly::Zones::Paste ( ) {
    struct Zone * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return ZonePtr(_result, false);
}

#pragma implementation_key(4929)
inline HRESULT TGAssembly::Zones::Show ( ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4930)
inline HRESULT TGAssembly::Zones::Hide ( ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4931)
inline VARIANT_BOOL TGAssembly::Zones::IsVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface Zone wrapper method implementations
//

#pragma implementation_key(4932)
inline TGFramework::ApplicationPtr TGAssembly::Zone::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4933)
inline IDispatchPtr TGAssembly::Zone::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4934)
inline void TGAssembly::Zone::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4935)
inline _bstr_t TGAssembly::Zone::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4936)
inline void TGAssembly::Zone::PutOverlap ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4937)
inline VARIANT_BOOL TGAssembly::Zone::GetOverlap ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4938)
inline HRESULT TGAssembly::Zone::GetPoints ( double * Point1x, double * Point1y, double * Point1z, double * Point2x, double * Point2y, double * Point2z ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", Point1x, Point1y, Point1z, Point2x, Point2y, Point2z);
}

#pragma implementation_key(4939)
inline HRESULT TGAssembly::Zone::SetPoints ( double Point1x, double Point1y, double Point1z, double Point2x, double Point2y, double Point2z ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", Point1x, Point1y, Point1z, Point2x, Point2y, Point2z);
}

#pragma implementation_key(4940)
inline HRESULT TGAssembly::Zone::CopyToClipboard ( ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4941)
inline HRESULT TGAssembly::Zone::PopulateFromClipboard ( ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4942)
inline HRESULT TGAssembly::Zone::Show ( ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4943)
inline HRESULT TGAssembly::Zone::Hide ( ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4944)
inline VARIANT_BOOL TGAssembly::Zone::IsVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4945)
inline HRESULT TGAssembly::Zone::ShowParts ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4946)
inline HRESULT TGAssembly::Zone::HideParts ( ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4947)
inline HRESULT TGAssembly::Zone::ShowOnlyParts ( ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4948)
inline HRESULT TGAssembly::Zone::AddPartsToSelectSet ( ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface _IZonesAuto wrapper method implementations
//

#pragma implementation_key(4949)
inline TGFramework::ApplicationPtr TGAssembly::_IZonesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4950)
inline IDispatchPtr TGAssembly::_IZonesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4951)
inline long TGAssembly::_IZonesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4952)
inline TGAssembly::ZonePtr TGAssembly::_IZonesAuto::Item ( const _variant_t & Index ) {
    struct Zone * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ZonePtr(_result, false);
}

#pragma implementation_key(4953)
inline IUnknownPtr TGAssembly::_IZonesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4954)
inline TGAssembly::ZonePtr TGAssembly::_IZonesAuto::Add ( double Point1x, double Point1y, double Point1z, double Point2x, double Point2y, double Point2z ) {
    struct Zone * _result = 0;
    HRESULT _hr = raw_Add(Point1x, Point1y, Point1z, Point2x, Point2y, Point2z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ZonePtr(_result, false);
}

#pragma implementation_key(4955)
inline HRESULT TGAssembly::_IZonesAuto::Delete ( _bstr_t Name ) {
    HRESULT _hr = raw_Delete(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4956)
inline HRESULT TGAssembly::_IZonesAuto::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4957)
inline HRESULT TGAssembly::_IZonesAuto::Cut ( _bstr_t Name ) {
    HRESULT _hr = raw_Cut(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4958)
inline TGAssembly::ZonePtr TGAssembly::_IZonesAuto::Paste ( ) {
    struct Zone * _result = 0;
    HRESULT _hr = raw_Paste(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ZonePtr(_result, false);
}

#pragma implementation_key(4959)
inline HRESULT TGAssembly::_IZonesAuto::Show ( ) {
    HRESULT _hr = raw_Show();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4960)
inline HRESULT TGAssembly::_IZonesAuto::Hide ( ) {
    HRESULT _hr = raw_Hide();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4961)
inline VARIANT_BOOL TGAssembly::_IZonesAuto::IsVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IZoneAuto wrapper method implementations
//

#pragma implementation_key(4962)
inline TGFramework::ApplicationPtr TGAssembly::_IZoneAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4963)
inline IDispatchPtr TGAssembly::_IZoneAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4964)
inline void TGAssembly::_IZoneAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4965)
inline _bstr_t TGAssembly::_IZoneAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4966)
inline void TGAssembly::_IZoneAuto::PutOverlap ( VARIANT_BOOL bOverlap ) {
    HRESULT _hr = put_Overlap(bOverlap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4967)
inline VARIANT_BOOL TGAssembly::_IZoneAuto::GetOverlap ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Overlap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4968)
inline HRESULT TGAssembly::_IZoneAuto::GetPoints ( double * Point1x, double * Point1y, double * Point1z, double * Point2x, double * Point2y, double * Point2z ) {
    HRESULT _hr = raw_GetPoints(Point1x, Point1y, Point1z, Point2x, Point2y, Point2z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4969)
inline HRESULT TGAssembly::_IZoneAuto::SetPoints ( double Point1x, double Point1y, double Point1z, double Point2x, double Point2y, double Point2z ) {
    HRESULT _hr = raw_SetPoints(Point1x, Point1y, Point1z, Point2x, Point2y, Point2z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4970)
inline HRESULT TGAssembly::_IZoneAuto::CopyToClipboard ( ) {
    HRESULT _hr = raw_CopyToClipboard();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4971)
inline HRESULT TGAssembly::_IZoneAuto::PopulateFromClipboard ( ) {
    HRESULT _hr = raw_PopulateFromClipboard();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4972)
inline HRESULT TGAssembly::_IZoneAuto::Show ( ) {
    HRESULT _hr = raw_Show();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4973)
inline HRESULT TGAssembly::_IZoneAuto::Hide ( ) {
    HRESULT _hr = raw_Hide();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4974)
inline VARIANT_BOOL TGAssembly::_IZoneAuto::IsVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4975)
inline HRESULT TGAssembly::_IZoneAuto::ShowParts ( ) {
    HRESULT _hr = raw_ShowParts();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4976)
inline HRESULT TGAssembly::_IZoneAuto::HideParts ( ) {
    HRESULT _hr = raw_HideParts();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4977)
inline HRESULT TGAssembly::_IZoneAuto::ShowOnlyParts ( ) {
    HRESULT _hr = raw_ShowOnlyParts();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4978)
inline HRESULT TGAssembly::_IZoneAuto::AddPartsToSelectSet ( ) {
    HRESULT _hr = raw_AddPartsToSelectSet();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface FastenerSystems wrapper method implementations
//

#pragma implementation_key(4979)
inline HRESULT TGAssembly::FastenerSystems::GetOccurrences ( long * NumOfMasters, SAFEARRAY * * Occurrences ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumOfMasters, Occurrences);
}

#pragma implementation_key(4980)
inline HRESULT TGAssembly::FastenerSystems::GetComponents ( IUnknown * master, long * NoOfcomp, SAFEARRAY * * Occurrences ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d\x4003\x6009", master, NoOfcomp, Occurrences);
}

#pragma implementation_key(4981)
inline TGFramework::ApplicationPtr TGAssembly::FastenerSystems::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4982)
inline IDispatchPtr TGAssembly::FastenerSystems::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4983)
inline TGAssembly::FastenerSystemPtr TGAssembly::FastenerSystems::Item ( const _variant_t & Index ) {
    struct FastenerSystem * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return FastenerSystemPtr(_result, false);
}

#pragma implementation_key(4984)
inline long TGAssembly::FastenerSystems::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4985)
inline HRESULT TGAssembly::FastenerSystems::GetOccurrencesEx ( long * NumOfSources, SAFEARRAY * * Occurrences ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NumOfSources, Occurrences);
}

#pragma implementation_key(4986)
inline HRESULT TGAssembly::FastenerSystems::GetComponentsEx ( IUnknown * Source, long * NoOfcomp, SAFEARRAY * * Occurrences ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d\x4003\x6009", Source, NoOfcomp, Occurrences);
}

//
// dispinterface FastenerSystem wrapper method implementations
//

#pragma implementation_key(4987)
inline HRESULT TGAssembly::FastenerSystem::GetComponents ( long * NoOfcomp, SAFEARRAY * * Occurrences ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009", NoOfcomp, Occurrences);
}

#pragma implementation_key(4988)
inline HRESULT TGAssembly::FastenerSystem::Flip ( ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4989)
inline TGFramework::ApplicationPtr TGAssembly::FastenerSystem::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4990)
inline IDispatchPtr TGAssembly::FastenerSystem::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4991)
inline _bstr_t TGAssembly::FastenerSystem::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4992)
inline void TGAssembly::FastenerSystem::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4993)
inline VARIANT_BOOL TGAssembly::FastenerSystem::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4994)
inline void TGAssembly::FastenerSystem::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4995)
inline HRESULT TGAssembly::FastenerSystem::Delete ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4996)
inline TGPart::SuppressVariablePtr TGAssembly::FastenerSystem::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(4997)
inline TGPart::SuppressVariablePtr TGAssembly::FastenerSystem::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(4998)
inline HRESULT TGAssembly::FastenerSystem::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4999)
inline VARIANT_BOOL TGAssembly::FastenerSystem::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IFastenerSystemsAuto wrapper method implementations
//

#pragma implementation_key(5000)
inline HRESULT TGAssembly::_IFastenerSystemsAuto::GetOccurrences ( long * NumOfMasters, SAFEARRAY * * Occurrences ) {
    HRESULT _hr = raw_GetOccurrences(NumOfMasters, Occurrences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5001)
inline HRESULT TGAssembly::_IFastenerSystemsAuto::GetComponents ( IUnknown * master, long * NoOfcomp, SAFEARRAY * * Occurrences ) {
    HRESULT _hr = raw_GetComponents(master, NoOfcomp, Occurrences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5002)
inline TGFramework::ApplicationPtr TGAssembly::_IFastenerSystemsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5003)
inline IDispatchPtr TGAssembly::_IFastenerSystemsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5004)
inline TGAssembly::FastenerSystemPtr TGAssembly::_IFastenerSystemsAuto::Item ( const _variant_t & Index ) {
    struct FastenerSystem * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FastenerSystemPtr(_result, false);
}

#pragma implementation_key(5005)
inline IUnknownPtr TGAssembly::_IFastenerSystemsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5006)
inline long TGAssembly::_IFastenerSystemsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5007)
inline HRESULT TGAssembly::_IFastenerSystemsAuto::GetOccurrencesEx ( long * NumOfSources, SAFEARRAY * * Occurrences ) {
    HRESULT _hr = raw_GetOccurrencesEx(NumOfSources, Occurrences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5008)
inline HRESULT TGAssembly::_IFastenerSystemsAuto::GetComponentsEx ( IUnknown * Source, long * NoOfcomp, SAFEARRAY * * Occurrences ) {
    HRESULT _hr = raw_GetComponentsEx(Source, NoOfcomp, Occurrences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IFastenerSystemAuto wrapper method implementations
//

#pragma implementation_key(5009)
inline HRESULT TGAssembly::_IFastenerSystemAuto::GetComponents ( long * NoOfcomp, SAFEARRAY * * Occurrences ) {
    HRESULT _hr = raw_GetComponents(NoOfcomp, Occurrences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5010)
inline HRESULT TGAssembly::_IFastenerSystemAuto::Flip ( ) {
    HRESULT _hr = raw_Flip();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5011)
inline TGFramework::ApplicationPtr TGAssembly::_IFastenerSystemAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5012)
inline IDispatchPtr TGAssembly::_IFastenerSystemAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5013)
inline _bstr_t TGAssembly::_IFastenerSystemAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5014)
inline void TGAssembly::_IFastenerSystemAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5015)
inline VARIANT_BOOL TGAssembly::_IFastenerSystemAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5016)
inline void TGAssembly::_IFastenerSystemAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5017)
inline HRESULT TGAssembly::_IFastenerSystemAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5018)
inline TGPart::SuppressVariablePtr TGAssembly::_IFastenerSystemAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5019)
inline TGPart::SuppressVariablePtr TGAssembly::_IFastenerSystemAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5020)
inline HRESULT TGAssembly::_IFastenerSystemAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5021)
inline VARIANT_BOOL TGAssembly::_IFastenerSystemAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AssemblyGroups wrapper method implementations
//

#pragma implementation_key(5022)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyGroups::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5023)
inline long TGAssembly::AssemblyGroups::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5024)
inline IDispatchPtr TGAssembly::AssemblyGroups::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5025)
inline TGAssembly::AssemblyGroupPtr TGAssembly::AssemblyGroups::Item ( const _variant_t & Index ) {
    struct AssemblyGroup * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyGroupPtr(_result, false);
}

#pragma implementation_key(5026)
inline enum TGFramework::ObjectType TGAssembly::AssemblyGroups::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5027)
inline TGAssembly::AssemblyGroupPtr TGAssembly::AssemblyGroups::Add ( long NumComponents, SAFEARRAY * * Components ) {
    struct AssemblyGroup * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009", NumComponents, Components);
    return AssemblyGroupPtr(_result, false);
}

//
// dispinterface AssemblyGroup wrapper method implementations
//

#pragma implementation_key(5028)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyGroup::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5029)
inline IDispatchPtr TGAssembly::AssemblyGroup::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5030)
inline _bstr_t TGAssembly::AssemblyGroup::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5031)
inline void TGAssembly::AssemblyGroup::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5032)
inline enum TGFramework::ObjectType TGAssembly::AssemblyGroup::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5033)
inline void TGAssembly::AssemblyGroup::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5034)
inline HRESULT TGAssembly::AssemblyGroup::Delete ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5035)
inline HRESULT TGAssembly::AssemblyGroup::UnGroup ( ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5036)
inline HRESULT TGAssembly::AssemblyGroup::AddToGroup ( long NumComponents, SAFEARRAY * * Components ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009", NumComponents, Components);
}

#pragma implementation_key(5037)
inline HRESULT TGAssembly::AssemblyGroup::RemoveFromGroup ( long NumComponents, SAFEARRAY * * Components ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009", NumComponents, Components);
}

#pragma implementation_key(5038)
inline long TGAssembly::AssemblyGroup::GetNumComponents ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5039)
inline HRESULT TGAssembly::AssemblyGroup::GetComponents ( SAFEARRAY * * Components ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", Components);
}

#pragma implementation_key(5040)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyGroup::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5041)
inline TGPart::SuppressVariablePtr TGAssembly::AssemblyGroup::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5042)
inline HRESULT TGAssembly::AssemblyGroup::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5043)
inline VARIANT_BOOL TGAssembly::AssemblyGroup::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IAssemblyGroupsAuto wrapper method implementations
//

#pragma implementation_key(5044)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyGroupsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5045)
inline long TGAssembly::_IAssemblyGroupsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5046)
inline IDispatchPtr TGAssembly::_IAssemblyGroupsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5047)
inline TGAssembly::AssemblyGroupPtr TGAssembly::_IAssemblyGroupsAuto::Item ( const _variant_t & Index ) {
    struct AssemblyGroup * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyGroupPtr(_result, false);
}

#pragma implementation_key(5048)
inline IUnknownPtr TGAssembly::_IAssemblyGroupsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5049)
inline enum TGFramework::ObjectType TGAssembly::_IAssemblyGroupsAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5050)
inline TGAssembly::AssemblyGroupPtr TGAssembly::_IAssemblyGroupsAuto::Add ( long NumComponents, SAFEARRAY * * Components ) {
    struct AssemblyGroup * _result = 0;
    HRESULT _hr = raw_Add(NumComponents, Components, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyGroupPtr(_result, false);
}

//
// interface _IAssemblyGroupAuto wrapper method implementations
//

#pragma implementation_key(5051)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyGroupAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5052)
inline IDispatchPtr TGAssembly::_IAssemblyGroupAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5053)
inline _bstr_t TGAssembly::_IAssemblyGroupAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5054)
inline void TGAssembly::_IAssemblyGroupAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5055)
inline enum TGFramework::ObjectType TGAssembly::_IAssemblyGroupAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5056)
inline void TGAssembly::_IAssemblyGroupAuto::PutVisible ( VARIANT_BOOL _arg1 ) {
    HRESULT _hr = put_Visible(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5057)
inline HRESULT TGAssembly::_IAssemblyGroupAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5058)
inline HRESULT TGAssembly::_IAssemblyGroupAuto::UnGroup ( ) {
    HRESULT _hr = raw_UnGroup();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5059)
inline HRESULT TGAssembly::_IAssemblyGroupAuto::AddToGroup ( long NumComponents, SAFEARRAY * * Components ) {
    HRESULT _hr = raw_AddToGroup(NumComponents, Components);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5060)
inline HRESULT TGAssembly::_IAssemblyGroupAuto::RemoveFromGroup ( long NumComponents, SAFEARRAY * * Components ) {
    HRESULT _hr = raw_RemoveFromGroup(NumComponents, Components);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5061)
inline long TGAssembly::_IAssemblyGroupAuto::GetNumComponents ( ) {
    long _result = 0;
    HRESULT _hr = get_NumComponents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5062)
inline HRESULT TGAssembly::_IAssemblyGroupAuto::GetComponents ( SAFEARRAY * * Components ) {
    HRESULT _hr = raw_GetComponents(Components);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5063)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyGroupAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5064)
inline TGPart::SuppressVariablePtr TGAssembly::_IAssemblyGroupAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5065)
inline HRESULT TGAssembly::_IAssemblyGroupAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5066)
inline VARIANT_BOOL TGAssembly::_IAssemblyGroupAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface ItemNumbers wrapper method implementations
//

#pragma implementation_key(5067)
inline TGFramework::ApplicationPtr TGAssembly::ItemNumbers::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5068)
inline IDispatchPtr TGAssembly::ItemNumbers::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5069)
inline HRESULT TGAssembly::ItemNumbers::GetItemNumberPreferences ( enum ItemNumberModeConstants * Mode, VARIANT_BOOL * ExpandWeldmentSubassemblies, int * StartNumber, int * IncrementBy ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x400b\x4003\x4003", Mode, ExpandWeldmentSubassemblies, StartNumber, IncrementBy);
}

#pragma implementation_key(5070)
inline HRESULT TGAssembly::ItemNumbers::SetItemNumberPreferences ( enum ItemNumberModeConstants Mode, VARIANT_BOOL ExpandWeldmentSubassemblies, int StartNumber, int IncrementBy ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000b\x0003\x0003", Mode, ExpandWeldmentSubassemblies, StartNumber, IncrementBy);
}

#pragma implementation_key(5071)
inline int TGAssembly::ItemNumbers::GetNextAvailableItemNumber ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5072)
inline HRESULT TGAssembly::ItemNumbers::IsInUse ( int ItemNumber, VARIANT_BOOL * ItemNumberInUse ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x400b", ItemNumber, ItemNumberInUse);
}

#pragma implementation_key(5073)
inline HRESULT TGAssembly::ItemNumbers::Regenerate ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5074)
inline HRESULT TGAssembly::ItemNumbers::RemoveUnusedItemNumbers ( ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface _IItemNumbersAuto wrapper method implementations
//

#pragma implementation_key(5075)
inline TGFramework::ApplicationPtr TGAssembly::_IItemNumbersAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5076)
inline IDispatchPtr TGAssembly::_IItemNumbersAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5077)
inline HRESULT TGAssembly::_IItemNumbersAuto::GetItemNumberPreferences ( enum ItemNumberModeConstants * Mode, VARIANT_BOOL * ExpandWeldmentSubassemblies, int * StartNumber, int * IncrementBy ) {
    HRESULT _hr = raw_GetItemNumberPreferences(Mode, ExpandWeldmentSubassemblies, StartNumber, IncrementBy);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5078)
inline HRESULT TGAssembly::_IItemNumbersAuto::SetItemNumberPreferences ( enum ItemNumberModeConstants Mode, VARIANT_BOOL ExpandWeldmentSubassemblies, int StartNumber, int IncrementBy ) {
    HRESULT _hr = raw_SetItemNumberPreferences(Mode, ExpandWeldmentSubassemblies, StartNumber, IncrementBy);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5079)
inline int TGAssembly::_IItemNumbersAuto::GetNextAvailableItemNumber ( ) {
    int _result = 0;
    HRESULT _hr = get_NextAvailableItemNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5080)
inline HRESULT TGAssembly::_IItemNumbersAuto::IsInUse ( int ItemNumber, VARIANT_BOOL * ItemNumberInUse ) {
    HRESULT _hr = raw_IsInUse(ItemNumber, ItemNumberInUse);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5081)
inline HRESULT TGAssembly::_IItemNumbersAuto::Regenerate ( ) {
    HRESULT _hr = raw_Regenerate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5082)
inline HRESULT TGAssembly::_IItemNumbersAuto::RemoveUnusedItemNumbers ( ) {
    HRESULT _hr = raw_RemoveUnusedItemNumbers();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface AssemblyCopies wrapper method implementations
//

#pragma implementation_key(5083)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyCopies::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5084)
inline IDispatchPtr TGAssembly::AssemblyCopies::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5085)
inline TGAssembly::AssemblyCopyPtr TGAssembly::AssemblyCopies::Item ( const _variant_t & Index ) {
    struct AssemblyCopy * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyCopyPtr(_result, false);
}

#pragma implementation_key(5086)
inline long TGAssembly::AssemblyCopies::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5087)
inline TGAssembly::AssemblyCopyPtr TGAssembly::AssemblyCopies::ItemEx ( const _variant_t & Index ) {
    struct AssemblyCopy * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyCopyPtr(_result, false);
}

#pragma implementation_key(5088)
inline TGAssembly::AssemblyCopyPtr TGAssembly::AssemblyCopies::Add ( _bstr_t FileName, enum AssemblyCopyComponentConstants SpecifiedComponentSelection, const _variant_t & MirrorPlane, const _variant_t & IncludeAF, const _variant_t & AddNewComponentsOnUpdate, const _variant_t & NumSpecifiedComponents, const _variant_t & SpecifiedComponents, const _variant_t & CoordinateSystem ) {
    struct AssemblyCopy * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003\x080c\x080c\x080c\x080c\x080c\x080c", (BSTR)FileName, SpecifiedComponentSelection, &MirrorPlane, &IncludeAF, &AddNewComponentsOnUpdate, &NumSpecifiedComponents, &SpecifiedComponents, &CoordinateSystem);
    return AssemblyCopyPtr(_result, false);
}

#pragma implementation_key(5089)
inline long TGAssembly::AssemblyCopies::GetCountEx ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface AssemblyCopy wrapper method implementations
//

#pragma implementation_key(5090)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyCopy::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5091)
inline IDispatchPtr TGAssembly::AssemblyCopy::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5092)
inline _bstr_t TGAssembly::AssemblyCopy::GetSourceFilename ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5093)
inline IDispatchPtr TGAssembly::AssemblyCopy::GetSourceDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5094)
inline IDispatchPtr TGAssembly::AssemblyCopy::GetMirrorPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5095)
inline void TGAssembly::AssemblyCopy::PutMirrorPlane ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(5096)
inline IDispatchPtr TGAssembly::AssemblyCopy::GetCoordinateSystem ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5097)
inline void TGAssembly::AssemblyCopy::PutCoordinateSystem ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(5098)
inline VARIANT_BOOL TGAssembly::AssemblyCopy::GetIncludeAssemblyFeatures ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5099)
inline void TGAssembly::AssemblyCopy::PutIncludeAssemblyFeatures ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5100)
inline VARIANT_BOOL TGAssembly::AssemblyCopy::GetAddNewComponentsOnUpdate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5101)
inline void TGAssembly::AssemblyCopy::PutAddNewComponentsOnUpdate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5102)
inline VARIANT_BOOL TGAssembly::AssemblyCopy::GetIsOutOfDate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5103)
inline VARIANT_BOOL TGAssembly::AssemblyCopy::GetIsFrozen ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5104)
inline void TGAssembly::AssemblyCopy::PutIsFrozen ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5105)
inline enum TGAssembly::AssemblyCopyStatusConstants TGAssembly::AssemblyCopy::GetStatus ( ) {
    enum AssemblyCopyStatusConstants _result;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5106)
inline enum TGAssembly::AssemblyCopyTypeConstants TGAssembly::AssemblyCopy::GetAssemblyCopyType ( ) {
    enum AssemblyCopyTypeConstants _result;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5107)
inline HRESULT TGAssembly::AssemblyCopy::Update ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5108)
inline HRESULT TGAssembly::AssemblyCopy::GetDefinition ( SAFEARRAY * * inputOccs, SAFEARRAY * * outputOccs, VARIANT * actionEnums, VARIANT * planeEnums, VARIANT * userEnums ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009\x6009\x480c\x480c\x480c", inputOccs, outputOccs, actionEnums, planeEnums, userEnums);
}

#pragma implementation_key(5109)
inline HRESULT TGAssembly::AssemblyCopy::GetMultibodyDefinition ( SAFEARRAY * * inputFileNames, SAFEARRAY * * inputReferences, SAFEARRAY * * outputOccs ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c\x6009\x6009", inputFileNames, inputReferences, outputOccs);
}

#pragma implementation_key(5110)
inline _bstr_t TGAssembly::AssemblyCopy::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5111)
inline void TGAssembly::AssemblyCopy::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5112)
inline HRESULT TGAssembly::AssemblyCopy::ChangeSource ( _bstr_t FileName, enum AssemblyCopyComponentConstants SpecifiedComponentSelection, const _variant_t & NumSpecifiedComponents, const _variant_t & SpecifiedComponents ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x080c\x080c", (BSTR)FileName, SpecifiedComponentSelection, &NumSpecifiedComponents, &SpecifiedComponents);
}

#pragma implementation_key(5113)
inline HRESULT TGAssembly::AssemblyCopy::ComponentSettings ( long NumComponents, SAFEARRAY * * Components, SAFEARRAY * * ActionConstants, const _variant_t & PlaneConstants ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x6003\x080c", NumComponents, Components, ActionConstants, &PlaneConstants);
}

//
// interface _IAssemblyCopiesAuto wrapper method implementations
//

#pragma implementation_key(5114)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyCopiesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5115)
inline IDispatchPtr TGAssembly::_IAssemblyCopiesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5116)
inline TGAssembly::AssemblyCopyPtr TGAssembly::_IAssemblyCopiesAuto::Item ( const _variant_t & Index ) {
    struct AssemblyCopy * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyCopyPtr(_result, false);
}

#pragma implementation_key(5117)
inline long TGAssembly::_IAssemblyCopiesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5118)
inline TGAssembly::AssemblyCopyPtr TGAssembly::_IAssemblyCopiesAuto::ItemEx ( const _variant_t & Index ) {
    struct AssemblyCopy * _result = 0;
    HRESULT _hr = raw_ItemEx(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyCopyPtr(_result, false);
}

#pragma implementation_key(5119)
inline IUnknownPtr TGAssembly::_IAssemblyCopiesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5120)
inline TGAssembly::AssemblyCopyPtr TGAssembly::_IAssemblyCopiesAuto::Add ( _bstr_t FileName, enum AssemblyCopyComponentConstants SpecifiedComponentSelection, const _variant_t & MirrorPlane, const _variant_t & IncludeAF, const _variant_t & AddNewComponentsOnUpdate, const _variant_t & NumSpecifiedComponents, const _variant_t & SpecifiedComponents, const _variant_t & CoordinateSystem ) {
    struct AssemblyCopy * _result = 0;
    HRESULT _hr = raw_Add(FileName, SpecifiedComponentSelection, MirrorPlane, IncludeAF, AddNewComponentsOnUpdate, NumSpecifiedComponents, SpecifiedComponents, CoordinateSystem, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyCopyPtr(_result, false);
}

#pragma implementation_key(5121)
inline long TGAssembly::_IAssemblyCopiesAuto::GetCountEx ( ) {
    long _result = 0;
    HRESULT _hr = get_CountEx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IAssemblyCopyAuto wrapper method implementations
//

#pragma implementation_key(5122)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyCopyAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5123)
inline IDispatchPtr TGAssembly::_IAssemblyCopyAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5124)
inline _bstr_t TGAssembly::_IAssemblyCopyAuto::GetSourceFilename ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SourceFilename(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5125)
inline IDispatchPtr TGAssembly::_IAssemblyCopyAuto::GetSourceDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_SourceDocument(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5126)
inline IDispatchPtr TGAssembly::_IAssemblyCopyAuto::GetMirrorPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_MirrorPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5127)
inline void TGAssembly::_IAssemblyCopyAuto::PutMirrorPlane ( IDispatch * Mirror ) {
    HRESULT _hr = put_MirrorPlane(Mirror);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5128)
inline IDispatchPtr TGAssembly::_IAssemblyCopyAuto::GetCoordinateSystem ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_CoordinateSystem(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5129)
inline void TGAssembly::_IAssemblyCopyAuto::PutCoordinateSystem ( IDispatch * coordinates ) {
    HRESULT _hr = put_CoordinateSystem(coordinates);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5130)
inline VARIANT_BOOL TGAssembly::_IAssemblyCopyAuto::GetIncludeAssemblyFeatures ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeAssemblyFeatures(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5131)
inline void TGAssembly::_IAssemblyCopyAuto::PutIncludeAssemblyFeatures ( VARIANT_BOOL bIncludeAF ) {
    HRESULT _hr = put_IncludeAssemblyFeatures(bIncludeAF);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5132)
inline VARIANT_BOOL TGAssembly::_IAssemblyCopyAuto::GetAddNewComponentsOnUpdate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AddNewComponentsOnUpdate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5133)
inline void TGAssembly::_IAssemblyCopyAuto::PutAddNewComponentsOnUpdate ( VARIANT_BOOL bAddNewComponentsOnUpdate ) {
    HRESULT _hr = put_AddNewComponentsOnUpdate(bAddNewComponentsOnUpdate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5134)
inline VARIANT_BOOL TGAssembly::_IAssemblyCopyAuto::GetIsOutOfDate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsOutOfDate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5135)
inline VARIANT_BOOL TGAssembly::_IAssemblyCopyAuto::GetIsFrozen ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsFrozen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5136)
inline void TGAssembly::_IAssemblyCopyAuto::PutIsFrozen ( VARIANT_BOOL bIsFrozen ) {
    HRESULT _hr = put_IsFrozen(bIsFrozen);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5137)
inline enum TGAssembly::AssemblyCopyStatusConstants TGAssembly::_IAssemblyCopyAuto::GetStatus ( ) {
    enum AssemblyCopyStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5138)
inline enum TGAssembly::AssemblyCopyTypeConstants TGAssembly::_IAssemblyCopyAuto::GetAssemblyCopyType ( ) {
    enum AssemblyCopyTypeConstants _result;
    HRESULT _hr = get_AssemblyCopyType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5139)
inline HRESULT TGAssembly::_IAssemblyCopyAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5140)
inline HRESULT TGAssembly::_IAssemblyCopyAuto::GetDefinition ( SAFEARRAY * * inputOccs, SAFEARRAY * * outputOccs, VARIANT * actionEnums, VARIANT * planeEnums, VARIANT * userEnums ) {
    HRESULT _hr = raw_GetDefinition(inputOccs, outputOccs, actionEnums, planeEnums, userEnums);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5141)
inline HRESULT TGAssembly::_IAssemblyCopyAuto::GetMultibodyDefinition ( SAFEARRAY * * inputFileNames, SAFEARRAY * * inputReferences, SAFEARRAY * * outputOccs ) {
    HRESULT _hr = raw_GetMultibodyDefinition(inputFileNames, inputReferences, outputOccs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5142)
inline _bstr_t TGAssembly::_IAssemblyCopyAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5143)
inline void TGAssembly::_IAssemblyCopyAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5144)
inline HRESULT TGAssembly::_IAssemblyCopyAuto::ChangeSource ( _bstr_t FileName, enum AssemblyCopyComponentConstants SpecifiedComponentSelection, const _variant_t & NumSpecifiedComponents, const _variant_t & SpecifiedComponents ) {
    HRESULT _hr = raw_ChangeSource(FileName, SpecifiedComponentSelection, NumSpecifiedComponents, SpecifiedComponents);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5145)
inline HRESULT TGAssembly::_IAssemblyCopyAuto::ComponentSettings ( long NumComponents, SAFEARRAY * * Components, SAFEARRAY * * ActionConstants, const _variant_t & PlaneConstants ) {
    HRESULT _hr = raw_ComponentSettings(NumComponents, Components, ActionConstants, PlaneConstants);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface AssemblyMirrors wrapper method implementations
//

#pragma implementation_key(5146)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyMirrors::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5147)
inline IDispatchPtr TGAssembly::AssemblyMirrors::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5148)
inline TGAssembly::AssemblyMirrorPtr TGAssembly::AssemblyMirrors::Item ( const _variant_t & Index ) {
    struct AssemblyMirror * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AssemblyMirrorPtr(_result, false);
}

#pragma implementation_key(5149)
inline long TGAssembly::AssemblyMirrors::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface AssemblyMirror wrapper method implementations
//

#pragma implementation_key(5150)
inline TGFramework::ApplicationPtr TGAssembly::AssemblyMirror::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5151)
inline IDispatchPtr TGAssembly::AssemblyMirror::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5152)
inline IDispatchPtr TGAssembly::AssemblyMirror::GetMirrorPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5153)
inline enum TGAssembly::AssemblyCopyStatusConstants TGAssembly::AssemblyMirror::GetStatus ( ) {
    enum AssemblyCopyStatusConstants _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5154)
inline HRESULT TGAssembly::AssemblyMirror::GetDefinition ( SAFEARRAY * * inputOccs, SAFEARRAY * * outputOccs, VARIANT * actionEnums, VARIANT * planeEnums, VARIANT * userEnums ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009\x6009\x480c\x480c\x480c", inputOccs, outputOccs, actionEnums, planeEnums, userEnums);
}

#pragma implementation_key(5155)
inline _bstr_t TGAssembly::AssemblyMirror::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5156)
inline HRESULT TGAssembly::AssemblyMirror::Delete ( ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface _IAssemblyMirrorsAuto wrapper method implementations
//

#pragma implementation_key(5157)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyMirrorsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5158)
inline IDispatchPtr TGAssembly::_IAssemblyMirrorsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5159)
inline TGAssembly::AssemblyMirrorPtr TGAssembly::_IAssemblyMirrorsAuto::Item ( const _variant_t & Index ) {
    struct AssemblyMirror * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyMirrorPtr(_result, false);
}

#pragma implementation_key(5160)
inline long TGAssembly::_IAssemblyMirrorsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5161)
inline IUnknownPtr TGAssembly::_IAssemblyMirrorsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface _IAssemblyMirrorAuto wrapper method implementations
//

#pragma implementation_key(5162)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyMirrorAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5163)
inline IDispatchPtr TGAssembly::_IAssemblyMirrorAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5164)
inline IDispatchPtr TGAssembly::_IAssemblyMirrorAuto::GetMirrorPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_MirrorPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5165)
inline enum TGAssembly::AssemblyCopyStatusConstants TGAssembly::_IAssemblyMirrorAuto::GetStatus ( ) {
    enum AssemblyCopyStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5166)
inline HRESULT TGAssembly::_IAssemblyMirrorAuto::GetDefinition ( SAFEARRAY * * inputOccs, SAFEARRAY * * outputOccs, VARIANT * actionEnums, VARIANT * planeEnums, VARIANT * userEnums ) {
    HRESULT _hr = raw_GetDefinition(inputOccs, outputOccs, actionEnums, planeEnums, userEnums);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5167)
inline _bstr_t TGAssembly::_IAssemblyMirrorAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5168)
inline HRESULT TGAssembly::_IAssemblyMirrorAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface SimplifiedAssemblies wrapper method implementations
//

#pragma implementation_key(5169)
inline TGFramework::ApplicationPtr TGAssembly::SimplifiedAssemblies::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5170)
inline IDispatchPtr TGAssembly::SimplifiedAssemblies::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5171)
inline TGAssembly::SimplifiedAssemblyPtr TGAssembly::SimplifiedAssemblies::Item ( const _variant_t & Index ) {
    struct SimplifiedAssembly * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return SimplifiedAssemblyPtr(_result, false);
}

#pragma implementation_key(5172)
inline long TGAssembly::SimplifiedAssemblies::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5173)
inline TGAssembly::SimplifiedAssemblyPtr TGAssembly::SimplifiedAssemblies::GetAddVisible ( long NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double dExcludeRangeRatio, long NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude, enum VisibilityBasedSimplifiedAssemblyCopyType CopyType ) {
    struct SimplifiedAssembly * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x0005\x0003\x6009\x0003", NumOccurrenceExclude, OccurrenceExclude, dExcludeRangeRatio, NumOccurrenceInclude, OccurrenceInclude, CopyType);
    return SimplifiedAssemblyPtr(_result, false);
}

#pragma implementation_key(5174)
inline TGAssembly::SimplifiedAssemblyPtr TGAssembly::SimplifiedAssemblies::GetAddModel ( ) {
    struct SimplifiedAssembly * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SimplifiedAssemblyPtr(_result, false);
}

//
// dispinterface SimplifiedAssembly wrapper method implementations
//

#pragma implementation_key(5175)
inline TGFramework::ApplicationPtr TGAssembly::SimplifiedAssembly::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5176)
inline IDispatchPtr TGAssembly::SimplifiedAssembly::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5177)
inline VARIANT_BOOL TGAssembly::SimplifiedAssembly::GetActivateSimplifiedAssembly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5178)
inline void TGAssembly::SimplifiedAssembly::PutActivateSimplifiedAssembly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5179)
inline enum TGAssembly::SimplifiedAssemblyMode TGAssembly::SimplifiedAssembly::GetSimplificationType ( ) {
    enum SimplifiedAssemblyMode _result;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5180)
inline enum TGFramework::ObjectType TGAssembly::SimplifiedAssembly::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5181)
inline HRESULT TGAssembly::SimplifiedAssembly::UpdateSimplifiedAssembly ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5182)
inline HRESULT TGAssembly::SimplifiedAssembly::DeleteSimplifiedAssembly ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5183)
inline HRESULT TGAssembly::SimplifiedAssembly::EditVisibleFaces ( long NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double dExcludeRangeRatio, long NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude, enum VisibilityBasedSimplifiedAssemblyCopyType CopyType ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x0005\x0003\x6009\x0003", NumOccurrenceExclude, OccurrenceExclude, dExcludeRangeRatio, NumOccurrenceInclude, OccurrenceInclude, CopyType);
}

#pragma implementation_key(5184)
inline HRESULT TGAssembly::SimplifiedAssembly::GetVisibleFaceInputs ( long * NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double * dExcludeRangeRatio, long * NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude, enum VisibilityBasedSimplifiedAssemblyCopyType * CopyType ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6009\x4005\x4003\x6009\x4003", NumOccurrenceExclude, OccurrenceExclude, dExcludeRangeRatio, NumOccurrenceInclude, OccurrenceInclude, CopyType);
}

#pragma implementation_key(5185)
inline HRESULT TGAssembly::SimplifiedAssembly::SaveSimplifiedAssemblyAs ( _bstr_t SaveFileName ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)SaveFileName);
}

#pragma implementation_key(5186)
inline IDispatchPtr TGAssembly::SimplifiedAssembly::GetSimplifiedModel ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// interface _ISimplifiedAssembliesAuto wrapper method implementations
//

#pragma implementation_key(5187)
inline TGFramework::ApplicationPtr TGAssembly::_ISimplifiedAssembliesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5188)
inline IDispatchPtr TGAssembly::_ISimplifiedAssembliesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5189)
inline TGAssembly::SimplifiedAssemblyPtr TGAssembly::_ISimplifiedAssembliesAuto::Item ( const _variant_t & Index ) {
    struct SimplifiedAssembly * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SimplifiedAssemblyPtr(_result, false);
}

#pragma implementation_key(5190)
inline IUnknownPtr TGAssembly::_ISimplifiedAssembliesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5191)
inline long TGAssembly::_ISimplifiedAssembliesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5192)
inline TGAssembly::SimplifiedAssemblyPtr TGAssembly::_ISimplifiedAssembliesAuto::GetAddVisible ( long NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double dExcludeRangeRatio, long NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude, enum VisibilityBasedSimplifiedAssemblyCopyType CopyType ) {
    struct SimplifiedAssembly * _result = 0;
    HRESULT _hr = get_AddVisible(NumOccurrenceExclude, OccurrenceExclude, dExcludeRangeRatio, NumOccurrenceInclude, OccurrenceInclude, CopyType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SimplifiedAssemblyPtr(_result, false);
}

#pragma implementation_key(5193)
inline TGAssembly::SimplifiedAssemblyPtr TGAssembly::_ISimplifiedAssembliesAuto::GetAddModel ( ) {
    struct SimplifiedAssembly * _result = 0;
    HRESULT _hr = get_AddModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SimplifiedAssemblyPtr(_result, false);
}

//
// interface _ISimplifiedAssemblyAuto wrapper method implementations
//

#pragma implementation_key(5194)
inline TGFramework::ApplicationPtr TGAssembly::_ISimplifiedAssemblyAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5195)
inline IDispatchPtr TGAssembly::_ISimplifiedAssemblyAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5196)
inline VARIANT_BOOL TGAssembly::_ISimplifiedAssemblyAuto::GetActivateSimplifiedAssembly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ActivateSimplifiedAssembly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5197)
inline void TGAssembly::_ISimplifiedAssemblyAuto::PutActivateSimplifiedAssembly ( VARIANT_BOOL bActivate ) {
    HRESULT _hr = put_ActivateSimplifiedAssembly(bActivate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5198)
inline enum TGAssembly::SimplifiedAssemblyMode TGAssembly::_ISimplifiedAssemblyAuto::GetSimplificationType ( ) {
    enum SimplifiedAssemblyMode _result;
    HRESULT _hr = get_SimplificationType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5199)
inline enum TGFramework::ObjectType TGAssembly::_ISimplifiedAssemblyAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5200)
inline HRESULT TGAssembly::_ISimplifiedAssemblyAuto::UpdateSimplifiedAssembly ( ) {
    HRESULT _hr = raw_UpdateSimplifiedAssembly();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5201)
inline HRESULT TGAssembly::_ISimplifiedAssemblyAuto::DeleteSimplifiedAssembly ( ) {
    HRESULT _hr = raw_DeleteSimplifiedAssembly();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5202)
inline HRESULT TGAssembly::_ISimplifiedAssemblyAuto::EditVisibleFaces ( long NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double dExcludeRangeRatio, long NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude, enum VisibilityBasedSimplifiedAssemblyCopyType CopyType ) {
    HRESULT _hr = raw_EditVisibleFaces(NumOccurrenceExclude, OccurrenceExclude, dExcludeRangeRatio, NumOccurrenceInclude, OccurrenceInclude, CopyType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5203)
inline HRESULT TGAssembly::_ISimplifiedAssemblyAuto::GetVisibleFaceInputs ( long * NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double * dExcludeRangeRatio, long * NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude, enum VisibilityBasedSimplifiedAssemblyCopyType * CopyType ) {
    HRESULT _hr = raw_GetVisibleFaceInputs(NumOccurrenceExclude, OccurrenceExclude, dExcludeRangeRatio, NumOccurrenceInclude, OccurrenceInclude, CopyType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5204)
inline HRESULT TGAssembly::_ISimplifiedAssemblyAuto::SaveSimplifiedAssemblyAs ( _bstr_t SaveFileName ) {
    HRESULT _hr = raw_SaveSimplifiedAssemblyAs(SaveFileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5205)
inline IDispatchPtr TGAssembly::_ISimplifiedAssemblyAuto::GetSimplifiedModel ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_SimplifiedModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// dispinterface InternalComponents wrapper method implementations
//

#pragma implementation_key(5206)
inline TGFramework::ApplicationPtr TGAssembly::InternalComponents::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5207)
inline IDispatchPtr TGAssembly::InternalComponents::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5208)
inline TGAssembly::InternalComponentPtr TGAssembly::InternalComponents::Item ( const _variant_t & Index ) {
    struct InternalComponent * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return InternalComponentPtr(_result, false);
}

#pragma implementation_key(5209)
inline long TGAssembly::InternalComponents::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5210)
inline HRESULT TGAssembly::InternalComponents::DeleteInternalComponent ( _bstr_t InternalComponentName ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)InternalComponentName);
}

#pragma implementation_key(5211)
inline IDispatchPtr TGAssembly::InternalComponents::CreateInternalComponent ( enum InternalComponentTypeConstant TypeConstant, _bstr_t InternalComponentName, VARIANT_BOOL GroundContraint, struct InternalComponent * * InternalComponent, IDispatch * ParentLocalComponent, const _variant_t & MaterialLibraryName, const _variant_t & MaterialName ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0008\x000b\x4009\x0009\x080c\x080c", TypeConstant, (BSTR)InternalComponentName, GroundContraint, InternalComponent, ParentLocalComponent, &MaterialLibraryName, &MaterialName);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5212)
inline void TGAssembly::InternalComponents::PutShowBodyFeaturesOnly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5213)
inline VARIANT_BOOL TGAssembly::InternalComponents::GetShowBodyFeaturesOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IInternalComponentsAuto wrapper method implementations
//

#pragma implementation_key(5214)
inline TGFramework::ApplicationPtr TGAssembly::_IInternalComponentsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5215)
inline IDispatchPtr TGAssembly::_IInternalComponentsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5216)
inline TGAssembly::InternalComponentPtr TGAssembly::_IInternalComponentsAuto::Item ( const _variant_t & Index ) {
    struct InternalComponent * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return InternalComponentPtr(_result, false);
}

#pragma implementation_key(5217)
inline long TGAssembly::_IInternalComponentsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5218)
inline IUnknownPtr TGAssembly::_IInternalComponentsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5219)
inline HRESULT TGAssembly::_IInternalComponentsAuto::DeleteInternalComponent ( _bstr_t InternalComponentName ) {
    HRESULT _hr = raw_DeleteInternalComponent(InternalComponentName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5220)
inline IDispatchPtr TGAssembly::_IInternalComponentsAuto::CreateInternalComponent ( enum InternalComponentTypeConstant TypeConstant, _bstr_t InternalComponentName, VARIANT_BOOL GroundContraint, struct InternalComponent * * InternalComponent, IDispatch * ParentLocalComponent, const _variant_t & MaterialLibraryName, const _variant_t & MaterialName ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_CreateInternalComponent(TypeConstant, InternalComponentName, GroundContraint, InternalComponent, ParentLocalComponent, MaterialLibraryName, MaterialName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5221)
inline void TGAssembly::_IInternalComponentsAuto::PutShowBodyFeaturesOnly ( VARIANT_BOOL BodyFeaturesOnly ) {
    HRESULT _hr = put_ShowBodyFeaturesOnly(BodyFeaturesOnly);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5222)
inline VARIANT_BOOL TGAssembly::_IInternalComponentsAuto::GetShowBodyFeaturesOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowBodyFeaturesOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface EndCaps wrapper method implementations
//

#pragma implementation_key(5223)
inline TGFramework::ApplicationPtr TGAssembly::EndCaps::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5224)
inline TGAssembly::EndCapPtr TGAssembly::EndCaps::Item ( const _variant_t & Index ) {
    struct EndCap * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return EndCapPtr(_result, false);
}

#pragma implementation_key(5225)
inline long TGAssembly::EndCaps::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5226)
inline TGAssembly::EndCapPtr TGAssembly::EndCaps::Add ( long NumSegments, SAFEARRAY * SegmentIds, _bstr_t MaterialName, VARIANT_BOOL CreateECBasedOnCrossSection, VARIANT_BOOL Inset, double InsetValue, VARIANT_BOOL Offset, double OffsetValue, VARIANT_BOOL RevOffset, VARIANT_BOOL CornerTreatment, double ChamferFilletValue, double Thickness, VARIANT_BOOL Inward, enum EndCapTreatmentConstants EndCapTreatment ) {
    struct EndCap * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x2003\x0008\x000b\x000b\x0005\x000b\x0005\x000b\x000b\x0005\x0005\x000b\x0003", NumSegments, SegmentIds, (BSTR)MaterialName, CreateECBasedOnCrossSection, Inset, InsetValue, Offset, OffsetValue, RevOffset, CornerTreatment, ChamferFilletValue, Thickness, Inward, EndCapTreatment);
    return EndCapPtr(_result, false);
}

#pragma implementation_key(5227)
inline TGAssembly::EndCapPtr TGAssembly::EndCaps::AddEx ( long NumSegments, SAFEARRAY * SegmentIds, _bstr_t MaterialName, VARIANT_BOOL CreateECBasedOnCrossSection, VARIANT_BOOL Inset, double InsetValue, VARIANT_BOOL Offset, double OffsetValue, VARIANT_BOOL RevOffset, VARIANT_BOOL CornerTreatment, double ChamferFilletValue, double Thickness, enum EndCapTypeConstants eEndCapType, enum EndCapTreatmentConstants EndCapTreatment ) {
    struct EndCap * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x2003\x0008\x000b\x000b\x0005\x000b\x0005\x000b\x000b\x0005\x0005\x0003\x0003", NumSegments, SegmentIds, (BSTR)MaterialName, CreateECBasedOnCrossSection, Inset, InsetValue, Offset, OffsetValue, RevOffset, CornerTreatment, ChamferFilletValue, Thickness, eEndCapType, EndCapTreatment);
    return EndCapPtr(_result, false);
}

#pragma implementation_key(5228)
inline HRESULT TGAssembly::EndCaps::Delete ( struct EndCap * EndCap ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", EndCap);
}

//
// dispinterface EndCap wrapper method implementations
//

#pragma implementation_key(5229)
inline TGFramework::ApplicationPtr TGAssembly::EndCap::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5230)
inline _bstr_t TGAssembly::EndCap::GetMaterial ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5231)
inline void TGAssembly::EndCap::PutMaterial ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5232)
inline double TGAssembly::EndCap::GetThickness ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5233)
inline void TGAssembly::EndCap::PutThickness ( double _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5234)
inline enum TGAssembly::EndCapTypeConstants TGAssembly::EndCap::GetEndCapType ( ) {
    enum EndCapTypeConstants _result;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5235)
inline void TGAssembly::EndCap::PutEndCapType ( enum EndCapTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5236)
inline VARIANT_BOOL TGAssembly::EndCap::GetIsEndCapCreatedBasedOnCrossSection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5237)
inline void TGAssembly::EndCap::PutIsEndCapCreatedBasedOnCrossSection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5238)
inline double TGAssembly::EndCap::GetChamfer ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5239)
inline void TGAssembly::EndCap::PutChamfer ( double _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5240)
inline double TGAssembly::EndCap::GetFillet ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5241)
inline void TGAssembly::EndCap::PutFillet ( double _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5242)
inline double TGAssembly::EndCap::GetInset ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5243)
inline void TGAssembly::EndCap::PutInset ( double _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5244)
inline HRESULT TGAssembly::EndCap::ApplyOffset ( double dOffset, VARIANT_BOOL bCreatedBasedOnCrossSection, VARIANT_BOOL bReverseOffset, enum EndCapTypeConstants eEndCapType ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x000b\x000b\x0003", dOffset, bCreatedBasedOnCrossSection, bReverseOffset, eEndCapType);
}

#pragma implementation_key(5245)
inline HRESULT TGAssembly::EndCap::GetOffsetDetails ( double * dOffset, VARIANT_BOOL * bIsCreatedBasedOnCrossSection, VARIANT_BOOL * bIsReverseOffset, enum EndCapTypeConstants * eEndCapType ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x400b\x400b\x4003", dOffset, bIsCreatedBasedOnCrossSection, bIsReverseOffset, eEndCapType);
}

#pragma implementation_key(5246)
inline TGPart::SuppressVariablePtr TGAssembly::EndCap::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5247)
inline TGPart::SuppressVariablePtr TGAssembly::EndCap::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5248)
inline HRESULT TGAssembly::EndCap::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5249)
inline VARIANT_BOOL TGAssembly::EndCap::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IEndCapAuto wrapper method implementations
//

#pragma implementation_key(5250)
inline TGFramework::ApplicationPtr TGAssembly::_IEndCapAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5251)
inline _bstr_t TGAssembly::_IEndCapAuto::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5252)
inline void TGAssembly::_IEndCapAuto::PutMaterial ( _bstr_t bsMaterial ) {
    HRESULT _hr = put_Material(bsMaterial);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5253)
inline double TGAssembly::_IEndCapAuto::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5254)
inline void TGAssembly::_IEndCapAuto::PutThickness ( double dThickness ) {
    HRESULT _hr = put_Thickness(dThickness);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5255)
inline enum TGAssembly::EndCapTypeConstants TGAssembly::_IEndCapAuto::GetEndCapType ( ) {
    enum EndCapTypeConstants _result;
    HRESULT _hr = get_EndCapType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5256)
inline void TGAssembly::_IEndCapAuto::PutEndCapType ( enum EndCapTypeConstants eEndCapType ) {
    HRESULT _hr = put_EndCapType(eEndCapType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5257)
inline VARIANT_BOOL TGAssembly::_IEndCapAuto::GetIsEndCapCreatedBasedOnCrossSection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsEndCapCreatedBasedOnCrossSection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5258)
inline void TGAssembly::_IEndCapAuto::PutIsEndCapCreatedBasedOnCrossSection ( VARIANT_BOOL bIsEndCapCreatedBasedOnCrossSection ) {
    HRESULT _hr = put_IsEndCapCreatedBasedOnCrossSection(bIsEndCapCreatedBasedOnCrossSection);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5259)
inline double TGAssembly::_IEndCapAuto::GetChamfer ( ) {
    double _result = 0;
    HRESULT _hr = get_Chamfer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5260)
inline void TGAssembly::_IEndCapAuto::PutChamfer ( double dChamfer ) {
    HRESULT _hr = put_Chamfer(dChamfer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5261)
inline double TGAssembly::_IEndCapAuto::GetFillet ( ) {
    double _result = 0;
    HRESULT _hr = get_Fillet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5262)
inline void TGAssembly::_IEndCapAuto::PutFillet ( double dFillet ) {
    HRESULT _hr = put_Fillet(dFillet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5263)
inline double TGAssembly::_IEndCapAuto::GetInset ( ) {
    double _result = 0;
    HRESULT _hr = get_Inset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5264)
inline void TGAssembly::_IEndCapAuto::PutInset ( double dInset ) {
    HRESULT _hr = put_Inset(dInset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5265)
inline HRESULT TGAssembly::_IEndCapAuto::ApplyOffset ( double dOffset, VARIANT_BOOL bCreatedBasedOnCrossSection, VARIANT_BOOL bReverseOffset, enum EndCapTypeConstants eEndCapType ) {
    HRESULT _hr = raw_ApplyOffset(dOffset, bCreatedBasedOnCrossSection, bReverseOffset, eEndCapType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5266)
inline HRESULT TGAssembly::_IEndCapAuto::GetOffsetDetails ( double * dOffset, VARIANT_BOOL * bIsCreatedBasedOnCrossSection, VARIANT_BOOL * bIsReverseOffset, enum EndCapTypeConstants * eEndCapType ) {
    HRESULT _hr = raw_GetOffsetDetails(dOffset, bIsCreatedBasedOnCrossSection, bIsReverseOffset, eEndCapType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5267)
inline TGPart::SuppressVariablePtr TGAssembly::_IEndCapAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5268)
inline TGPart::SuppressVariablePtr TGAssembly::_IEndCapAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5269)
inline HRESULT TGAssembly::_IEndCapAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5270)
inline VARIANT_BOOL TGAssembly::_IEndCapAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IEndCapsAuto wrapper method implementations
//

#pragma implementation_key(5271)
inline TGFramework::ApplicationPtr TGAssembly::_IEndCapsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5272)
inline TGAssembly::EndCapPtr TGAssembly::_IEndCapsAuto::Item ( const _variant_t & Index ) {
    struct EndCap * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return EndCapPtr(_result, false);
}

#pragma implementation_key(5273)
inline IUnknownPtr TGAssembly::_IEndCapsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5274)
inline long TGAssembly::_IEndCapsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5275)
inline TGAssembly::EndCapPtr TGAssembly::_IEndCapsAuto::Add ( long NumSegments, SAFEARRAY * SegmentIds, _bstr_t MaterialName, VARIANT_BOOL CreateECBasedOnCrossSection, VARIANT_BOOL Inset, double InsetValue, VARIANT_BOOL Offset, double OffsetValue, VARIANT_BOOL RevOffset, VARIANT_BOOL CornerTreatment, double ChamferFilletValue, double Thickness, VARIANT_BOOL Inward, enum EndCapTreatmentConstants EndCapTreatment ) {
    struct EndCap * _result = 0;
    HRESULT _hr = raw_Add(NumSegments, SegmentIds, MaterialName, CreateECBasedOnCrossSection, Inset, InsetValue, Offset, OffsetValue, RevOffset, CornerTreatment, ChamferFilletValue, Thickness, Inward, EndCapTreatment, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return EndCapPtr(_result, false);
}

#pragma implementation_key(5276)
inline TGAssembly::EndCapPtr TGAssembly::_IEndCapsAuto::AddEx ( long NumSegments, SAFEARRAY * SegmentIds, _bstr_t MaterialName, VARIANT_BOOL CreateECBasedOnCrossSection, VARIANT_BOOL Inset, double InsetValue, VARIANT_BOOL Offset, double OffsetValue, VARIANT_BOOL RevOffset, VARIANT_BOOL CornerTreatment, double ChamferFilletValue, double Thickness, enum EndCapTypeConstants eEndCapType, enum EndCapTreatmentConstants EndCapTreatment ) {
    struct EndCap * _result = 0;
    HRESULT _hr = raw_AddEx(NumSegments, SegmentIds, MaterialName, CreateECBasedOnCrossSection, Inset, InsetValue, Offset, OffsetValue, RevOffset, CornerTreatment, ChamferFilletValue, Thickness, eEndCapType, EndCapTreatment, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return EndCapPtr(_result, false);
}

#pragma implementation_key(5277)
inline HRESULT TGAssembly::_IEndCapsAuto::Delete ( struct EndCap * EndCap ) {
    HRESULT _hr = raw_Delete(EndCap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface SuppressComponent wrapper method implementations
//

#pragma implementation_key(5278)
inline TGFramework::ApplicationPtr TGAssembly::SuppressComponent::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5279)
inline HRESULT TGAssembly::SuppressComponent::UnSuppress ( ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5280)
inline HRESULT TGAssembly::SuppressComponent::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5281)
inline _bstr_t TGAssembly::SuppressComponent::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5282)
inline long TGAssembly::SuppressComponent::GetOccurrenceID ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5283)
inline _bstr_t TGAssembly::SuppressComponent::GetOccurrenceFileName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5284)
inline IUnknownPtr TGAssembly::SuppressComponent::GetOccurrenceDocument ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5285)
inline TGPart::SuppressVariablePtr TGAssembly::SuppressComponent::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5286)
inline TGPart::SuppressVariablePtr TGAssembly::SuppressComponent::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5287)
inline HRESULT TGAssembly::SuppressComponent::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5288)
inline VARIANT_BOOL TGAssembly::SuppressComponent::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _ISuppressComponentAuto wrapper method implementations
//

#pragma implementation_key(5289)
inline TGFramework::ApplicationPtr TGAssembly::_ISuppressComponentAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5290)
inline HRESULT TGAssembly::_ISuppressComponentAuto::UnSuppress ( ) {
    HRESULT _hr = raw_UnSuppress();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5291)
inline HRESULT TGAssembly::_ISuppressComponentAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5292)
inline _bstr_t TGAssembly::_ISuppressComponentAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5293)
inline long TGAssembly::_ISuppressComponentAuto::GetOccurrenceID ( ) {
    long _result = 0;
    HRESULT _hr = get_OccurrenceID(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5294)
inline _bstr_t TGAssembly::_ISuppressComponentAuto::GetOccurrenceFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OccurrenceFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5295)
inline IUnknownPtr TGAssembly::_ISuppressComponentAuto::GetOccurrenceDocument ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get_OccurrenceDocument(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5296)
inline TGPart::SuppressVariablePtr TGAssembly::_ISuppressComponentAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5297)
inline TGPart::SuppressVariablePtr TGAssembly::_ISuppressComponentAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5298)
inline HRESULT TGAssembly::_ISuppressComponentAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5299)
inline VARIANT_BOOL TGAssembly::_ISuppressComponentAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AsmCADDirects wrapper method implementations
//

#pragma implementation_key(5300)
inline TGFramework::ApplicationPtr TGAssembly::AsmCADDirects::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5301)
inline IDispatchPtr TGAssembly::AsmCADDirects::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5302)
inline long TGAssembly::AsmCADDirects::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5303)
inline TGAssembly::AsmCADDirectPtr TGAssembly::AsmCADDirects::Add ( _bstr_t AsmCopyFileName ) {
    struct AsmCADDirect * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)AsmCopyFileName);
    return AsmCADDirectPtr(_result, false);
}

#pragma implementation_key(5304)
inline TGAssembly::AsmCADDirectPtr TGAssembly::AsmCADDirects::Item ( const _variant_t & Index ) {
    struct AsmCADDirect * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AsmCADDirectPtr(_result, false);
}

//
// dispinterface AsmCADDirect wrapper method implementations
//

#pragma implementation_key(5305)
inline TGFramework::ApplicationPtr TGAssembly::AsmCADDirect::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5306)
inline IDispatchPtr TGAssembly::AsmCADDirect::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5307)
inline HRESULT TGAssembly::AsmCADDirect::Update ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5308)
inline _bstr_t TGAssembly::AsmCADDirect::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5309)
inline void TGAssembly::AsmCADDirect::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5310)
inline HRESULT TGAssembly::AsmCADDirect::BreakFeatureLink ( ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5311)
inline HRESULT TGAssembly::AsmCADDirect::UpdateFeature ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5312)
inline HRESULT TGAssembly::AsmCADDirect::ChangeSourceFeature ( _bstr_t OldPath, _bstr_t NewPath ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)OldPath, (BSTR)NewPath);
}

#pragma implementation_key(5313)
inline _bstr_t TGAssembly::AsmCADDirect::SourcePath ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _IAsmCADDirectsAuto wrapper method implementations
//

#pragma implementation_key(5314)
inline TGFramework::ApplicationPtr TGAssembly::_IAsmCADDirectsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5315)
inline IDispatchPtr TGAssembly::_IAsmCADDirectsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5316)
inline long TGAssembly::_IAsmCADDirectsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5317)
inline TGAssembly::AsmCADDirectPtr TGAssembly::_IAsmCADDirectsAuto::Add ( _bstr_t AsmCopyFileName ) {
    struct AsmCADDirect * _result = 0;
    HRESULT _hr = raw_Add(AsmCopyFileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmCADDirectPtr(_result, false);
}

#pragma implementation_key(5318)
inline TGAssembly::AsmCADDirectPtr TGAssembly::_IAsmCADDirectsAuto::Item ( const _variant_t & Index ) {
    struct AsmCADDirect * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmCADDirectPtr(_result, false);
}

#pragma implementation_key(5319)
inline IUnknownPtr TGAssembly::_IAsmCADDirectsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface _IAsmCADDirectAuto wrapper method implementations
//

#pragma implementation_key(5320)
inline TGFramework::ApplicationPtr TGAssembly::_IAsmCADDirectAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5321)
inline IDispatchPtr TGAssembly::_IAsmCADDirectAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5322)
inline HRESULT TGAssembly::_IAsmCADDirectAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5323)
inline _bstr_t TGAssembly::_IAsmCADDirectAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5324)
inline void TGAssembly::_IAsmCADDirectAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5325)
inline HRESULT TGAssembly::_IAsmCADDirectAuto::BreakFeatureLink ( ) {
    HRESULT _hr = raw_BreakFeatureLink();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5326)
inline HRESULT TGAssembly::_IAsmCADDirectAuto::UpdateFeature ( ) {
    HRESULT _hr = raw_UpdateFeature();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5327)
inline HRESULT TGAssembly::_IAsmCADDirectAuto::ChangeSourceFeature ( _bstr_t OldPath, _bstr_t NewPath ) {
    HRESULT _hr = raw_ChangeSourceFeature(OldPath, NewPath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5328)
inline _bstr_t TGAssembly::_IAsmCADDirectAuto::SourcePath ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_SourcePath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface _IAssemblyDocumentAuto wrapper method implementations
//

#pragma implementation_key(5329)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5330)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyDocumentAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5331)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::Close ( const _variant_t & SaveChanges, const _variant_t & FileName, const _variant_t & RouteWorkbook ) {
    HRESULT _hr = raw_Close(SaveChanges, FileName, RouteWorkbook);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5332)
inline _bstr_t TGAssembly::_IAssemblyDocumentAuto::GetFullName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FullName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5333)
inline _bstr_t TGAssembly::_IAssemblyDocumentAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5334)
inline TGFramework::ApplicationPtr TGAssembly::_IAssemblyDocumentAuto::GetParent ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5335)
inline _bstr_t TGAssembly::_IAssemblyDocumentAuto::GetPath ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Path(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5336)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::PrintOut ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & PrintRange, const _variant_t & Sheets, const _variant_t & ColorAsBlack, const _variant_t & Collate ) {
    HRESULT _hr = raw_PrintOut(Printer, NumCopies, Orientation, PaperSize, Scale, PrintToFile, OutputFileName, PrintRange, Sheets, ColorAsBlack, Collate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5337)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReadOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5338)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::GetRoutingSlip ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_RoutingSlip(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5339)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5340)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::SaveAs ( _bstr_t NewName, const _variant_t & IsATemplate, const _variant_t & FileFormat, const _variant_t & ReadOnlyEnforced, const _variant_t & ReadOnlyRecommended, const _variant_t & NewStatus, const _variant_t & CreateBackup, const _variant_t & UpdateLinkInContainer, const _variant_t & UpdateAllLinksInContainer ) {
    HRESULT _hr = raw_SaveAs(NewName, IsATemplate, FileFormat, ReadOnlyEnforced, ReadOnlyRecommended, NewStatus, CreateBackup, UpdateLinkInContainer, UpdateAllLinksInContainer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5341)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::SaveCopyAs ( _bstr_t Name ) {
    HRESULT _hr = raw_SaveCopyAs(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5342)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::SaveAsJT ( _bstr_t NewName, const _variant_t & Include_PreciseGeom, const _variant_t & Prod_Structure_Option, const _variant_t & Export_PMI, const _variant_t & Export_CoordinateSystem, const _variant_t & Export_3DBodies, const _variant_t & NumberofLODs, const _variant_t & JTFileUnit, const _variant_t & Write_Which_Files, const _variant_t & Use_Simplified_TopAsm, const _variant_t & Use_Simplified_SubAsm, const _variant_t & Use_Simplified_Part, const _variant_t & EnableDefaultOutputPath, const _variant_t & IncludeSEProperties, const _variant_t & Export_VisiblePartsOnly, const _variant_t & Export_VisibleConstructionsOnly, const _variant_t & RemoveUnsafeCharacters, const _variant_t & ExportSEPartFileAsSingleJTFile ) {
    HRESULT _hr = raw_SaveAsJT(NewName, Include_PreciseGeom, Prod_Structure_Option, Export_PMI, Export_CoordinateSystem, Export_3DBodies, NumberofLODs, JTFileUnit, Write_Which_Files, Use_Simplified_TopAsm, Use_Simplified_SubAsm, Use_Simplified_Part, EnableDefaultOutputPath, IncludeSEProperties, Export_VisiblePartsOnly, Export_VisibleConstructionsOnly, RemoveUnsafeCharacters, ExportSEPartFileAsSingleJTFile);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5343)
inline _bstr_t TGAssembly::_IAssemblyDocumentAuto::SaveAsBIDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    HRESULT _hr = raw_SaveAsBIDM(FilePath, DocumentNumber, Revision, Title, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5344)
inline _bstr_t TGAssembly::_IAssemblyDocumentAuto::ReviseBIDM ( _bstr_t FilePath, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    HRESULT _hr = raw_ReviseBIDM(FilePath, Revision, Title, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5345)
inline TGFramework::SelectSetPtr TGAssembly::_IAssemblyDocumentAuto::GetSelectSet ( ) {
    struct TGFramework::SelectSet * _result = 0;
    HRESULT _hr = get_SelectSet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::SelectSetPtr(_result, false);
}

#pragma implementation_key(5346)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::SendMail ( const _variant_t & Recipients, const _variant_t & Subject, const _variant_t & ReturnReceipt ) {
    HRESULT _hr = raw_SendMail(Recipients, Subject, ReturnReceipt);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5347)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::GetSummaryInfo ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_SummaryInfo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5348)
inline TGFramework::WindowsPtr TGAssembly::_IAssemblyDocumentAuto::GetWindows ( ) {
    struct TGFramework::Windows * _result = 0;
    HRESULT _hr = get_Windows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::WindowsPtr(_result, false);
}

#pragma implementation_key(5349)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::GetProperties ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Properties(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5350)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetIsTemplate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTemplate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5351)
inline void TGAssembly::_IAssemblyDocumentAuto::PutIsTemplate ( VARIANT_BOOL IsTemplate ) {
    HRESULT _hr = put_IsTemplate(IsTemplate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5352)
inline enum TGFramework::DocumentStatus TGAssembly::_IAssemblyDocumentAuto::GetStatus ( ) {
    enum TGFramework::DocumentStatus _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5353)
inline void TGAssembly::_IAssemblyDocumentAuto::PutStatus ( enum TGFramework::DocumentStatus Status ) {
    HRESULT _hr = put_Status(Status);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5354)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::EditProperties ( ) {
    HRESULT _hr = raw_EditProperties();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5355)
inline TGFramework::UnitsOfMeasurePtr TGAssembly::_IAssemblyDocumentAuto::GetUnitsOfMeasure ( ) {
    struct TGFramework::UnitsOfMeasure * _result = 0;
    HRESULT _hr = get_UnitsOfMeasure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::UnitsOfMeasurePtr(_result, false);
}

#pragma implementation_key(5356)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::GetActiveSketch ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_ActiveSketch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5357)
inline enum TGFramework::DocumentTypeConstants TGAssembly::_IAssemblyDocumentAuto::GetType ( ) {
    enum TGFramework::DocumentTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5358)
inline IUnknownPtr TGAssembly::_IAssemblyDocumentAuto::GetDocumentEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_DocumentEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5359)
inline IUnknownPtr TGAssembly::_IAssemblyDocumentAuto::GetRootStorage ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get_RootStorage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5360)
inline IUnknownPtr TGAssembly::_IAssemblyDocumentAuto::GetAddInsStorage ( _bstr_t Name, long grfMode ) {
    IUnknown * _result = 0;
    HRESULT _hr = get_AddInsStorage(Name, grfMode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5361)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetDirty ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Dirty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5362)
inline void TGAssembly::_IAssemblyDocumentAuto::PutDirty ( VARIANT_BOOL Dirty ) {
    HRESULT _hr = put_Dirty(Dirty);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5363)
inline TGFramework::AttributeQueryPtr TGAssembly::_IAssemblyDocumentAuto::GetAttributeQuery ( ) {
    struct TGFramework::AttributeQuery * _result = 0;
    HRESULT _hr = get_AttributeQuery(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::AttributeQueryPtr(_result, false);
}

#pragma implementation_key(5364)
inline _bstr_t TGAssembly::_IAssemblyDocumentAuto::GetCreatedVersion ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CreatedVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5365)
inline _bstr_t TGAssembly::_IAssemblyDocumentAuto::GetLastSavedVersion ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LastSavedVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5366)
inline TGFramework::HighlightSetsPtr TGAssembly::_IAssemblyDocumentAuto::GetHighlightSets ( ) {
    struct TGFramework::HighlightSets * _result = 0;
    HRESULT _hr = get_HighlightSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::HighlightSetsPtr(_result, false);
}

#pragma implementation_key(5367)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetInPlaceActivated ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_InPlaceActivated(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5368)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::SeekWriteAccess ( VARIANT_BOOL * WriteAccess ) {
    HRESULT _hr = raw_SeekWriteAccess(WriteAccess);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5369)
inline long TGAssembly::_IAssemblyDocumentAuto::GetUndoSteps ( ) {
    long _result = 0;
    HRESULT _hr = get_UndoSteps(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5370)
inline void TGAssembly::_IAssemblyDocumentAuto::PutUndoSteps ( long NumberOfUndoSteps ) {
    HRESULT _hr = put_UndoSteps(NumberOfUndoSteps);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5371)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::CreatePreview ( ) {
    HRESULT _hr = raw_CreatePreview();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5372)
inline void TGAssembly::_IAssemblyDocumentAuto::PutReadOnly ( VARIANT_BOOL ReadOnly ) {
    HRESULT _hr = put_ReadOnly(ReadOnly);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5373)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::SeekReadOnlyAccess ( VARIANT_BOOL * ReadOnlyAccess ) {
    HRESULT _hr = raw_SeekReadOnlyAccess(ReadOnlyAccess);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5374)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::ImportStyles2 ( enum TGFramework::seStyleTypeConstants StyleType, VARIANT_BOOL bReplace, IDispatch * pSrcDocument ) {
    HRESULT _hr = raw_ImportStyles2(StyleType, bReplace, pSrcDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5375)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetIsInsightFile ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsInsightFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5376)
inline TGFramework::NamedViewsPtr TGAssembly::_IAssemblyDocumentAuto::GetNamedViews ( ) {
    struct TGFramework::NamedViews * _result = 0;
    HRESULT _hr = get_NamedViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::NamedViewsPtr(_result, false);
}

#pragma implementation_key(5377)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::GetRegisteredCustomPropertiesBiDM ( VARIANT * varPropInfo ) {
    HRESULT _hr = raw_GetRegisteredCustomPropertiesBiDM(varPropInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5378)
inline _bstr_t TGAssembly::_IAssemblyDocumentAuto::SaveAsWithCustomPropertiesBIDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo ) {
    BSTR _result = 0;
    HRESULT _hr = raw_SaveAsWithCustomPropertiesBIDM(FilePath, DocumentNumber, Revision, Title, varPropInfo, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5379)
inline _bstr_t TGAssembly::_IAssemblyDocumentAuto::ReviseWithCustomPropertiesBIDM ( _bstr_t FilePath, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo ) {
    BSTR _result = 0;
    HRESULT _hr = raw_ReviseWithCustomPropertiesBIDM(FilePath, Revision, Title, varPropInfo, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5380)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::SaveAsPRC ( _bstr_t FileName ) {
    HRESULT _hr = raw_SaveAsPRC(FileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5381)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::GetVariables ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Variables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5382)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::GetInterpartLinks ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_InterpartLinks(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5383)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::FreezeAllInterpartLinks ( ) {
    HRESULT _hr = raw_FreezeAllInterpartLinks();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5384)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::BreakAllInterpartLinks ( ) {
    HRESULT _hr = raw_BreakAllInterpartLinks();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5385)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::ThawAllInterpartLinks ( ) {
    HRESULT _hr = raw_ThawAllInterpartLinks();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5386)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::HasInterpartLinks ( VARIANT_BOOL * pbHasInterpartLinks ) {
    HRESULT _hr = raw_HasInterpartLinks(pbHasInterpartLinks);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5387)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::GetInContextAssemblyNameForInterpartLinks ( BSTR * pbstrAssemblyName ) {
    HRESULT _hr = raw_GetInContextAssemblyNameForInterpartLinks(pbstrAssemblyName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5388)
inline _variant_t TGAssembly::_IAssemblyDocumentAuto::NewWindow ( const _variant_t & NewWindowOptions, const _variant_t & Environment ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_NewWindow(NewWindowOptions, Environment, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(5389)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::NewNavigatorWindow ( ) {
    HRESULT _hr = raw_NewNavigatorWindow();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5390)
inline TGAssembly::PartsPtr TGAssembly::_IAssemblyDocumentAuto::GetParts ( ) {
    struct Parts * _result = 0;
    HRESULT _hr = get_Parts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartsPtr(_result, false);
}

#pragma implementation_key(5391)
inline TGAssembly::Relations3dPtr TGAssembly::_IAssemblyDocumentAuto::GetRelations3d ( ) {
    struct Relations3d * _result = 0;
    HRESULT _hr = get_Relations3d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relations3dPtr(_result, false);
}

#pragma implementation_key(5392)
inline TGAssembly::PhysicalPropertiesPtr TGAssembly::_IAssemblyDocumentAuto::GetPhysicalProperties ( ) {
    struct PhysicalProperties * _result = 0;
    HRESULT _hr = get_PhysicalProperties(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PhysicalPropertiesPtr(_result, false);
}

#pragma implementation_key(5393)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::GetFaceStyles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FaceStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5394)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::CreateReference ( struct Occurrence * Occurrence, const _variant_t & Entity ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_CreateReference(Occurrence, Entity, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5395)
inline TGAssembly::OccurrencesPtr TGAssembly::_IAssemblyDocumentAuto::GetOccurrences ( ) {
    struct Occurrences * _result = 0;
    HRESULT _hr = get_Occurrences(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencesPtr(_result, false);
}

#pragma implementation_key(5396)
inline TGAssembly::AsmRefPlanesPtr TGAssembly::_IAssemblyDocumentAuto::GetAsmRefPlanes ( ) {
    struct AsmRefPlanes * _result = 0;
    HRESULT _hr = get_AsmRefPlanes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmRefPlanesPtr(_result, false);
}

#pragma implementation_key(5397)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::CheckInterference ( long NumElementsSet1, SAFEARRAY * * Set1, enum InterferenceStatusConstants * Status, const _variant_t & ComparisonMethod, const _variant_t & NumElementsSet2, const _variant_t & Set2, const _variant_t & AddInterferenceAsOccurrence, const _variant_t & ReportFilename, const _variant_t & ReportType, VARIANT * NumInterferences, VARIANT * InterferingPartsSet1, VARIANT * InterferingPartsOtherSet, VARIANT * ConfirmedInterference, VARIANT * InterferenceOccurrence, const _variant_t & IgnoreThreadInterferences ) {
    HRESULT _hr = raw_CheckInterference(NumElementsSet1, Set1, Status, ComparisonMethod, NumElementsSet2, Set2, AddInterferenceAsOccurrence, ReportFilename, ReportType, NumInterferences, InterferingPartsSet1, InterferingPartsOtherSet, ConfirmedInterference, InterferenceOccurrence, IgnoreThreadInterferences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5398)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::BindKeyToObject ( SAFEARRAY * * ReferenceKey, IDispatch * * Object ) {
    HRESULT _hr = raw_BindKeyToObject(ReferenceKey, Object);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5399)
inline TGPart::CoordinateSystemsPtr TGAssembly::_IAssemblyDocumentAuto::GetCoordinateSystems ( ) {
    struct TGPart::CoordinateSystems * _result = 0;
    HRESULT _hr = get_CoordinateSystems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::CoordinateSystemsPtr(_result, false);
}

#pragma implementation_key(5400)
inline TGPart::StudyOwnerPtr TGAssembly::_IAssemblyDocumentAuto::GetStudyOwner ( ) {
    struct TGPart::StudyOwner * _result = 0;
    HRESULT _hr = get_StudyOwner(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::StudyOwnerPtr(_result, false);
}

#pragma implementation_key(5401)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::MinimumDistance ( IDispatch * Element1, IDispatch * Element2, double * Distance, SAFEARRAY * * Point1, SAFEARRAY * * Point2 ) {
    HRESULT _hr = raw_MinimumDistance(Element1, Element2, Distance, Point1, Point2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5402)
inline IUnknownPtr TGAssembly::_IAssemblyDocumentAuto::GetAssemblyRecomputeEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_AssemblyRecomputeEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5403)
inline TGAssembly::LayoutsPtr TGAssembly::_IAssemblyDocumentAuto::GetLayouts ( ) {
    struct Layouts * _result = 0;
    HRESULT _hr = get_Layouts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LayoutsPtr(_result, false);
}

#pragma implementation_key(5404)
inline TGAssembly::LineSegmentsPtr TGAssembly::_IAssemblyDocumentAuto::GetLineSegments ( ) {
    struct LineSegments * _result = 0;
    HRESULT _hr = get_LineSegments(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LineSegmentsPtr(_result, false);
}

#pragma implementation_key(5405)
inline TGAssembly::SegmentsPtr TGAssembly::_IAssemblyDocumentAuto::GetSegments ( ) {
    struct Segments * _result = 0;
    HRESULT _hr = get_Segments(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SegmentsPtr(_result, false);
}

#pragma implementation_key(5406)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::GetGlobalParameter ( enum AssemblyGlobalConstants Parameter, VARIANT * Value ) {
    HRESULT _hr = raw_GetGlobalParameter(Parameter, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5407)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::SetGlobalParameter ( enum AssemblyGlobalConstants Parameter, const _variant_t & Value ) {
    HRESULT _hr = raw_SetGlobalParameter(Parameter, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5408)
inline TGFramework::SensorsPtr TGAssembly::_IAssemblyDocumentAuto::GetSensors ( ) {
    struct TGFramework::Sensors * _result = 0;
    HRESULT _hr = get_Sensors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::SensorsPtr(_result, false);
}

#pragma implementation_key(5409)
inline long TGAssembly::_IAssemblyDocumentAuto::GetCutawaysCount ( ) {
    long _result = 0;
    HRESULT _hr = get_CutawaysCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5410)
inline long TGAssembly::_IAssemblyDocumentAuto::GetExplosionsCount ( ) {
    long _result = 0;
    HRESULT _hr = get_ExplosionsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5411)
inline TGAssembly::ArcSegmentsPtr TGAssembly::_IAssemblyDocumentAuto::GetArcSegments ( ) {
    struct ArcSegments * _result = 0;
    HRESULT _hr = get_ArcSegments(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ArcSegmentsPtr(_result, false);
}

#pragma implementation_key(5412)
inline TGAssembly::SegmentRelations3dPtr TGAssembly::_IAssemblyDocumentAuto::GetSegmentRelations3d ( ) {
    struct SegmentRelations3d * _result = 0;
    HRESULT _hr = get_SegmentRelations3d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SegmentRelations3dPtr(_result, false);
}

#pragma implementation_key(5413)
inline TGAssembly::QueriesPtr TGAssembly::_IAssemblyDocumentAuto::GetQueries ( ) {
    struct Queries * _result = 0;
    HRESULT _hr = get_Queries(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return QueriesPtr(_result, false);
}

#pragma implementation_key(5414)
inline TGFramework::SelectSetPtr TGAssembly::_IAssemblyDocumentAuto::GetRelationshipsSelectSet ( ) {
    struct TGFramework::SelectSet * _result = 0;
    HRESULT _hr = get_RelationshipsSelectSet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::SelectSetPtr(_result, false);
}

#pragma implementation_key(5415)
inline TGAssembly::AssemblyFamilyMembersPtr TGAssembly::_IAssemblyDocumentAuto::GetAssemblyFamilyMembers ( ) {
    struct AssemblyFamilyMembers * _result = 0;
    HRESULT _hr = get_AssemblyFamilyMembers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFamilyMembersPtr(_result, false);
}

#pragma implementation_key(5416)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetIsFileFamilyByDocument ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsFileFamilyByDocument(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5417)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetIsFileAlternatePositionByDocument ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsFileAlternatePositionByDocument(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5418)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::CreateFamilyFile ( _bstr_t FirstMemberName, _bstr_t SecondMemberName, VARIANT_BOOL bCreateAlternatePosition ) {
    HRESULT _hr = raw_CreateFamilyFile(FirstMemberName, SecondMemberName, bCreateAlternatePosition);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5419)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::DisperseSubassembly ( IDispatch * Subassembly, VARIANT_BOOL bAllOccurrences ) {
    HRESULT _hr = raw_DisperseSubassembly(Subassembly, bAllOccurrences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5420)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::TransferOccurrences ( SAFEARRAY * * OccurrencesToTransfer, const _variant_t & Subassembly ) {
    HRESULT _hr = raw_TransferOccurrences(OccurrencesToTransfer, Subassembly);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5421)
inline TGAssembly::OccurrencePtr TGAssembly::_IAssemblyDocumentAuto::BundleOccurrences ( SAFEARRAY * * OccurrencesToTransfer, _bstr_t OccurrenceFileName, const _variant_t & TemplateFileName, const _variant_t & Subassembly ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = raw_BundleOccurrences(OccurrencesToTransfer, OccurrenceFileName, TemplateFileName, Subassembly, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(5422)
inline TGAssembly::AssemblyPatternsPtr TGAssembly::_IAssemblyDocumentAuto::GetAssemblyPatterns ( ) {
    struct AssemblyPatterns * _result = 0;
    HRESULT _hr = get_AssemblyPatterns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPatternsPtr(_result, false);
}

#pragma implementation_key(5423)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::MeasureAngle ( IDispatch * Element1, IDispatch * Element2, double * TrueAngle, double * ApparentAngle, const _variant_t & Element3 ) {
    HRESULT _hr = raw_MeasureAngle(Element1, Element2, TrueAngle, ApparentAngle, Element3);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5424)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::NormalDistance ( IDispatch * Element1, IDispatch * Element2, double * TrueDistance, double * ApparentDistance, double * DeltaX, double * DeltaY, double * DeltaZ, const _variant_t & CoordinateSystem ) {
    HRESULT _hr = raw_NormalDistance(Element1, Element2, TrueDistance, ApparentDistance, DeltaX, DeltaY, DeltaZ, CoordinateSystem);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5425)
inline TGAssembly::ConfigurationsPtr TGAssembly::_IAssemblyDocumentAuto::GetConfigurations ( ) {
    struct Configurations * _result = 0;
    HRESULT _hr = get_Configurations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ConfigurationsPtr(_result, false);
}

#pragma implementation_key(5426)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::RenameFile ( _bstr_t OldPath, _bstr_t NewPath ) {
    HRESULT _hr = raw_RenameFile(OldPath, NewPath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5427)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::SetExternalPaths ( SAFEARRAY * * VecUnopenedPath ) {
    HRESULT _hr = raw_SetExternalPaths(VecUnopenedPath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5428)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::UpdateExternalPaths ( ) {
    HRESULT _hr = raw_UpdateExternalPaths();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5429)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::GetViewStyles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_ViewStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5430)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::ImportStyles ( _bstr_t FileName, const _variant_t & Overwrite ) {
    HRESULT _hr = raw_ImportStyles(FileName, Overwrite);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5431)
inline TGAssembly::WireRunsPtr TGAssembly::_IAssemblyDocumentAuto::GetWireRuns ( ) {
    struct WireRuns * _result = 0;
    HRESULT _hr = get_WireRuns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WireRunsPtr(_result, false);
}

#pragma implementation_key(5432)
inline TGAssembly::WirePathsPtr TGAssembly::_IAssemblyDocumentAuto::GetWirePaths ( ) {
    struct WirePaths * _result = 0;
    HRESULT _hr = get_WirePaths(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WirePathsPtr(_result, false);
}

#pragma implementation_key(5433)
inline TGAssembly::AssemblyPropertiesPtr TGAssembly::_IAssemblyDocumentAuto::GetAssemblyProperties ( ) {
    struct AssemblyProperties * _result = 0;
    HRESULT _hr = get_AssemblyProperties(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyPropertiesPtr(_result, false);
}

#pragma implementation_key(5434)
inline TGAssembly::CurveSegmentsPtr TGAssembly::_IAssemblyDocumentAuto::GetCurveSegments ( ) {
    struct CurveSegments * _result = 0;
    HRESULT _hr = get_CurveSegments(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CurveSegmentsPtr(_result, false);
}

#pragma implementation_key(5435)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::GenerateWireReport ( enum AssemblyReportTypeConstants ReportType, const _variant_t & FileNameToSaveReport, int FieldsToGenerate ) {
    HRESULT _hr = raw_GenerateWireReport(ReportType, FileNameToSaveReport, FieldsToGenerate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5436)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::ActivateAll ( ) {
    HRESULT _hr = raw_ActivateAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5437)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::UpdateAll ( ) {
    HRESULT _hr = raw_UpdateAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5438)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::GetContainerDocumentAndMatrixOfIPADoc ( IDispatch * * ContainerDocument, SAFEARRAY * * Matrix ) {
    HRESULT _hr = raw_GetContainerDocumentAndMatrixOfIPADoc(ContainerDocument, Matrix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5439)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::CopySketch ( IDispatch * SourceLayoutOrSketch, IDispatch * TargetPartOrAssembly, VARIANT_BOOL bAssociativeCopy, VARIANT * pvCopySketchErrorStatus ) {
    HRESULT _hr = raw_CopySketch(SourceLayoutOrSketch, TargetPartOrAssembly, bAssociativeCopy, pvCopySketchErrorStatus);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5440)
inline long TGAssembly::_IAssemblyDocumentAuto::GetGeometricVersion ( ) {
    long _result = 0;
    HRESULT _hr = get_GeometricVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5441)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetIsGeometricVersionDirty ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsGeometricVersionDirty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5442)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::GetDimensionStyles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_DimensionStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5443)
inline TGFramework::LayersPtr TGAssembly::_IAssemblyDocumentAuto::GetLayers ( ) {
    struct TGFramework::Layers * _result = 0;
    HRESULT _hr = get_Layers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::LayersPtr(_result, false);
}

#pragma implementation_key(5444)
inline TGPart::MeasureVariablePtr TGAssembly::_IAssemblyDocumentAuto::AddMeasureVariable ( enum TGPart::MeasureVariableTypeConstants Type, enum TGPart::MeasureVariableValueConstants ValueType, IDispatch * Geom1, IDispatch * Geom2, const _variant_t & Geom3 ) {
    struct TGPart::MeasureVariable * _result = 0;
    HRESULT _hr = raw_AddMeasureVariable(Type, ValueType, Geom1, Geom2, Geom3, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::MeasureVariablePtr(_result, false);
}

#pragma implementation_key(5445)
inline TGAssembly::VirtualComponentOccurrencesPtr TGAssembly::_IAssemblyDocumentAuto::GetVirtualComponentOccurrences ( ) {
    struct VirtualComponentOccurrences * _result = 0;
    HRESULT _hr = get_VirtualComponentOccurrences(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return VirtualComponentOccurrencesPtr(_result, false);
}

#pragma implementation_key(5446)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::PublishVirtualComponents ( ) {
    HRESULT _hr = raw_PublishVirtualComponents();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5447)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetHidePreviousLevel ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePreviousLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5448)
inline void TGAssembly::_IAssemblyDocumentAuto::PutHidePreviousLevel ( VARIANT_BOOL bHidePreviousLevel ) {
    HRESULT _hr = put_HidePreviousLevel(bHidePreviousLevel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5449)
inline long TGAssembly::_IAssemblyDocumentAuto::GetProfileUndoSteps ( ) {
    long _result = 0;
    HRESULT _hr = get_ProfileUndoSteps(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5450)
inline void TGAssembly::_IAssemblyDocumentAuto::PutProfileUndoSteps ( long NumberOfUndoSteps ) {
    HRESULT _hr = put_ProfileUndoSteps(NumberOfUndoSteps);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5451)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::CreateOrEditSimplifiedAssembly ( long NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double dExcludeRangeRatio, long NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude ) {
    HRESULT _hr = raw_CreateOrEditSimplifiedAssembly(NumOccurrenceExclude, OccurrenceExclude, dExcludeRangeRatio, NumOccurrenceInclude, OccurrenceInclude);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5452)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::GetSimplifiedAssemblyInputs ( long * NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double * dExcludeRangeRatio, long * NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude ) {
    HRESULT _hr = raw_GetSimplifiedAssemblyInputs(NumOccurrenceExclude, OccurrenceExclude, dExcludeRangeRatio, NumOccurrenceInclude, OccurrenceInclude);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5453)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::UpdateSimplifiedAssembly ( ) {
    HRESULT _hr = raw_UpdateSimplifiedAssembly();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5454)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetIsAssemblySimplified ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAssemblySimplified(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5455)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::DeleteSimplifiedAssembly ( ) {
    HRESULT _hr = raw_DeleteSimplifiedAssembly();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5456)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::SaveSimplifiedAssemblyAs ( _bstr_t SaveFileName ) {
    HRESULT _hr = raw_SaveSimplifiedAssemblyAs(SaveFileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5457)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetIsSimplifyStateActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSimplifyStateActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5458)
inline TGAssembly::StructuralFramesPtr TGAssembly::_IAssemblyDocumentAuto::GetStructuralFrames ( ) {
    struct StructuralFrames * _result = 0;
    HRESULT _hr = get_StructuralFrames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return StructuralFramesPtr(_result, false);
}

#pragma implementation_key(5459)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetHasCapturedRelationships ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasCapturedRelationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5460)
inline TGAssembly::AssemblyFeaturesPtr TGAssembly::_IAssemblyDocumentAuto::GetAssemblyFeatures ( ) {
    struct AssemblyFeatures * _result = 0;
    HRESULT _hr = get_AssemblyFeatures(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyFeaturesPtr(_result, false);
}

#pragma implementation_key(5461)
inline TGAssembly::AssemblyDrivenPartFeaturesPtr TGAssembly::_IAssemblyDocumentAuto::GetAssemblyDrivenPartFeatures ( ) {
    struct AssemblyDrivenPartFeatures * _result = 0;
    HRESULT _hr = get_AssemblyDrivenPartFeatures(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyDrivenPartFeaturesPtr(_result, false);
}

#pragma implementation_key(5462)
inline long TGAssembly::_IAssemblyDocumentAuto::GetCapturedRelationshipCount ( ) {
    long _result = 0;
    HRESULT _hr = get_CapturedRelationshipCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5463)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::GetCapturedRelationshipInformation ( SAFEARRAY * * RelationshipTypes, SAFEARRAY * * OffsetTypes, SAFEARRAY * * Offsets, VARIANT * Faces ) {
    HRESULT _hr = raw_GetCapturedRelationshipInformation(RelationshipTypes, OffsetTypes, Offsets, Faces);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5464)
inline TGAssembly::PipesPtr TGAssembly::_IAssemblyDocumentAuto::GetPipes ( ) {
    struct Pipes * _result = 0;
    HRESULT _hr = get_Pipes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PipesPtr(_result, false);
}

#pragma implementation_key(5465)
inline TGAssembly::ComponentLayoutsPtr TGAssembly::_IAssemblyDocumentAuto::GetComponentLayouts ( ) {
    struct ComponentLayouts * _result = 0;
    HRESULT _hr = get_ComponentLayouts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ComponentLayoutsPtr(_result, false);
}

#pragma implementation_key(5466)
inline TGAssembly::PathsPtr TGAssembly::_IAssemblyDocumentAuto::GetPaths ( ) {
    struct Paths * _result = 0;
    HRESULT _hr = get_Paths(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PathsPtr(_result, false);
}

#pragma implementation_key(5467)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::UpdateDocument ( const _variant_t & FutureUse1, const _variant_t & FutureUse2 ) {
    HRESULT _hr = raw_UpdateDocument(FutureUse1, FutureUse2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5468)
inline TGAssembly::HarnessesPtr TGAssembly::_IAssemblyDocumentAuto::GetHarnesses ( ) {
    struct Harnesses * _result = 0;
    HRESULT _hr = get_Harnesses(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return HarnessesPtr(_result, false);
}

#pragma implementation_key(5469)
inline TGPart::LabelWeldDataCollectionPtr TGAssembly::_IAssemblyDocumentAuto::GetLabelWeldDataCollection ( ) {
    struct TGPart::LabelWeldDataCollection * _result = 0;
    HRESULT _hr = get_LabelWeldDataCollection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::LabelWeldDataCollectionPtr(_result, false);
}

#pragma implementation_key(5470)
inline void TGAssembly::_IAssemblyDocumentAuto::PutWeldmentAssembly ( VARIANT_BOOL IsWeldmentAssembly ) {
    HRESULT _hr = put_WeldmentAssembly(IsWeldmentAssembly);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5471)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetWeldmentAssembly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WeldmentAssembly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5472)
inline void TGAssembly::_IAssemblyDocumentAuto::PutWeldmentAssemblyBeadMaterial ( _bstr_t BeadMaterial ) {
    HRESULT _hr = put_WeldmentAssemblyBeadMaterial(BeadMaterial);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5473)
inline _bstr_t TGAssembly::_IAssemblyDocumentAuto::GetWeldmentAssemblyBeadMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_WeldmentAssemblyBeadMaterial(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5474)
inline void TGAssembly::_IAssemblyDocumentAuto::PutWeldmentAssemblyBeadDensity ( double BeadDensity ) {
    HRESULT _hr = put_WeldmentAssemblyBeadDensity(BeadDensity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5475)
inline double TGAssembly::_IAssemblyDocumentAuto::GetWeldmentAssemblyBeadDensity ( ) {
    double _result = 0;
    HRESULT _hr = get_WeldmentAssemblyBeadDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5476)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::GetBaseStyle ( enum AssemblyBaseStylesConstants BaseStyleType, struct TGFramework::FaceStyle * * BaseStyle ) {
    HRESULT _hr = raw_GetBaseStyle(BaseStyleType, BaseStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5477)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::SetBaseStyle ( enum AssemblyBaseStylesConstants BaseStyleType, struct TGFramework::FaceStyle * BaseStyle ) {
    HRESULT _hr = raw_SetBaseStyle(BaseStyleType, BaseStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5478)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::SaveModelAs ( IDispatch * Occurrence, _bstr_t SaveFileName ) {
    HRESULT _hr = raw_SaveModelAs(Occurrence, SaveFileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5479)
inline void TGAssembly::_IAssemblyDocumentAuto::PutActivateSimplifiedAssembly ( VARIANT_BOOL bActivate ) {
    HRESULT _hr = put_ActivateSimplifiedAssembly(bActivate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5480)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetActivateSimplifiedAssembly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ActivateSimplifiedAssembly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5481)
inline TGPart::HoleDataCollectionPtr TGAssembly::_IAssemblyDocumentAuto::GetHoleDataCollection ( ) {
    struct TGPart::HoleDataCollection * _result = 0;
    HRESULT _hr = get_HoleDataCollection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::HoleDataCollectionPtr(_result, false);
}

#pragma implementation_key(5482)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::GenerateWireHarnessReport ( enum AssemblyWireHarnessReportTypeConstants ReportType, const _variant_t & FileNameToSaveReport, const _variant_t & Selection, const _variant_t & Window, const _variant_t & NumberOfReportProperties, const _variant_t & AssemblyReportProperties, const _variant_t & NumberOfSortItems, const _variant_t & SortProperties, const _variant_t & SortOrder, const _variant_t & Justification, const _variant_t & UpdateTemplate ) {
    HRESULT _hr = raw_GenerateWireHarnessReport(ReportType, FileNameToSaveReport, Selection, Window, NumberOfReportProperties, AssemblyReportProperties, NumberOfSortItems, SortProperties, SortOrder, Justification, UpdateTemplate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5483)
inline TGAssembly::AssemblyBodiesPtr TGAssembly::_IAssemblyDocumentAuto::GetAssemblyBodies ( ) {
    struct AssemblyBodies * _result = 0;
    HRESULT _hr = get_AssemblyBodies(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyBodiesPtr(_result, false);
}

#pragma implementation_key(5484)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::CreateReference2 ( IDispatch * Object, const _variant_t & Entity ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_CreateReference2(Object, Entity, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5485)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::UpdatePathfinder ( enum AssemblyPathfinderUpdateConstants UpdateType ) {
    HRESULT _hr = raw_UpdatePathfinder(UpdateType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5486)
inline TGAssembly::ZonesPtr TGAssembly::_IAssemblyDocumentAuto::GetZones ( ) {
    struct Zones * _result = 0;
    HRESULT _hr = get_Zones(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ZonesPtr(_result, false);
}

#pragma implementation_key(5487)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::UpdateStructureCache ( enum UpdateStructureCacheConstants UpdateType ) {
    HRESULT _hr = raw_UpdateStructureCache(UpdateType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5488)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::DeleteStructureCache ( ) {
    HRESULT _hr = raw_DeleteStructureCache();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5489)
inline TGAssembly::FastenerSystemsPtr TGAssembly::_IAssemblyDocumentAuto::GetFastenerSystems ( ) {
    struct FastenerSystems * _result = 0;
    HRESULT _hr = get_FastenerSystems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FastenerSystemsPtr(_result, false);
}

#pragma implementation_key(5490)
inline TGAssembly::AssemblyGroupsPtr TGAssembly::_IAssemblyDocumentAuto::GetAssemblyGroups ( ) {
    struct AssemblyGroups * _result = 0;
    HRESULT _hr = get_AssemblyGroups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyGroupsPtr(_result, false);
}

#pragma implementation_key(5491)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::CheckInterference2 ( long NumElementsSet1, SAFEARRAY * * Set1, enum InterferenceStatusConstants * Status, const _variant_t & ComparisonMethod, const _variant_t & NumElementsSet2, const _variant_t & Set2, const _variant_t & AddInterferenceAsOccurrence, const _variant_t & ReportFilename, const _variant_t & ReportType, VARIANT * NumInterferences, VARIANT * InterferingPartsSet1, VARIANT * InterferingPartsOtherSet, VARIANT * ConfirmedInterference, VARIANT * InterferenceOccurrence, const _variant_t & IgnoreSameNominalDiaConstant, const _variant_t & IgnoreNonThreadVsThreadConstant ) {
    HRESULT _hr = raw_CheckInterference2(NumElementsSet1, Set1, Status, ComparisonMethod, NumElementsSet2, Set2, AddInterferenceAsOccurrence, ReportFilename, ReportType, NumInterferences, InterferingPartsSet1, InterferingPartsOtherSet, ConfirmedInterference, InterferenceOccurrence, IgnoreSameNominalDiaConstant, IgnoreNonThreadVsThreadConstant);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5492)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::CheckInterference3 ( long NumElementsSet1, SAFEARRAY * * Set1, enum InterferenceStatusConstants * Status, const _variant_t & ComparisonMethod, const _variant_t & NumElementsSet2, const _variant_t & Set2, const _variant_t & AddInterferenceAsOccurrence, const _variant_t & ReportFilename, const _variant_t & ReportType, VARIANT * NumInterferences, VARIANT * InterferingPartsSet1, VARIANT * InterferingPartsOtherSet, VARIANT * ConfirmedInterference, VARIANT * InterferenceOccurrence, const _variant_t & IgnoreSameNominalDiaConstant, const _variant_t & IgnoreNonThreadVsThreadConstant, VARIANT_BOOL bAllowConstructions, VARIANT_BOOL bShowInterferenceVolume ) {
    HRESULT _hr = raw_CheckInterference3(NumElementsSet1, Set1, Status, ComparisonMethod, NumElementsSet2, Set2, AddInterferenceAsOccurrence, ReportFilename, ReportType, NumInterferences, InterferingPartsSet1, InterferingPartsOtherSet, ConfirmedInterference, InterferenceOccurrence, IgnoreSameNominalDiaConstant, IgnoreNonThreadVsThreadConstant, bAllowConstructions, bShowInterferenceVolume);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5493)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::TranslateMultipleOccurrences ( long lNumberOfOccurrences, SAFEARRAY * * Occurrences, enum MoveMultipleMoveTypeConstants MoveType, enum MoveMultipleRelationshipConstants RelationshipMaintenance, double FromX, double FromY, double FromZ, double ToX, double ToY, double ToZ, VARIANT * MovedOrCopiedOccurrences ) {
    HRESULT _hr = raw_TranslateMultipleOccurrences(lNumberOfOccurrences, Occurrences, MoveType, RelationshipMaintenance, FromX, FromY, FromZ, ToX, ToY, ToZ, MovedOrCopiedOccurrences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5494)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::RotateMultipleOccurrences ( long lNumberOfOccurrences, SAFEARRAY * * Occurrences, enum MoveMultipleMoveTypeConstants MoveType, enum MoveMultipleRelationshipConstants RelationshipMaintenance, double AxisX, double AxisY, double AxisZ, double Angle, VARIANT * MovedOrCopiedOccurrences ) {
    HRESULT _hr = raw_RotateMultipleOccurrences(lNumberOfOccurrences, Occurrences, MoveType, RelationshipMaintenance, AxisX, AxisY, AxisZ, Angle, MovedOrCopiedOccurrences);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5495)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::GoalSeek ( _bstr_t NameTargetVariable, _bstr_t NameVariableToChange, double dTargetValue, double dTimeLimitInSecs, long NumIterationsLimit, double * dTimeElapsed, long * NumIterations, VARIANT_BOOL * TimeLimitExceeded, VARIANT_BOOL * IterationsLimitExceeded ) {
    HRESULT _hr = raw_GoalSeek(NameTargetVariable, NameVariableToChange, dTargetValue, dTimeLimitInSecs, NumIterationsLimit, dTimeElapsed, NumIterations, TimeLimitExceeded, IterationsLimitExceeded);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5496)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::GetPMI ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5497)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::PMI_ByModelState ( IDispatch * * PMIObj, enum TGPart::PMIModelStateConstants PMIModelState ) {
    HRESULT _hr = raw_PMI_ByModelState(PMIObj, PMIModelState);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5498)
inline _bstr_t TGAssembly::_IAssemblyDocumentAuto::GetDisplayName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DisplayName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5499)
inline TGAssembly::ItemNumbersPtr TGAssembly::_IAssemblyDocumentAuto::GetItemNumbers ( ) {
    struct ItemNumbers * _result = 0;
    HRESULT _hr = get_ItemNumbers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ItemNumbersPtr(_result, false);
}

#pragma implementation_key(5500)
inline TGPart::ConstructionsPtr TGAssembly::_IAssemblyDocumentAuto::GetConstructions ( ) {
    struct TGPart::Constructions * _result = 0;
    HRESULT _hr = get_Constructions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::ConstructionsPtr(_result, false);
}

#pragma implementation_key(5501)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::GetContainerDocumentAndOccurrenceOfIPADoc ( IDispatch * * ContainerDocument, IDispatch * * IPAOccurrence ) {
    HRESULT _hr = raw_GetContainerDocumentAndOccurrenceOfIPADoc(ContainerDocument, IPAOccurrence);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5502)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::GetTopDocumentAndSubOccurrenceOfIPADoc ( IDispatch * * TopDocument, IDispatch * * IPASubOccurrence ) {
    HRESULT _hr = raw_GetTopDocumentAndSubOccurrenceOfIPADoc(TopDocument, IPASubOccurrence);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5503)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::GetLinearStyles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_LinearStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5504)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::GetFillStyles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FillStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5505)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::GetHatchPatternStyles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_HatchPatternStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5506)
inline IUnknownPtr TGAssembly::_IAssemblyDocumentAuto::GetAssemblyFamilyEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_AssemblyFamilyEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5507)
inline IUnknownPtr TGAssembly::_IAssemblyDocumentAuto::GetAssemblyFamilyEvents2 ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_AssemblyFamilyEvents2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5508)
inline TGFramework::SectionViewsPtr TGAssembly::_IAssemblyDocumentAuto::GetSectionViews ( ) {
    struct TGFramework::SectionViews * _result = 0;
    HRESULT _hr = get_SectionViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::SectionViewsPtr(_result, false);
}

#pragma implementation_key(5509)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::Range ( double * x_min, double * y_min, double * z_min, double * x_max, double * y_max, double * z_max ) {
    HRESULT _hr = raw_Range(x_min, y_min, z_min, x_max, y_max, z_max);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5510)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::ReplaceComponents ( SAFEARRAY * * TargetComponents, _bstr_t ReplacementFilePath, enum ConstraintReplacementConstants ConstraintReplacementOption ) {
    HRESULT _hr = raw_ReplaceComponents(TargetComponents, ReplacementFilePath, ConstraintReplacementOption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5511)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetIsMultiCADDriven ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsMultiCADDriven(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5512)
inline TGAssembly::AssemblyCopiesPtr TGAssembly::_IAssemblyDocumentAuto::GetAssemblyCopies ( ) {
    struct AssemblyCopies * _result = 0;
    HRESULT _hr = get_AssemblyCopies(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyCopiesPtr(_result, false);
}

#pragma implementation_key(5513)
inline TGAssembly::AssemblyMirrorsPtr TGAssembly::_IAssemblyDocumentAuto::GetAssemblyMirrors ( ) {
    struct AssemblyMirrors * _result = 0;
    HRESULT _hr = get_AssemblyMirrors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AssemblyMirrorsPtr(_result, false);
}

#pragma implementation_key(5514)
inline TGAssembly::SimplifiedAssembliesPtr TGAssembly::_IAssemblyDocumentAuto::GetSimplifiedAssemblies ( ) {
    struct SimplifiedAssemblies * _result = 0;
    HRESULT _hr = get_SimplifiedAssemblies(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SimplifiedAssembliesPtr(_result, false);
}

#pragma implementation_key(5515)
inline IUnknownPtr TGAssembly::_IAssemblyDocumentAuto::GetAssemblyChangeEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_AssemblyChangeEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5516)
inline IUnknownPtr TGAssembly::_IAssemblyDocumentAuto::GetAssemblyConfigurationChangeEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_AssemblyConfigurationChangeEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5517)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::PathfinderScrollToSelection ( ) {
    HRESULT _hr = raw_PathfinderScrollToSelection();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5518)
inline TGFramework::InterDocumentUpdatePtr TGAssembly::_IAssemblyDocumentAuto::GetInterDocumentUpdate ( ) {
    struct TGFramework::InterDocumentUpdate * _result = 0;
    HRESULT _hr = get_InterDocumentUpdate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::InterDocumentUpdatePtr(_result, false);
}

#pragma implementation_key(5519)
inline TGPart::Sketches3DPtr TGAssembly::_IAssemblyDocumentAuto::GetSketches3D ( ) {
    struct TGPart::Sketches3D * _result = 0;
    HRESULT _hr = get_Sketches3D(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::Sketches3DPtr(_result, false);
}

#pragma implementation_key(5520)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::MeasureDistance ( IDispatch * Element1, IDispatch * Element2, enum TGPart::MeasureDistanceTypeConstants DistanceType, double * Distance, double * DX, double * DY, double * DZ, SAFEARRAY * * Point1, SAFEARRAY * * Point2 ) {
    HRESULT _hr = raw_MeasureDistance(Element1, Element2, DistanceType, Distance, DX, DY, DZ, Point1, Point2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5521)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::MeasureAngleEx ( IDispatch * Element1, IDispatch * Element2, IDispatch * Element3, double * Angle1, double * Angle2, double * Angle3, double * Angle4 ) {
    HRESULT _hr = raw_MeasureAngleEx(Element1, Element2, Element3, Angle1, Angle2, Angle3, Angle4);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5522)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::InquireElement ( IDispatch * Element, SAFEARRAY * * InPoint, const _variant_t & CoordinateSystem, SAFEARRAY * * Point, double * SurfaceArea, double * Volume, double * Length ) {
    HRESULT _hr = raw_InquireElement(Element, InPoint, CoordinateSystem, Point, SurfaceArea, Volume, Length);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5523)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::GetDrivenDrivingInfo ( IDispatch * Element, VARIANT * DrivenOccurrencesArray, VARIANT * DrivingOccurrencesArray ) {
    HRESULT _hr = raw_GetDrivenDrivingInfo(Element, DrivenOccurrencesArray, DrivingOccurrencesArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5524)
inline _bstr_t TGAssembly::_IAssemblyDocumentAuto::GetActiveConfiguration ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ActiveConfiguration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5525)
inline TGPart::SketchBlocksPtr TGAssembly::_IAssemblyDocumentAuto::GetBlocks ( ) {
    struct TGPart::SketchBlocks * _result = 0;
    HRESULT _hr = get_Blocks(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SketchBlocksPtr(_result, false);
}

#pragma implementation_key(5526)
inline IUnknownPtr TGAssembly::_IAssemblyDocumentAuto::GetAssemblyPhysicalPropertiesChangeEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_AssemblyPhysicalPropertiesChangeEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5527)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::GetTextStyles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_TextStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5528)
inline IDispatchPtr TGAssembly::_IAssemblyDocumentAuto::GetTextCharStyles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_TextCharStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5529)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::CreateCloneComponents ( SAFEARRAY * * ComponentsToClone, SAFEARRAY * * ReferenceGeometryFaces, SAFEARRAY * * CloneEnviornment, enum CloneComponentOptions CloneOptions, VARIANT_BOOL bCreateGroup, enum CloneMatchTypeOptions CloneMatchType, long * ErrorStatus ) {
    HRESULT _hr = raw_CreateCloneComponents(ComponentsToClone, ReferenceGeometryFaces, CloneEnviornment, CloneOptions, bCreateGroup, CloneMatchType, ErrorStatus);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5530)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::Get3dPrintInfo ( int * iNumberOfTriangles, int * iNumberOfPoints, int * iNumberOfEdges, double * dMeshSurfaceArea, double * dMeshVolume, double * dFileSize, double * dExportToleranceValue, double * dSurfacePlaneAngTol, enum TGPart::Print3DFileType Type ) {
    HRESULT _hr = raw_Get3dPrintInfo(iNumberOfTriangles, iNumberOfPoints, iNumberOfEdges, dMeshSurfaceArea, dMeshVolume, dFileSize, dExportToleranceValue, dSurfacePlaneAngTol, Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5531)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::PublishVirtualComponentsBIDM ( const _variant_t & ListOfDocumentNumbers, const _variant_t & ListOfRevisionIDs, const _variant_t & ListOfTitles ) {
    HRESULT _hr = raw_PublishVirtualComponentsBIDM(ListOfDocumentNumbers, ListOfRevisionIDs, ListOfTitles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5532)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::LoadUOMPreferences ( VARIANT_BOOL UpdateUomGlobals ) {
    HRESULT _hr = raw_LoadUOMPreferences(UpdateUomGlobals);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5533)
inline void TGAssembly::_IAssemblyDocumentAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5534)
inline TGFramework::SteeringWheelPtr TGAssembly::_IAssemblyDocumentAuto::GetSteeringWheel ( ) {
    struct TGFramework::SteeringWheel * _result = 0;
    HRESULT _hr = get_SteeringWheel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::SteeringWheelPtr(_result, false);
}

#pragma implementation_key(5535)
inline _bstr_t TGAssembly::_IAssemblyDocumentAuto::SaveModelAsBiDM ( IDispatch * Occurrence, _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    HRESULT _hr = raw_SaveModelAsBiDM(Occurrence, FilePath, DocumentNumber, Revision, Title, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5536)
inline void TGAssembly::_IAssemblyDocumentAuto::PutPerformanceMode ( VARIANT_BOOL pbUsePerformanceMode ) {
    HRESULT _hr = put_PerformanceMode(pbUsePerformanceMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5537)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetPerformanceMode ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PerformanceMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5538)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetHasMissingFiles ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasMissingFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5539)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::GetMissingFilesInfo ( VARIANT * missingFilesAndObjects ) {
    HRESULT _hr = raw_GetMissingFilesInfo(missingFilesAndObjects);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5540)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::CopytoPMI ( IDispatch * featureObj, enum TGPart::seCopytoPMIConstants Type ) {
    HRESULT _hr = raw_CopytoPMI(featureObj, Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5541)
inline TGAssembly::InternalComponentsPtr TGAssembly::_IAssemblyDocumentAuto::GetInternalComponents ( ) {
    struct InternalComponents * _result = 0;
    HRESULT _hr = get_InternalComponents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return InternalComponentsPtr(_result, false);
}

#pragma implementation_key(5542)
inline TGAssembly::EndCapsPtr TGAssembly::_IAssemblyDocumentAuto::GetEndCaps ( ) {
    struct EndCaps * _result = 0;
    HRESULT _hr = get_EndCaps(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return EndCapsPtr(_result, false);
}

#pragma implementation_key(5543)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::DragComponentTranslation ( IDispatch * OccurrenceToDrag, enum DragComponentAnalysisOptionConstants AnalysisOption, enum DragComponentCollisionOptionConstants CollisionOption, double Distance, VARIANT_BOOL ConsiderMovingParts, VARIANT_BOOL ConsiderInactiveParts, VARIANT_BOOL MoveGroundedParts, double DirectionX, double DirectionY, double DirectionZ, double Sensitivity, IDispatch * EdgeOrAxis, VARIANT_BOOL * CollisionFound, SAFEARRAY * * CollidingPart ) {
    HRESULT _hr = raw_DragComponentTranslation(OccurrenceToDrag, AnalysisOption, CollisionOption, Distance, ConsiderMovingParts, ConsiderInactiveParts, MoveGroundedParts, DirectionX, DirectionY, DirectionZ, Sensitivity, EdgeOrAxis, CollisionFound, CollidingPart);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5544)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::DragComponentRotation ( IDispatch * OccurrenceToDrag, enum DragComponentAnalysisOptionConstants AnalysisOption, enum DragComponentCollisionOptionConstants CollisionOption, double Angle, VARIANT_BOOL ConsiderMovingParts, VARIANT_BOOL ConsiderInactiveParts, VARIANT_BOOL MoveGroundedParts, double DirectionX, double DirectionY, double DirectionZ, double Sensitivity, IDispatch * EdgeOrAxis, VARIANT_BOOL * CollisionFound, SAFEARRAY * * CollidingPart ) {
    HRESULT _hr = raw_DragComponentRotation(OccurrenceToDrag, AnalysisOption, CollisionOption, Angle, ConsiderMovingParts, ConsiderInactiveParts, MoveGroundedParts, DirectionX, DirectionY, DirectionZ, Sensitivity, EdgeOrAxis, CollisionFound, CollidingPart);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5545)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::BeginCachedSolve ( ) {
    HRESULT _hr = raw_BeginCachedSolve();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5546)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::EndCachedSolve ( ) {
    HRESULT _hr = raw_EndCachedSolve();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5547)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::SetSuppressComponent ( IDispatch * OccurrenceToSuppress, struct SuppressComponent * * SuppressComponent ) {
    HRESULT _hr = raw_SetSuppressComponent(OccurrenceToSuppress, SuppressComponent);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5548)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::GetSuppressedComponents ( enum AssemblyComponentTypeConstants ComponentType, long * SuppressedComponentCount, SAFEARRAY * * SuppressedComponents ) {
    HRESULT _hr = raw_GetSuppressedComponents(ComponentType, SuppressedComponentCount, SuppressedComponents);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5549)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::CheckInterference4 ( long NumElementsSet1, SAFEARRAY * * Set1, enum InterferenceStatusConstants * Status, const _variant_t & ComparisonMethod, const _variant_t & NumElementsSet2, const _variant_t & Set2, const _variant_t & AddInterferenceAsOccurrence, const _variant_t & ReportFilename, const _variant_t & ReportType, VARIANT * NumInterferences, VARIANT * InterferingPartsSet1, VARIANT * InterferingPartsOtherSet, VARIANT * ConfirmedInterference, VARIANT * InterferenceOccurrence, const _variant_t & IgnoreSameNominalDiaConstant, const _variant_t & IgnoreNonThreadVsThreadConstant, VARIANT_BOOL ShowIntersectionVolume ) {
    HRESULT _hr = raw_CheckInterference4(NumElementsSet1, Set1, Status, ComparisonMethod, NumElementsSet2, Set2, AddInterferenceAsOccurrence, ReportFilename, ReportType, NumInterferences, InterferingPartsSet1, InterferingPartsOtherSet, ConfirmedInterference, InterferenceOccurrence, IgnoreSameNominalDiaConstant, IgnoreNonThreadVsThreadConstant, ShowIntersectionVolume);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5550)
inline TGPart::DecalsPtr TGAssembly::_IAssemblyDocumentAuto::GetDecals ( ) {
    struct TGPart::Decals * _result = 0;
    HRESULT _hr = get_Decals(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::DecalsPtr(_result, false);
}

#pragma implementation_key(5551)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::AutoExplode ( enum AutoExplodeSelectionTypeConstants AutoExplodeSelectionType, VARIANT_BOOL BindAllSubassemblies, enum AutoExplodeTechniqueConstants ExplodeTechnique, BSTR * ErrorCode, double SpreadDistance, IDispatch * Subassembly ) {
    HRESULT _hr = raw_AutoExplode(AutoExplodeSelectionType, BindAllSubassemblies, ExplodeTechnique, ErrorCode, SpreadDistance, Subassembly);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5552)
inline TGAssembly::AsmCADDirectsPtr TGAssembly::_IAssemblyDocumentAuto::GetAsmCADDirects ( ) {
    struct AsmCADDirects * _result = 0;
    HRESULT _hr = get_AsmCADDirects(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AsmCADDirectsPtr(_result, false);
}

#pragma implementation_key(5553)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetModelingInAssembly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ModelingInAssembly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5554)
inline VARIANT_BOOL TGAssembly::_IAssemblyDocumentAuto::GetAssemblyPreview ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AssemblyPreview(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5555)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::EditAssembly ( ) {
    HRESULT _hr = raw_EditAssembly();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5556)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::EditAssemblyWithOptions ( enum AssemblyFileOpenPartActivationOptions ePartActivation, enum AssemblyFileOpenSimplificationOptions ePartSimplification, enum AssemblyFileOpenSimplificationOptions eSubassemblySimplification, enum AssemblyFileOpenActivateChangedPartOptions eActivateChangedParts ) {
    HRESULT _hr = raw_EditAssemblyWithOptions(ePartActivation, ePartSimplification, eSubassemblySimplification, eActivateChangedParts);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5557)
inline TGPart::ReferencePointCloudsPtr TGAssembly::_IAssemblyDocumentAuto::GetReferencePointClouds ( ) {
    struct TGPart::ReferencePointClouds * _result = 0;
    HRESULT _hr = get_ReferencePointClouds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::ReferencePointCloudsPtr(_result, false);
}

#pragma implementation_key(5558)
inline TGPart::ProfileSetsPtr TGAssembly::_IAssemblyDocumentAuto::GetProfileSets ( ) {
    struct TGPart::ProfileSets * _result = 0;
    HRESULT _hr = get_ProfileSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::ProfileSetsPtr(_result, false);
}

#pragma implementation_key(5559)
inline TGPart::ModelPtr TGAssembly::_IAssemblyDocumentAuto::GetAssemblyModel ( ) {
    struct TGPart::Model * _result = 0;
    HRESULT _hr = get_AssemblyModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::ModelPtr(_result, false);
}

#pragma implementation_key(5560)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::PublishInternalComponents ( _bstr_t bstrFileLocation, _bstr_t bstrPartTemplatePath, _bstr_t bstrSheetmetalTemplatePath, _bstr_t bstrAsmTemplatePath, _bstr_t bstrMaterial ) {
    HRESULT _hr = raw_PublishInternalComponents(bstrFileLocation, bstrPartTemplatePath, bstrSheetmetalTemplatePath, bstrAsmTemplatePath, bstrMaterial);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5561)
inline HRESULT TGAssembly::_IAssemblyDocumentAuto::ArrangeDimensionsInSelectSet ( double dStackPitchMultiplier, VARIANT_BOOL bAssociative ) {
    HRESULT _hr = raw_ArrangeDimensionsInSelectSet(dStackPitchMultiplier, bAssociative);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IGroundRelation3dAuto wrapper method implementations
//

#pragma implementation_key(5562)
inline IDispatchPtr TGAssembly::_IGroundRelation3dAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5563)
inline IDispatchPtr TGAssembly::_IGroundRelation3dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5564)
inline HRESULT TGAssembly::_IGroundRelation3dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5565)
inline long TGAssembly::_IGroundRelation3dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5566)
inline enum TGFramework::ObjectType TGAssembly::_IGroundRelation3dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5567)
inline HRESULT TGAssembly::_IGroundRelation3dAuto::Select ( VARIANT_BOOL Replace ) {
    HRESULT _hr = raw_Select(Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5568)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::_IGroundRelation3dAuto::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5569)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::_IGroundRelation3dAuto::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    HRESULT _hr = get_DetailedStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5570)
inline TGAssembly::PartPtr TGAssembly::_IGroundRelation3dAuto::GetPart ( ) {
    struct Part * _result = 0;
    HRESULT _hr = get_Part(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartPtr(_result, false);
}

#pragma implementation_key(5571)
inline IDispatchPtr TGAssembly::_IGroundRelation3dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5572)
inline VARIANT_BOOL TGAssembly::_IGroundRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5573)
inline TGAssembly::OccurrencePtr TGAssembly::_IGroundRelation3dAuto::GetOccurrence ( ) {
    struct Occurrence * _result = 0;
    HRESULT _hr = get_Occurrence(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(5574)
inline VARIANT_BOOL TGAssembly::_IGroundRelation3dAuto::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5575)
inline void TGAssembly::_IGroundRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress ) {
    HRESULT _hr = put_Suppress(bSuppress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5576)
inline TGPart::SuppressVariablePtr TGAssembly::_IGroundRelation3dAuto::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_GetSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5577)
inline TGPart::SuppressVariablePtr TGAssembly::_IGroundRelation3dAuto::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    HRESULT _hr = raw_AddSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5578)
inline HRESULT TGAssembly::_IGroundRelation3dAuto::DeleteSuppressionVariable ( ) {
    HRESULT _hr = raw_DeleteSuppressionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5579)
inline VARIANT_BOOL TGAssembly::_IGroundRelation3dAuto::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasSuppressionVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface GroundRelation3d wrapper method implementations
//

#pragma implementation_key(5580)
inline IDispatchPtr TGAssembly::GroundRelation3d::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5581)
inline IDispatchPtr TGAssembly::GroundRelation3d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5582)
inline HRESULT TGAssembly::GroundRelation3d::Delete ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5583)
inline long TGAssembly::GroundRelation3d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5584)
inline enum TGFramework::ObjectType TGAssembly::GroundRelation3d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5585)
inline HRESULT TGAssembly::GroundRelation3d::Select ( VARIANT_BOOL Replace ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", Replace);
}

#pragma implementation_key(5586)
inline enum TGAssembly::Relation3dStatusConstants TGAssembly::GroundRelation3d::GetStatus ( ) {
    enum Relation3dStatusConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5587)
inline enum TGAssembly::Relation3dDetailedStatusConstants TGAssembly::GroundRelation3d::GetDetailedStatus ( ) {
    enum Relation3dDetailedStatusConstants _result;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5588)
inline TGAssembly::PartPtr TGAssembly::GroundRelation3d::GetPart ( ) {
    struct Part * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PartPtr(_result, false);
}

#pragma implementation_key(5589)
inline IDispatchPtr TGAssembly::GroundRelation3d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5590)
inline VARIANT_BOOL TGAssembly::GroundRelation3d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(5591)
inline TGAssembly::OccurrencePtr TGAssembly::GroundRelation3d::GetOccurrence ( ) {
    struct Occurrence * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return OccurrencePtr(_result, false);
}

#pragma implementation_key(5592)
inline VARIANT_BOOL TGAssembly::GroundRelation3d::GetSuppress ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5593)
inline void TGAssembly::GroundRelation3d::PutSuppress ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5594)
inline TGPart::SuppressVariablePtr TGAssembly::GroundRelation3d::GetSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5595)
inline TGPart::SuppressVariablePtr TGAssembly::GroundRelation3d::AddSuppressionVariable ( ) {
    struct TGPart::SuppressVariable * _result = 0;
    _com_dispatch_method(this, 0xfffe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TGPart::SuppressVariablePtr(_result, false);
}

#pragma implementation_key(5596)
inline HRESULT TGAssembly::GroundRelation3d::DeleteSuppressionVariable ( ) {
    return _com_dispatch_method(this, 0xffff, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5597)
inline VARIANT_BOOL TGAssembly::GroundRelation3d::HasSuppressionVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}
